var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.5","fields":["title","body"],"fieldVectors":[["title/components/AddTaskComponent.html",[0,0.272,1,0.807]],["body/components/AddTaskComponent.html",[0,0.414,1,1.141,2,0.189,3,0.161,4,0.861,5,0.861,6,0.861,7,0.861,8,0.134,9,4.634,10,3.565,11,1.807,12,1.008,13,1.876,14,0.861,15,2.243,16,1.86,17,2.207,18,1.409,19,1.302,20,3.957,21,1.421,22,3.281,23,0.282,24,0.647,25,3.675,26,3.675,27,4.412,28,0.202,29,1.815,30,3.201,31,0.647,32,2.539,33,1.911,34,4.153,35,1.008,36,1.028,37,1.531,38,2.242,39,5.177,40,0.883,41,3.281,42,0.469,43,0.034,44,0.64,45,0.69,46,0.428,47,2.169,48,0.848,49,1.097,50,2.169,51,2.169,52,3.946,53,2.169,54,2.169,55,1.195,56,1.195,57,0.935,58,1.607,59,2.169,60,2.169,61,1.876,62,0.578,63,0.388,64,1.568,65,1.568,66,1.248,67,1.807,68,1.13,69,0.94,70,1.248,71,0.79,72,0.161,73,0.011,74,1.888,75,1.568,76,1.39,77,1.807,78,1.555,79,1.248,80,1.807,81,2.373,82,1.568,83,2.169,84,1.807,85,1.248,86,2.169,87,2.169,88,2.169,89,1.807,90,2.169,91,2.169,92,1.807,93,2.169,94,3.675,95,2.828,96,2.733,97,2.103,98,3.281,99,2.733,100,3.281,101,2.527,102,1.568,103,1.13,104,1.13,105,1.39,106,0.94,107,2.061,108,1.028,109,1.876,110,1.57,111,1.39,112,1.421,113,1.568,114,1.555,115,1.13,116,4.153,117,4.153,118,3.297,119,1.807,120,1.39,121,0.79,122,1.807,123,1.888,124,2.733,125,1.39,126,1.13,127,2.733,128,1.807,129,1.568,130,1.39,131,0.94,132,1.807,133,1.39,134,1.39,135,1.39,136,1.39,137,1.568,138,1.807,139,1.39,140,2.169,141,1.39,142,0.666,143,1.302,144,1.195,145,1.751,146,0.861,147,0.861,148,0.612,149,0.861,150,0.561,151,0.861,152,0.561,153,0.861,154,0.561,155,0.861,156,0.561,157,0.861,158,0.561,159,0.861,160,0.612,161,0.861,162,0.725,163,0.861,164,0.561,165,0.861,166,0.017,167,0.017]],["title/components/AppComponent.html",[0,0.272,148,0.88]],["body/components/AppComponent.html",[0,0.45,1,0.689,2,0.233,3,0.198,4,1.058,5,1.058,6,1.058,7,1.058,8,0.164,14,1.058,15,2.346,16,1.977,17,1.058,18,0.631,19,1.515,21,1.654,23,0.496,24,0.753,28,0.218,29,1.625,31,0.753,33,2.111,35,1.173,36,1.263,37,1.649,40,0.722,42,0.577,43,0.034,44,0.789,45,0.556,46,0.526,48,0.477,49,0.891,62,0.52,63,0.477,68,1.388,69,1.154,72,0.198,73,0.014,78,1.263,102,2.761,106,1.154,107,2.538,108,1.81,109,1.263,110,1.771,111,1.708,114,1.263,115,1.388,120,1.708,121,1.878,123,2.197,126,1.989,131,1.154,142,0.819,143,1.515,144,1.774,145,1.934,146,1.058,147,1.058,148,1.374,149,1.058,150,0.689,151,1.058,152,0.689,153,1.058,154,0.689,155,1.058,156,0.689,157,1.058,158,0.689,159,1.058,160,0.752,161,1.058,162,0.891,163,1.058,164,0.689,165,1.058,166,0.02,167,0.02,168,2.22,169,3.181,170,4.462,171,3.818,172,3.717,173,5.527,174,5.527,175,3.818,176,2.665,177,2.22,178,1.927,179,1.534,180,5.367,181,2.665,182,5.367,183,2.665,184,1.534,185,2.665,186,1.708,187,2.665,188,1.388,189,2.665,190,2.665,191,2.665,192,1.708,193,2.665,194,2.665,195,5.367,196,2.968,197,2.22,198,2.448,199,2.22,200,4.462,201,3.717,202,2.665,203,2.665,204,2.665,205,4.462,206,2.665,207,2.665,208,1.927,209,2.665,210,2.665,211,4.471,212,2.665,213,2.22,214,2.22,215,2.665,216,2.665,217,2.665,218,2.665,219,3.181,220,2.665,221,2.665,222,2.665]],["title/modules/AppModule.html",[28,0.118,223,1.999]],["body/modules/AppModule.html",[0,0.294,2,0.294,3,0.25,8,0.207,16,1.125,28,0.191,37,1.772,38,2.5,43,0.034,62,0.637,63,0.603,64,2.433,69,1.458,72,0.333,73,0.017,142,1.034,148,1.753,156,1.493,166,0.023,167,0.023,177,2.803,178,3.245,179,1.936,223,4.076,224,1.936,225,3.651,226,3.651,227,3.651,228,2.803,229,2.803,230,2.803,231,2.803,232,2.803,233,3.32,234,3.005,235,3.245,236,2.157,237,1.936,238,3.365,239,4.487,240,2.582,241,4.487,242,3.365,243,4.487,244,2.157,245,3.365,246,2.433,247,2.803,248,2.803,249,2.803,250,3.738,251,2.803,252,3.365,253,2.803,254,3.365,255,3.365,256,2.803,257,3.365,258,2.803,259,3.365,260,3.365,261,2.157,262,3.365,263,2.433]],["title/classes/AppPage.html",[73,0.016,264,2.256]],["body/classes/AppPage.html",[2,0.393,3,0.334,8,0.278,23,0.586,31,1.065,40,0.874,43,0.033,48,1.073,62,0.455,72,0.334,73,0.028,144,1.641,166,0.028,167,0.028,169,3.755,179,2.593,264,3.904,265,3.755,266,5.993,267,5.993,268,4.507,269,4.507,270,3.755,271,4.507,272,4.507,273,4.507]],["title/modules/AppRoutingModule.html",[28,0.118,233,1.795]],["body/modules/AppRoutingModule.html",[0,0.463,2,0.382,3,0.325,8,0.27,28,0.166,43,0.034,62,0.599,63,0.784,70,2.518,72,0.394,73,0.023,156,1.372,166,0.027,167,0.027,233,3.052,240,3.052,258,3.645,274,4.376,275,3.645,276,2.973,277,4.419,278,2.279,279,4.128,280,3.836,281,1.593,282,4.376,283,4.376,284,4.376,285,4.376]],["title/classes/ConfigsSchema.html",[73,0.016,286,1.795]],["body/classes/ConfigsSchema.html",[2,0.309,3,0.263,8,0.218,12,1.088,23,0.46,24,0.916,28,0.134,40,0.948,43,0.033,44,0.573,45,0.852,48,0.927,57,0.699,58,1.29,62,0.357,72,0.344,73,0.028,166,0.024,167,0.024,184,2.039,188,2.972,281,1.29,286,2.98,287,2.271,288,3.283,289,3.283,290,2.972,291,2.972,292,3.283,293,2.173,294,3.543,295,3.543,296,3.543,297,3.543,298,3.543,299,3.543,300,2.243,301,2.418,302,2.562,303,1.886,304,2.418,305,2.562,306,2.562,307,2.562,308,2.039,309,2.562,310,1.845,311,2.039,312,1.68,313,3.357,314,2.562,315,2.562,316,2.271,317,2.562,318,2.271,319,2.562,320,2.562,321,2.271,322,2.562,323,2.271]],["title/components/ConfigurationComponent.html",[0,0.272,150,0.807]],["body/components/ConfigurationComponent.html",[0,0.422,1,0.589,2,0.199,3,0.169,4,0.903,5,0.903,6,0.903,7,0.903,8,0.14,12,1.045,13,1.931,14,0.903,15,2.268,16,1.883,17,0.903,18,0.539,19,1.35,21,1.473,23,0.296,24,0.671,28,0.216,29,1.483,30,3.24,31,0.671,32,2.601,33,1.958,34,4.228,35,0.699,36,1.079,37,1.559,40,0.895,42,0.493,43,0.034,44,0.659,45,0.704,46,0.449,48,0.866,49,1.511,52,3.804,55,0.829,56,0.829,57,0.803,58,0.829,61,1.931,62,0.531,63,0.407,65,1.645,66,1.309,68,1.185,69,0.986,71,0.829,72,0.169,73,0.012,74,1.957,75,1.645,76,1.459,78,1.079,81,2.46,82,1.645,85,1.309,95,3.254,96,2.834,97,2.18,99,2.834,101,2.494,106,1.473,107,2.354,108,1.079,109,2.143,110,1.616,111,1.459,112,0.986,113,1.645,114,1.613,115,1.185,116,4.228,117,4.92,118,3.393,119,1.896,120,1.459,121,0.829,122,1.896,123,1.957,124,2.834,125,1.459,126,1.185,127,2.834,128,1.896,129,1.645,130,1.459,131,0.986,132,1.896,133,1.459,134,1.459,135,1.459,136,1.459,137,1.645,139,1.459,141,2.18,142,0.699,143,1.35,144,1.239,145,1.794,146,0.903,147,0.903,148,0.642,149,0.903,150,1.169,151,0.903,152,0.589,153,0.903,154,0.589,155,0.903,156,0.589,157,0.903,158,0.589,159,0.903,160,0.642,161,0.903,162,0.761,163,0.903,164,0.589,165,0.903,166,0.018,167,0.018,186,2.18,192,2.897,236,3.254,290,1.772,291,1.772,324,1.896,325,2.945,326,3.268,327,4.073,328,3.401,329,4.519,330,4.519,331,3.401,332,2.276,333,2.276,334,2.276,335,2.276,336,2.276,337,2.276,338,2.276,339,1.309,340,1.896,341,2.276,342,2.276,343,1.896,344,2.276,345,2.276,346,2.276,347,1.896,348,2.276,349,2.276,350,2.276,351,2.276,352,2.276,353,2.276,354,2.276,355,2.276,356,3.401,357,2.276,358,2.46,359,2.46,360,3.765,361,3.401,362,3.401,363,3.401,364,1.079,365,1.309,366,1.645]],["title/components/DashboardComponent.html",[0,0.272,152,0.807]],["body/components/DashboardComponent.html",[0,0.386,1,0.482,2,0.163,3,0.138,4,0.739,5,0.739,6,0.739,7,0.739,8,0.115,12,0.896,13,1.705,14,0.739,15,2.159,16,1.785,17,0.739,18,0.441,19,1.158,21,1.264,23,0.242,24,0.575,28,0.192,29,1.31,30,2.92,31,0.575,32,2.343,33,1.764,35,0.572,36,0.883,37,1.44,40,0.793,42,0.632,43,0.034,44,0.659,45,0.643,46,0.575,48,0.934,49,0.976,55,1.483,56,1.9,61,2.096,62,0.411,63,0.334,68,0.97,69,0.807,71,0.678,72,0.138,73,0.01,74,1.679,78,0.883,79,1.072,85,1.072,101,1.93,103,2.303,108,2.806,109,0.883,110,1.158,112,1.264,114,1.383,115,0.97,121,1.483,123,1.072,125,1.194,126,0.97,131,0.807,142,0.572,143,1.158,144,1.063,145,1.616,146,0.739,147,0.739,148,0.525,149,0.739,150,0.482,151,0.739,152,1.053,153,0.739,154,0.482,155,0.739,156,0.482,157,0.739,158,0.482,159,0.739,160,0.525,161,0.739,162,0.623,163,0.739,164,0.482,165,0.739,166,0.015,167,0.015,184,1.679,186,1.87,188,1.52,192,2.61,196,1.072,208,2.11,288,1.679,289,1.679,290,2.121,291,2.121,292,1.679,293,1.745,325,2.601,339,1.072,358,1.347,359,2.11,360,4.227,364,0.883,367,1.552,368,2.11,369,3.597,370,2.918,371,4.071,372,2.918,373,1.863,374,1.863,375,1.863,376,2.918,377,4.902,378,5.733,379,1.863,380,2.997,381,3.597,382,4.67,383,1.863,384,2.431,385,1.863,386,1.863,387,1.863,388,1.863,389,1.863,390,1.863,391,4.421,392,1.863,393,1.863,394,2.997,395,1.863,396,1.863,397,1.863,398,1.863,399,1.863,400,1.863,401,1.863,402,1.863,403,1.863,404,1.347,405,1.863,406,1.863,407,1.863,408,1.863,409,2.834,410,2.918,411,2.431,412,2.918,413,2.918,414,4.071,415,2.918,416,2.918,417,2.918,418,5.074,419,3.669,420,2.918,421,5.074,422,2.918,423,2.918,424,2.918,425,2.918,426,2.918,427,2.918,428,2.918,429,1.863,430,2.431,431,1.863,432,1.863,433,1.863,434,1.863,435,1.863,436,1.863,437,2.11,438,1.863,439,2.11,440,1.552,441,4.071,442,1.863,443,1.863,444,1.863,445,1.863,446,1.87,447,1.863,448,1.863,449,1.552,450,1.863,451,5.074]],["title/interfaces/Deserializable.html",[300,1.351,452,1.999]],["body/interfaces/Deserializable.html",[2,0.414,3,0.352,8,0.292,23,0.616,31,1.098,40,0.768,42,1.027,43,0.032,44,0.768,45,0.69,46,0.936,72,0.352,166,0.029,167,0.029,300,2.411,310,2.899,312,2.249,452,3.568,453,3.952,454,3.568,455,4.744]],["title/components/HistoricalsComponent.html",[0,0.272,154,0.807]],["body/components/HistoricalsComponent.html",[0,0.388,1,0.487,2,0.164,3,0.14,4,0.748,5,0.748,6,0.748,7,0.748,8,0.116,12,0.904,13,1.718,14,0.748,15,2.165,16,1.791,17,0.748,18,0.446,19,1.168,21,1.275,23,0.245,24,0.581,29,1.32,30,2.931,31,0.581,32,2.357,33,1.775,35,0.579,36,1.396,37,1.365,40,0.939,42,0.784,43,0.034,44,0.847,45,0.807,46,0.715,48,0.937,49,1.212,55,1.32,56,1.618,57,0.372,58,0.686,61,1.718,62,0.54,63,0.337,69,0.816,71,0.686,72,0.14,73,0.01,74,1.694,85,1.084,101,1.396,103,0.981,104,0.981,105,1.208,106,1.275,107,1.533,108,1.396,109,1.396,110,1.168,112,1.775,113,1.362,114,1.718,115,2.134,131,1.275,133,1.208,134,1.208,135,1.208,136,1.208,137,1.362,139,1.208,141,1.887,142,0.579,143,1.168,144,1.072,145,1.626,146,0.748,147,0.748,148,0.531,149,0.748,150,0.487,151,0.748,152,0.487,153,0.748,154,1.06,155,0.748,156,0.487,157,0.748,158,0.487,159,0.748,160,0.531,161,1.168,162,1.37,163,0.748,164,0.487,165,0.748,166,0.015,167,0.015,186,1.887,188,1.887,192,2.626,196,1.084,234,2.564,256,1.569,278,0.981,288,1.084,289,1.084,290,1.887,291,1.887,292,1.084,303,1.618,359,2.129,364,0.893,365,1.694,366,1.362,409,1.887,439,1.362,446,1.208,456,1.569,457,2.129,458,3.624,459,2.944,460,4.097,461,3.413,462,3.786,463,4.097,464,4.097,465,4.097,466,4.097,467,4.097,468,4.097,469,4.097,470,2.944,471,2.944,472,2.944,473,1.884,474,1.884,475,1.884,476,2.944,477,3.234,478,3.925,479,1.884,480,2.944,481,1.884,482,1.884,483,2.944,484,1.884,485,1.884,486,1.884,487,1.884,488,1.884,489,1.884,490,1.884,491,1.884,492,2.129,493,1.362,494,1.884,495,2.944,496,1.569,497,1.884,498,1.569,499,2.944,500,2.944,501,2.944,502,2.944,503,2.944,504,2.944,505,1.884,506,1.884,507,1.362,508,1.884,509,1.884,510,1.884,511,1.884,512,1.884,513,4.445,514,1.884,515,1.884,516,1.884,517,1.884,518,1.569,519,1.569,520,1.569,521,1.884,522,2.944,523,2.944,524,1.884,525,1.884,526,1.884,527,2.944,528,1.884,529,1.884,530,1.884,531,1.884,532,2.453,533,1.884,534,1.884,535,1.884,536,1.884,537,1.884,538,1.884,539,1.884,540,1.884,541,2.944,542,2.944,543,1.569,544,1.884,545,1.362]],["title/components/HomeComponent.html",[0,0.272,156,0.807]],["body/components/HomeComponent.html",[0,0.467,1,0.761,2,0.257,3,0.218,4,1.168,5,1.168,6,1.168,7,1.168,8,0.181,12,1.258,13,2.233,14,1.168,15,2.392,16,1.995,17,1.168,18,0.697,19,1.625,21,1.774,23,0.382,24,0.808,28,0.223,29,1.072,31,0.808,33,2.206,35,1.258,36,1.395,37,1.703,40,0.824,42,0.886,43,0.034,44,0.824,45,0.685,46,0.808,48,0.733,49,1.37,62,0.475,63,0.527,68,1.533,69,1.275,72,0.218,73,0.015,78,1.395,101,1.395,103,1.533,104,1.533,105,1.886,106,1.275,107,2.133,109,1.395,110,1.869,111,1.886,112,1.275,120,2.625,121,2.018,123,2.357,126,1.533,130,2.625,131,1.275,139,1.886,141,2.625,142,0.904,143,1.625,144,1.491,145,2.021,146,1.168,147,1.168,148,0.83,149,1.168,150,0.761,151,1.168,152,0.761,153,1.168,154,0.761,155,1.168,156,1.317,157,1.168,158,0.761,159,1.168,160,0.83,161,1.168,162,0.984,163,1.168,164,0.761,165,1.168,166,0.021,167,0.021,172,3.924,196,2.357,197,2.452,198,1.886,199,3.412,201,2.452,280,2.962,281,1.072,293,1.37,340,2.452,365,1.693,366,2.128,409,2.625,446,1.886,507,3.683,546,2.452,547,4.711,548,4.096,549,4.096,550,4.096,551,2.943,552,2.943,553,2.943,554,2.943,555,2.943,556,2.943,557,4.096,558,2.962,559,4.096,560,2.943,561,2.943]],["title/modules/MaterialModule.html",[28,0.118,562,1.795]],["body/modules/MaterialModule.html",[2,0.329,3,0.28,8,0.232,28,0.143,43,0.033,62,0.538,63,0.676,72,0.359,73,0.019,166,0.025,167,0.025,240,2.783,250,4.446,562,2.783,563,3.773,564,5.337,565,5.337,566,5.337,567,5.337,568,5.337,569,5.337,570,5.337,571,5.337,572,5.337,573,5.337,574,5.337,575,5.337,576,5.337,577,5.337,578,5.337,579,5.337,580,5.337,581,5.337,582,5.337,583,5.337,584,5.337,585,5.337,586,5.337,587,5.337,588,5.337,589,5.337,590,5.337,591,5.337,592,5.337,593,5.337,594,5.337,595,3.143]],["title/classes/Module.html",[28,0.118,73,0.016]],["body/classes/Module.html",[2,0.295,3,0.251,8,0.209,12,1.383,23,0.44,24,0.888,28,0.17,31,0.888,40,0.97,42,0.732,43,0.034,44,0.91,45,0.858,46,0.667,48,1.006,57,0.667,58,1.843,62,0.341,72,0.334,73,0.028,166,0.023,167,0.023,184,1.947,188,2.346,281,1.965,286,3.106,287,2.169,288,2.592,289,2.592,290,2.346,291,2.346,292,2.592,293,2.112,300,2.338,301,2.811,302,2.447,303,2.148,304,2.346,305,2.447,306,3.903,307,3.903,308,3.106,309,3.903,310,2.346,311,1.947,312,2.135,313,3.257,314,2.447,315,3.903,316,2.169,317,2.447,318,2.169,319,2.447,320,2.447,321,2.169,322,2.447,323,2.169,454,2.887,596,3.384,597,3.384,598,3.384,599,3.384,600,3.384,601,3.384,602,3.384,603,3.384]],["title/injectables/ModuleService.html",[37,0.958,604,1.351]],["body/injectables/ModuleService.html",[2,0.247,3,0.21,8,0.175,18,0.671,23,0.368,24,0.786,28,0.226,29,1.031,31,0.786,35,0.87,37,1.225,38,2.437,40,0.968,42,1.084,43,0.034,44,0.811,45,0.836,46,0.988,48,1.06,49,1.333,55,1.824,56,1.824,57,0.988,62,0.568,63,0.507,71,1.452,72,0.21,73,0.015,76,3.21,79,1.63,106,1.227,121,1.68,166,0.021,167,0.021,244,1.815,261,2.556,278,2.077,281,1.452,293,1.953,303,1.452,304,2.403,364,1.343,604,1.999,605,2.048,606,5.008,607,5.008,608,5.008,609,3.622,610,4.172,611,5.008,612,3.987,613,3.987,614,2.883,615,2.048,616,3.622,617,3.987,618,2.883,619,2.832,620,3.743,621,2.832,622,2.832,623,3.987,624,2.832,625,3.987,626,2.832,627,3.987,628,2.832,629,3.987,630,2.832,631,3.987,632,2.832,633,3.987,634,2.832,635,2.556,636,2.359,637,2.359,638,2.359,639,2.359,640,2.556,641,2.048,642,2.832,643,2.832,644,2.832,645,2.832,646,2.832,647,2.832,648,2.832,649,2.832,650,2.832,651,2.832,652,3.987,653,2.359]],["title/components/ModulesComponent.html",[0,0.272,158,0.807]],["body/components/ModulesComponent.html",[0,0.417,1,0.573,2,0.193,3,0.164,4,0.879,5,0.879,6,0.879,7,0.879,8,0.136,12,1.024,13,1.9,14,0.879,15,2.254,16,1.87,17,0.879,18,0.949,19,1.322,21,1.444,23,0.288,24,0.657,28,0.218,29,1.741,30,3.087,31,0.657,32,2.565,33,1.931,35,1.024,36,1.05,37,1.543,40,0.774,42,0.479,43,0.034,44,0.649,45,0.583,46,0.437,48,0.597,49,1.114,55,1.213,56,1.213,61,2.471,62,0.482,63,0.396,68,1.153,69,0.959,70,1.274,71,0.806,72,0.164,73,0.011,74,1.918,75,1.601,76,1.419,77,1.845,78,1.05,79,1.274,85,1.274,101,1.58,103,2.322,104,1.153,110,1.322,112,0.959,121,2.202,142,0.68,143,1.322,144,1.213,145,1.769,146,0.879,147,0.879,148,0.624,149,0.879,150,0.573,151,0.879,152,0.573,153,0.879,154,0.573,155,0.879,156,0.573,157,0.879,158,1.153,159,0.879,160,0.624,161,0.879,162,0.74,163,0.879,164,0.573,165,0.879,166,0.017,167,0.017,196,1.274,211,2.776,276,2.087,280,2.41,325,2.898,326,2.41,368,2.41,409,2.136,437,1.601,457,2.41,507,2.41,545,1.601,558,2.41,654,1.845,655,4.007,656,3.332,657,4.458,658,3.332,659,2.214,660,2.214,661,2.214,662,2.214,663,2.214,664,3.332,665,5.213,666,3.332,667,4.458,668,2.214,669,6.205,670,6.458,671,4.794,672,5.364,673,5.754,674,2.214,675,4.007,676,3.332,677,3.332,678,3.332,679,2.214,680,4.458,681,2.214,682,4.007,683,2.214,684,3.332,685,2.214,686,2.214,687,4.007,688,2.214,689,2.214,690,2.214,691,4.458,692,3.332,693,3.332]],["title/modules/ModulesModule.html",[28,0.118,694,1.999]],["body/modules/ModulesModule.html",[1,1.497,2,0.296,3,0.252,8,0.209,10,2.177,28,0.192,43,0.034,62,0.637,63,0.608,66,1.955,72,0.335,73,0.017,142,1.043,150,1.497,152,1.497,154,1.497,158,1.497,160,1.632,162,1.136,164,1.497,166,0.023,167,0.023,224,1.955,225,3.668,226,2.456,227,2.456,235,3.265,236,2.177,237,1.955,240,2.598,251,2.83,562,3.329,694,4.131,695,2.83,696,2.83,697,2.83,698,3.329,699,3.397,700,4.515,701,2.83,702,2.83,703,4.515,704,4.515,705,3.397,706,2.83,707,2.83,708,2.83,709,2.83,710,2.83,711,2.83,712,4.515,713,2.456,714,3.397]],["title/modules/ModulesRoutingModule.html",[28,0.118,698,1.795]],["body/modules/ModulesRoutingModule.html",[0,0.525,1,1.229,2,0.321,3,0.273,8,0.226,10,2.354,18,1.248,28,0.139,43,0.034,57,0.724,62,0.622,63,0.658,70,2.114,72,0.353,73,0.019,150,1.229,152,1.229,154,1.229,158,1.229,164,1.229,166,0.024,167,0.024,240,2.735,275,3.06,276,2.745,277,3.96,278,1.913,279,4.351,326,3.437,368,2.656,457,3.437,462,4.173,698,2.735,702,3.06,706,3.06,707,3.06,708,3.06,709,3.06,710,3.06,711,3.06,715,3.673,716,3.673,717,5.771,718,3.673,719,3.673,720,3.673]],["title/classes/Record.html",[73,0.016,477,1.795]],["body/classes/Record.html",[2,0.319,3,0.271,8,0.225,12,1.454,23,0.474,24,0.934,28,0.138,31,0.934,40,0.986,42,1.025,43,0.033,44,0.766,45,0.859,46,0.934,48,1.09,57,0.72,58,2.188,62,0.478,72,0.271,73,0.024,166,0.024,167,0.024,281,2.024,293,1.974,300,2.408,301,2.896,303,1.913,308,3.199,310,2.466,311,2.101,312,2.244,394,3.041,454,3.035,477,2.724,478,3.041,721,3.041,722,4.631,723,5.559,724,5.559,725,4.734,726,3.651,727,3.651,728,3.651,729,3.651,730,3.651,731,3.651,732,3.651,733,4.734,734,3.651,735,3.041,736,3.041,737,3.651,738,3.651,739,3.651]],["title/injectables/RecordService.html",[234,1.625,604,1.351]],["body/injectables/RecordService.html",[2,0.341,3,0.29,8,0.241,23,0.507,24,0.975,29,1.974,31,0.975,35,1.199,40,0.878,42,1.07,43,0.034,44,0.8,45,0.789,46,0.975,48,0.885,55,1.421,56,1.421,57,0.77,62,0.593,63,0.699,71,1.421,72,0.29,73,0.02,166,0.025,167,0.025,234,2.574,244,2.502,281,1.421,293,1.813,303,1.799,339,2.246,477,2.246,604,2.349,609,4.122,615,2.822,616,4.122,618,3.573,620,3.476,635,2.502,740,3.252,741,4.941,742,4.941,743,4.941,744,3.903,745,4.941,746,3.252,747,3.252,748,3.903,749,3.252,750,3.903,751,3.252,752,3.252,753,3.903]],["title/components/SparklineComponent.html",[0,0.272,160,0.88]],["body/components/SparklineComponent.html",[0,0.338,1,0.371,2,0.125,3,0.106,4,0.939,5,0.569,6,0.569,7,0.569,8,0.088,14,0.569,15,2,16,1.541,17,0.569,18,0.34,19,0.939,23,0.307,24,0.467,31,0.467,40,0.954,42,0.838,43,0.034,44,0.713,45,0.786,46,0.764,48,1.018,49,1.171,55,1.41,56,1.967,57,0.283,58,1.275,62,0.391,63,0.257,72,0.106,73,0.007,97,0.92,104,1.824,108,1.66,109,1.122,110,0.939,112,2.13,114,1.836,121,1.836,125,0.92,130,2.244,131,1.517,133,3.152,142,0.441,143,0.939,144,0.861,145,1.389,146,0.569,147,0.569,148,0.405,149,0.569,150,0.371,151,0.569,152,0.371,153,0.569,154,0.371,155,0.569,156,0.371,157,0.569,158,0.371,159,0.569,160,0.987,161,1.389,162,1.394,163,0.569,164,0.371,165,0.569,166,0.016,167,0.012,198,0.92,208,1.038,213,3.672,237,1.361,261,3.152,263,2.801,278,2.487,279,2.532,293,1.009,303,1.875,304,1.824,312,2.184,365,1.737,404,1.711,411,2.514,437,1.711,439,1.038,446,0.92,449,2.514,461,2.514,492,1.038,493,1.711,532,3.226,543,2.514,614,2.532,713,1.711,754,1.195,755,2.366,756,3.018,757,2.366,758,2.366,759,2.366,760,2.366,761,2.366,762,3.018,763,3.501,764,3.501,765,3.501,766,3.501,767,3.501,768,3.501,769,3.501,770,3.501,771,3.501,772,2.366,773,3.018,774,3.501,775,2.366,776,3.501,777,2.366,778,2.366,779,3.501,780,2.366,781,3.018,782,3.018,783,3.018,784,3.018,785,1.435,786,1.435,787,3.018,788,1.435,789,3.873,790,1.435,791,1.435,792,2.366,793,1.435,794,1.435,795,1.435,796,2.366,797,1.435,798,5.149,799,1.435,800,2.366,801,1.435,802,2.366,803,1.435,804,1.435,805,2.366,806,1.435,807,1.435,808,3.873,809,1.435,810,3.501,811,1.435,812,1.435,813,1.435,814,1.435,815,1.435,816,1.435,817,1.435,818,1.435,819,1.435,820,1.435,821,1.435,822,1.435,823,3.018,824,2.366,825,2.366,826,4.607,827,2.366,828,1.435,829,1.435,830,1.435,831,1.435,832,1.435,833,1.435,834,1.435,835,1.435,836,1.435,837,1.435,838,1.435,839,1.435,840,1.435,841,1.435,842,3.018,843,1.435,844,1.435,845,2.366,846,1.435,847,2.366,848,1.435,849,1.435,850,1.435,851,1.435,852,1.435,853,1.435,854,1.435,855,1.435,856,1.435,857,1.435,858,1.435,859,1.435,860,4.168,861,1.435,862,2.366,863,3.501,864,2.366,865,1.435,866,1.435,867,1.435,868,2.366,869,1.435,870,1.435,871,1.435,872,1.435,873,1.435,874,3.018,875,3.501,876,3.018,877,1.435,878,1.435,879,3.018,880,1.435,881,1.435,882,1.435,883,1.435,884,1.435,885,1.435,886,1.435,887,1.435,888,1.435,889,1.435,890,2.366,891,2.366,892,2.366,893,2.366,894,2.366,895,1.435,896,2.366,897,2.366,898,3.472,899,1.435,900,2.366,901,2.366,902,2.366,903,2.366,904,2.366,905,4.168,906,1.435,907,1.435,908,2.366,909,3.501,910,1.435,911,1.435,912,1.435,913,2.366,914,1.435,915,1.435,916,1.435,917,1.435,918,1.435,919,1.435,920,2.366,921,2.366,922,2.366,923,1.435,924,2.366,925,2.366,926,1.435,927,1.435,928,1.435,929,1.435,930,1.435,931,1.435,932,1.435,933,2.366,934,1.435,935,1.435]],["title/classes/StatusSchema.html",[73,0.016,301,1.625]],["body/classes/StatusSchema.html",[2,0.293,3,0.249,8,0.207,12,1.03,23,0.436,24,0.883,28,0.127,40,0.98,43,0.033,44,0.543,45,0.881,46,0.883,48,0.902,57,0.661,58,1.221,62,0.338,72,0.332,73,0.028,166,0.023,167,0.023,184,3.094,188,2.918,281,1.221,286,2.576,287,2.149,288,3.224,289,3.224,290,2.918,291,2.918,292,3.224,293,2.164,300,2.183,301,2.625,302,3.888,303,2.04,304,3.002,305,3.888,306,2.424,307,2.424,308,1.929,309,2.424,310,1.746,311,1.929,312,1.589,313,3.237,314,2.424,315,2.424,316,2.149,317,2.424,318,2.149,319,2.424,320,2.424,321,2.149,322,2.424,323,2.149,936,3.353,937,3.353,938,3.353,939,3.353,940,3.353,941,3.353,942,3.353,943,3.353,944,3.353]],["title/classes/Task.html",[18,0.739,73,0.016]],["body/classes/Task.html",[2,0.273,3,0.232,8,0.193,12,1.312,18,1.011,23,0.406,24,0.842,28,0.238,31,0.842,35,1.312,40,0.977,42,0.924,43,0.034,44,0.691,45,0.905,46,0.842,48,0.56,57,0.842,58,2.277,61,2.677,62,0.431,72,0.232,73,0.022,78,1.482,94,4.972,166,0.022,167,0.022,281,1.903,293,1.888,300,2.264,303,2.237,304,2.533,308,3.007,310,2.224,311,1.799,312,2.024,316,2.737,318,2.004,321,2.004,323,2.004,454,2.737,545,3.088,722,4.353,735,3.557,736,2.604,945,2.604,946,5.226,947,3.126,948,4.27,949,3.126,950,3.126,951,3.126,952,3.126,953,3.126,954,3.126,955,3.126,956,3.126,957,3.126,958,3.126,959,3.126,960,3.126,961,3.126,962,3.126,963,3.126,964,3.126,965,3.126,966,3.126]],["title/injectables/TaskService.html",[38,1.351,604,1.351]],["body/injectables/TaskService.html",[2,0.243,3,0.206,8,0.171,18,1.412,23,0.361,24,0.776,28,0.188,29,1.663,31,0.776,35,0.854,38,1.705,40,0.941,42,1.135,43,0.034,44,0.848,45,0.846,46,1.034,48,1.055,49,0.93,55,1.663,56,1.663,57,1.073,61,1.865,62,0.549,63,0.498,71,1.012,72,0.206,73,0.014,79,1.6,89,3.278,92,2.316,106,1.204,166,0.02,167,0.02,244,1.782,278,1.448,281,1.012,293,1.82,303,1.433,339,1.6,364,1.318,462,3.592,518,2.316,519,2.316,520,2.316,604,1.979,609,3.592,610,4.138,614,2.845,615,2.01,616,3.592,618,2.845,620,3.36,635,2.522,636,2.316,637,4.534,638,2.316,639,2.316,640,1.782,641,2.01,653,2.316,746,2.316,747,2.316,749,3.278,751,2.316,752,2.316,967,2.01,968,4.967,969,3.935,970,3.935,971,3.935,972,2.78,973,3.935,974,2.78,975,2.78,976,3.935,977,2.78,978,3.935,979,2.78,980,2.78,981,3.935,982,2.78,983,2.78,984,2.78,985,2.78,986,3.935,987,2.78,988,3.935,989,2.78,990,2.316,991,2.78,992,2.78,993,2.78,994,2.78,995,2.78,996,3.935,997,2.78,998,2.78,999,2.78,1000,2.78,1001,2.78,1002,2.78,1003,2.78,1004,2.78,1005,2.78,1006,2.78,1007,3.935,1008,2.78,1009,2.78]],["title/components/TasksComponent.html",[0,0.272,164,0.807]],["body/components/TasksComponent.html",[0,0.452,1,0.697,2,0.235,3,0.2,4,1.069,5,1.069,6,1.069,7,1.069,8,0.166,12,1.182,13,2.128,14,1.069,15,2.351,16,1.958,17,1.781,18,1.44,19,1.527,21,1.666,23,0.35,24,0.759,25,4.079,26,4.079,31,0.759,33,2.121,35,0.827,38,2.333,40,0.872,42,0.833,43,0.034,44,0.792,45,0.754,46,0.759,48,0.689,49,1.286,52,4.173,57,0.759,58,1.401,62,0.543,63,0.482,64,1.947,65,1.947,66,1.55,67,2.243,71,0.981,72,0.2,73,0.014,80,2.243,81,2.782,82,1.947,84,2.243,101,2.128,102,1.947,103,2.004,104,1.403,105,2.466,107,1.403,110,1.527,112,1.666,114,1.824,115,1.403,121,1.634,126,1.403,131,1.166,134,1.726,135,3.139,136,1.726,138,2.243,142,0.827,143,1.527,144,1.401,145,1.943,146,1.069,147,1.069,148,0.759,149,1.069,150,0.697,151,1.069,152,0.697,153,1.069,154,0.697,155,1.069,156,0.697,157,1.069,158,0.697,159,1.069,160,0.759,161,1.069,162,0.9,163,1.069,164,1.266,165,1.069,166,0.02,167,0.02,198,2.877,339,1.55,343,2.243,364,1.277,365,1.55,380,2.243,382,2.243,419,2.782,440,3.205,620,3.139,671,2.243,898,2.243,990,3.205,1010,2.243,1011,4.488,1012,3.847,1013,3.847,1014,2.693,1015,3.847,1016,3.847,1017,2.693,1018,2.693,1019,2.693,1020,2.693,1021,2.693,1022,2.693,1023,2.693,1024,2.693,1025,2.693,1026,3.847,1027,2.693,1028,4.488,1029,4.488,1030,2.693,1031,2.693,1032,2.693,1033,3.847,1034,2.693,1035,2.693,1036,2.693,1037,2.693]],["title/coverage.html",[1038,3.552]],["body/coverage.html",[0,0.532,1,0.894,8,0.213,9,2.878,10,2.215,11,2.878,18,0.818,28,0.131,37,1.061,38,1.497,43,0.034,45,0.503,57,0.681,73,0.031,95,2.215,121,2.365,129,2.499,148,0.974,150,0.894,152,0.894,154,0.894,156,0.894,158,0.894,160,0.974,164,0.894,166,0.024,167,0.024,168,2.878,234,1.8,253,2.878,264,2.499,265,2.878,286,1.988,287,3.279,300,1.497,301,1.8,324,2.878,367,2.878,452,2.215,453,2.878,456,2.878,477,1.988,546,2.878,604,2.216,605,3.302,640,2.927,654,2.878,721,2.878,740,2.878,754,2.878,945,2.878,967,3.302,1010,2.878,1038,2.878,1039,3.455,1040,3.455,1041,3.455,1042,3.455,1043,4.567,1044,4.567,1045,4.567,1046,4.567,1047,5.442,1048,3.455,1049,3.455,1050,3.455,1051,3.455,1052,4.204,1053,5.814,1054,3.455,1055,3.455,1056,3.455,1057,3.455,1058,3.455,1059,2.878,1060,3.804,1061,2.878,1062,3.804,1063,2.878,1064,3.455]],["title/dependencies.html",[224,2.16,1065,2.602]],["body/dependencies.html",[43,0.034,63,0.756,66,2.43,70,2.43,71,1.538,162,1.412,166,0.027,167,0.027,178,3.753,179,2.986,219,3.518,224,2.43,246,3.053,247,3.518,248,3.518,249,3.518,492,3.053,493,3.053,496,3.518,498,3.518,595,3.518,701,3.518,713,3.053,1066,4.222,1067,4.222,1068,4.222,1069,5.19,1070,6.267,1071,4.222,1072,4.222,1073,4.222,1074,4.222,1075,4.222,1076,4.222,1077,4.222,1078,4.222,1079,4.222,1080,4.222,1081,4.222,1082,4.222,1083,4.222,1084,4.222,1085,4.222,1086,4.222,1087,4.222,1088,4.222]],["title/index.html",[23,0.338,1089,2.602,1090,2.602]],["body/index.html",[0,0.481,3,0.3,8,0.249,16,1.352,43,0.026,44,0.654,57,0.797,166,0.026,167,0.026,237,2.326,246,3.985,270,3.368,419,2.924,558,2.924,1091,5.052,1092,5.772,1093,5.511,1094,4.043,1095,4.043,1096,4.043,1097,5.052,1098,6.148,1099,6.148,1100,4.043,1101,4.043,1102,4.043,1103,4.043,1104,4.043,1105,4.043,1106,4.043,1107,4.043,1108,4.043,1109,5.511,1110,4.043,1111,5.942,1112,4.043,1113,4.043,1114,4.043,1115,4.043,1116,4.043,1117,4.043,1118,3.368,1119,5.052,1120,5.942,1121,5.052,1122,5.052,1123,4.043,1124,5.772,1125,4.043,1126,4.043,1127,5.511,1128,4.043,1129,4.043,1130,4.043]],["title/modules.html",[28,0.161]],["body/modules.html",[28,0.181,43,0.029,166,0.029,167,0.029,179,3.218,214,4.937,223,3.065,233,2.751,430,4.937,562,2.751,694,3.065,698,2.751,1131,5.592,1132,5.592,1133,6.225]],["title/overview.html",[1134,3.552]],["body/overview.html",[0,0.324,1,1.37,28,0.181,37,1.626,38,2.294,43,0.033,72,0.275,73,0.019,97,2.379,108,1.759,142,1.14,148,1.701,150,1.37,152,1.37,154,1.37,156,1.37,158,1.37,160,1.493,164,1.37,166,0.025,167,0.025,223,4.093,224,2.135,225,2.683,226,2.683,227,2.683,228,3.091,229,3.091,230,3.091,231,3.091,232,3.091,233,3.047,234,2.758,235,3.46,236,2.379,237,2.135,276,1.933,347,3.091,358,2.683,404,2.683,452,2.379,562,3.047,604,1.607,694,4.147,695,3.091,696,3.091,697,3.091,698,3.047,1134,3.091,1135,3.711]],["title/routes.html",[276,2.22]],["body/routes.html",[43,0.03,166,0.03,167,0.03,276,2.644]],["title/miscellaneous/variables.html",[1052,2.714,1136,2.167]],["body/miscellaneous/variables.html",[23,0.523,43,0.034,45,0.894,55,2.161,56,2.161,57,0.994,95,3.525,106,2.182,166,0.026,167,0.026,261,2.58,263,3.643,364,2.388,384,5.174,605,2.911,635,3.229,640,3.881,641,3.643,967,2.911,1052,2.911,1059,3.353,1060,5.043,1061,3.353,1062,3.353,1063,4.581,1118,4.197,1136,3.353,1137,5.038,1138,4.025,1139,4.025,1140,4.025,1141,4.025,1142,4.025,1143,4.025]]],"invertedIndex":[["",{"_index":43,"title":{},"body":{"components/AddTaskComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"classes/ConfigsSchema.html":{},"components/ConfigurationComponent.html":{},"components/DashboardComponent.html":{},"interfaces/Deserializable.html":{},"components/HistoricalsComponent.html":{},"components/HomeComponent.html":{},"modules/MaterialModule.html":{},"classes/Module.html":{},"injectables/ModuleService.html":{},"components/ModulesComponent.html":{},"modules/ModulesModule.html":{},"modules/ModulesRoutingModule.html":{},"classes/Record.html":{},"injectables/RecordService.html":{},"components/SparklineComponent.html":{},"classes/StatusSchema.html":{},"classes/Task.html":{},"injectables/TaskService.html":{},"components/TasksComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":121,"title":{},"body":{"components/AddTaskComponent.html":{},"components/AppComponent.html":{},"components/ConfigurationComponent.html":{},"components/DashboardComponent.html":{},"components/HomeComponent.html":{},"injectables/ModuleService.html":{},"components/ModulesComponent.html":{},"components/SparklineComponent.html":{},"components/TasksComponent.html":{},"coverage.html":{}}}],["0.05",{"_index":928,"title":{},"body":{"components/SparklineComponent.html":{}}}],["0.07",{"_index":1032,"title":{},"body":{"components/TasksComponent.html":{}}}],["0.2.10",{"_index":1079,"title":{},"body":{"dependencies.html":{}}}],["0.25",{"_index":672,"title":{},"body":{"components/ModulesComponent.html":{}}}],["0.3",{"_index":680,"title":{},"body":{"components/ModulesComponent.html":{}}}],["0.45em",{"_index":674,"title":{},"body":{"components/ModulesComponent.html":{}}}],["0.5",{"_index":1035,"title":{},"body":{"components/TasksComponent.html":{}}}],["0.5em",{"_index":450,"title":{},"body":{"components/DashboardComponent.html":{}}}],["0.6",{"_index":912,"title":{},"body":{"components/SparklineComponent.html":{}}}],["0.6.1",{"_index":1078,"title":{},"body":{"dependencies.html":{}}}],["0.69em",{"_index":681,"title":{},"body":{"components/ModulesComponent.html":{}}}],["0.8",{"_index":899,"title":{},"body":{"components/SparklineComponent.html":{}}}],["0.8.26",{"_index":1088,"title":{},"body":{"dependencies.html":{}}}],["0.9",{"_index":408,"title":{},"body":{"components/DashboardComponent.html":{}}}],["0/1",{"_index":1053,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":1047,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":1048,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":1051,"title":{},"body":{"coverage.html":{}}}],["0/17",{"_index":1056,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1044,"title":{},"body":{"coverage.html":{}}}],["0/27",{"_index":1057,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1042,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1043,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1054,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1058,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1045,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1055,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":1046,"title":{},"body":{"coverage.html":{}}}],["000",{"_index":929,"title":{},"body":{"components/SparklineComponent.html":{}}}],["00ced1",{"_index":689,"title":{},"body":{"components/ModulesComponent.html":{}}}],["0px",{"_index":442,"title":{},"body":{"components/DashboardComponent.html":{}}}],["1",{"_index":108,"title":{},"body":{"components/AddTaskComponent.html":{},"components/AppComponent.html":{},"components/ConfigurationComponent.html":{},"components/DashboardComponent.html":{},"components/HistoricalsComponent.html":{},"components/SparklineComponent.html":{},"overview.html":{}}}],["1.05em",{"_index":686,"title":{},"body":{"components/ModulesComponent.html":{}}}],["1.2.2",{"_index":1083,"title":{},"body":{"dependencies.html":{}}}],["1.5em",{"_index":675,"title":{},"body":{"components/ModulesComponent.html":{}}}],["1.95em",{"_index":668,"title":{},"body":{"components/ModulesComponent.html":{}}}],["10",{"_index":394,"title":{},"body":{"components/DashboardComponent.html":{},"classes/Record.html":{}}}],["100",{"_index":409,"title":{},"body":{"components/DashboardComponent.html":{},"components/HistoricalsComponent.html":{},"components/HomeComponent.html":{},"components/ModulesComponent.html":{}}}],["1000",{"_index":321,"title":{},"body":{"classes/ConfigsSchema.html":{},"classes/Module.html":{},"classes/StatusSchema.html":{},"classes/Task.html":{}}}],["100m",{"_index":901,"title":{},"body":{"components/SparklineComponent.html":{}}}],["10px",{"_index":441,"title":{},"body":{"components/DashboardComponent.html":{}}}],["11em",{"_index":691,"title":{},"body":{"components/ModulesComponent.html":{}}}],["12px",{"_index":914,"title":{},"body":{"components/SparklineComponent.html":{}}}],["15",{"_index":358,"title":{},"body":{"components/ConfigurationComponent.html":{},"components/DashboardComponent.html":{},"overview.html":{}}}],["150px",{"_index":544,"title":{},"body":{"components/HistoricalsComponent.html":{}}}],["17px",{"_index":137,"title":{},"body":{"components/AddTaskComponent.html":{},"components/ConfigurationComponent.html":{},"components/HistoricalsComponent.html":{}}}],["1px",{"_index":127,"title":{},"body":{"components/AddTaskComponent.html":{},"components/ConfigurationComponent.html":{}}}],["2",{"_index":208,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/SparklineComponent.html":{}}}],["2.0.8",{"_index":1085,"title":{},"body":{"dependencies.html":{}}}],["2.3em",{"_index":682,"title":{},"body":{"components/ModulesComponent.html":{}}}],["2.5.4",{"_index":1082,"title":{},"body":{"dependencies.html":{}}}],["2.99em",{"_index":679,"title":{},"body":{"components/ModulesComponent.html":{}}}],["20",{"_index":931,"title":{},"body":{"components/SparklineComponent.html":{}}}],["24",{"_index":323,"title":{},"body":{"classes/ConfigsSchema.html":{},"classes/Module.html":{},"classes/StatusSchema.html":{},"classes/Task.html":{}}}],["25",{"_index":98,"title":{},"body":{"components/AddTaskComponent.html":{}}}],["255",{"_index":670,"title":{},"body":{"components/ModulesComponent.html":{}}}],["2px",{"_index":1028,"title":{},"body":{"components/TasksComponent.html":{}}}],["3",{"_index":97,"title":{},"body":{"components/AddTaskComponent.html":{},"components/ConfigurationComponent.html":{},"components/SparklineComponent.html":{},"overview.html":{}}}],["3.5em",{"_index":687,"title":{},"body":{"components/ModulesComponent.html":{}}}],["3600",{"_index":322,"title":{},"body":{"classes/ConfigsSchema.html":{},"classes/Module.html":{},"classes/StatusSchema.html":{}}}],["4.55em",{"_index":685,"title":{},"body":{"components/ModulesComponent.html":{}}}],["4.57143em",{"_index":678,"title":{},"body":{"components/ModulesComponent.html":{}}}],["40px",{"_index":1033,"title":{},"body":{"components/TasksComponent.html":{}}}],["4em",{"_index":683,"title":{},"body":{"components/ModulesComponent.html":{}}}],["5",{"_index":404,"title":{},"body":{"components/DashboardComponent.html":{},"components/SparklineComponent.html":{},"overview.html":{}}}],["5.5em",{"_index":676,"title":{},"body":{"components/ModulesComponent.html":{}}}],["50",{"_index":671,"title":{},"body":{"components/ModulesComponent.html":{},"components/TasksComponent.html":{}}}],["55",{"_index":673,"title":{},"body":{"components/ModulesComponent.html":{}}}],["5px",{"_index":1027,"title":{},"body":{"components/TasksComponent.html":{}}}],["6.1.0",{"_index":1070,"title":{},"body":{"dependencies.html":{}}}],["6.1.10",{"_index":1067,"title":{},"body":{"dependencies.html":{}}}],["6.2.2",{"_index":1086,"title":{},"body":{"dependencies.html":{}}}],["6.2.3",{"_index":1095,"title":{},"body":{"index.html":{}}}],["6.28571em",{"_index":667,"title":{},"body":{"components/ModulesComponent.html":{}}}],["6.4.7",{"_index":1069,"title":{},"body":{"dependencies.html":{}}}],["60",{"_index":545,"title":{},"body":{"components/HistoricalsComponent.html":{},"components/ModulesComponent.html":{},"classes/Task.html":{}}}],["7",{"_index":1135,"title":{},"body":{"overview.html":{}}}],["7.0.0",{"_index":1073,"title":{},"body":{"dependencies.html":{}}}],["80",{"_index":138,"title":{},"body":{"components/AddTaskComponent.html":{},"components/TasksComponent.html":{}}}],["8em",{"_index":692,"title":{},"body":{"components/ModulesComponent.html":{}}}],["8px",{"_index":210,"title":{},"body":{"components/AppComponent.html":{}}}],["9",{"_index":347,"title":{},"body":{"components/ConfigurationComponent.html":{},"overview.html":{}}}],["9.0.0",{"_index":1077,"title":{},"body":{"dependencies.html":{}}}],["90",{"_index":444,"title":{},"body":{"components/DashboardComponent.html":{}}}],["95",{"_index":113,"title":{},"body":{"components/AddTaskComponent.html":{},"components/ConfigurationComponent.html":{},"components/HistoricalsComponent.html":{}}}],["9px",{"_index":926,"title":{},"body":{"components/SparklineComponent.html":{}}}],["__data",{"_index":527,"title":{},"body":{"components/HistoricalsComponent.html":{}}}],["__data.push(_data[key",{"_index":531,"title":{},"body":{"components/HistoricalsComponent.html":{}}}],["_data",{"_index":515,"title":{},"body":{"components/HistoricalsComponent.html":{}}}],["_http",{"_index":618,"title":{},"body":{"injectables/ModuleService.html":{},"injectables/RecordService.html":{},"injectables/TaskService.html":{}}}],["_modul",{"_index":79,"title":{},"body":{"components/AddTaskComponent.html":{},"components/DashboardComponent.html":{},"injectables/ModuleService.html":{},"components/ModulesComponent.html":{},"injectables/TaskService.html":{}}}],["_module.start_at",{"_index":991,"title":{},"body":{"injectables/TaskService.html":{}}}],["a.date.gettim",{"_index":519,"title":{},"body":{"components/HistoricalsComponent.html":{},"injectables/TaskService.html":{}}}],["a8b2c7",{"_index":923,"title":{},"body":{"components/SparklineComponent.html":{}}}],["absolut",{"_index":197,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{}}}],["acid",{"_index":361,"title":{},"body":{"components/ConfigurationComponent.html":{}}}],["act",{"_index":217,"title":{},"body":{"components/AppComponent.html":{}}}],["activ",{"_index":896,"title":{},"body":{"components/SparklineComponent.html":{}}}],["activatedrout",{"_index":657,"title":{},"body":{"components/ModulesComponent.html":{}}}],["actual_compon",{"_index":165,"title":{},"body":{"components/AddTaskComponent.html":{},"components/AppComponent.html":{},"components/ConfigurationComponent.html":{},"components/DashboardComponent.html":{},"components/HistoricalsComponent.html":{},"components/HomeComponent.html":{},"components/ModulesComponent.html":{},"components/SparklineComponent.html":{},"components/TasksComponent.html":{}}}],["add",{"_index":17,"title":{},"body":{"components/AddTaskComponent.html":{},"components/AppComponent.html":{},"components/ConfigurationComponent.html":{},"components/DashboardComponent.html":{},"components/HistoricalsComponent.html":{},"components/HomeComponent.html":{},"components/ModulesComponent.html":{},"components/SparklineComponent.html":{},"components/TasksComponent.html":{}}}],["addtaskcompon",{"_index":1,"title":{"components/AddTaskComponent.html":{}},"body":{"components/AddTaskComponent.html":{},"components/AppComponent.html":{},"components/ConfigurationComponent.html":{},"components/DashboardComponent.html":{},"components/HistoricalsComponent.html":{},"components/HomeComponent.html":{},"components/ModulesComponent.html":{},"modules/ModulesModule.html":{},"modules/ModulesRoutingModule.html":{},"components/SparklineComponent.html":{},"components/TasksComponent.html":{},"coverage.html":{},"overview.html":{}}}],["ahydro",{"_index":558,"title":{},"body":{"components/HomeComponent.html":{},"components/ModulesComponent.html":{},"index.html":{}}}],["air",{"_index":359,"title":{},"body":{"components/ConfigurationComponent.html":{},"components/DashboardComponent.html":{},"components/HistoricalsComponent.html":{}}}],["air_temp_graph",{"_index":460,"title":{},"body":{"components/HistoricalsComponent.html":{}}}],["air_temperatur",{"_index":288,"title":{},"body":{"classes/ConfigsSchema.html":{},"components/DashboardComponent.html":{},"components/HistoricalsComponent.html":{},"classes/Module.html":{},"classes/StatusSchema.html":{}}}],["alert",{"_index":302,"title":{},"body":{"classes/ConfigsSchema.html":{},"classes/Module.html":{},"classes/StatusSchema.html":{}}}],["align",{"_index":139,"title":{},"body":{"components/AddTaskComponent.html":{},"components/ConfigurationComponent.html":{},"components/HistoricalsComponent.html":{},"components/HomeComponent.html":{}}}],["allow",{"_index":222,"title":{},"body":{"components/AppComponent.html":{}}}],["anchor",{"_index":918,"title":{},"body":{"components/SparklineComponent.html":{}}}],["angular",{"_index":246,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"index.html":{}}}],["angular/anim",{"_index":1066,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":1068,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":701,"title":{},"body":{"modules/ModulesModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":244,"title":{},"body":{"modules/AppModule.html":{},"injectables/ModuleService.html":{},"injectables/RecordService.html":{},"injectables/TaskService.html":{}}}],["angular/compil",{"_index":1071,"title":{},"body":{"dependencies.html":{}}}],["angular/cor",{"_index":63,"title":{},"body":{"components/AddTaskComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ConfigurationComponent.html":{},"components/DashboardComponent.html":{},"components/HistoricalsComponent.html":{},"components/HomeComponent.html":{},"modules/MaterialModule.html":{},"injectables/ModuleService.html":{},"components/ModulesComponent.html":{},"modules/ModulesModule.html":{},"modules/ModulesRoutingModule.html":{},"injectables/RecordService.html":{},"components/SparklineComponent.html":{},"injectables/TaskService.html":{},"components/TasksComponent.html":{},"dependencies.html":{}}}],["angular/flex",{"_index":1072,"title":{},"body":{"dependencies.html":{}}}],["angular/form",{"_index":66,"title":{},"body":{"components/AddTaskComponent.html":{},"components/ConfigurationComponent.html":{},"modules/ModulesModule.html":{},"components/TasksComponent.html":{},"dependencies.html":{}}}],["angular/http",{"_index":1075,"title":{},"body":{"dependencies.html":{}}}],["angular/materi",{"_index":595,"title":{},"body":{"modules/MaterialModule.html":{},"dependencies.html":{}}}],["angular/material/icon",{"_index":177,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{}}}],["angular/platform",{"_index":178,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/rout",{"_index":70,"title":{},"body":{"components/AddTaskComponent.html":{},"modules/AppRoutingModule.html":{},"components/ModulesComponent.html":{},"modules/ModulesRoutingModule.html":{},"dependencies.html":{}}}],["angular5",{"_index":496,"title":{},"body":{"components/HistoricalsComponent.html":{},"dependencies.html":{}}}],["angular5csv",{"_index":495,"title":{},"body":{"components/HistoricalsComponent.html":{}}}],["anim",{"_index":781,"title":{},"body":{"components/SparklineComponent.html":{}}}],["api",{"_index":249,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["api/modul",{"_index":633,"title":{},"body":{"injectables/ModuleService.html":{}}}],["api/record",{"_index":745,"title":{},"body":{"injectables/RecordService.html":{}}}],["api/task",{"_index":981,"title":{},"body":{"injectables/TaskService.html":{}}}],["apimockservic",{"_index":253,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{}}}],["app",{"_index":16,"title":{},"body":{"components/AddTaskComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ConfigurationComponent.html":{},"components/DashboardComponent.html":{},"components/HistoricalsComponent.html":{},"components/HomeComponent.html":{},"components/ModulesComponent.html":{},"components/SparklineComponent.html":{},"components/TasksComponent.html":{},"index.html":{}}}],["app.compon",{"_index":257,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":171,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":170,"title":{},"body":{"components/AppComponent.html":{}}}],["appcompon",{"_index":148,"title":{"components/AppComponent.html":{}},"body":{"components/AddTaskComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ConfigurationComponent.html":{},"components/DashboardComponent.html":{},"components/HistoricalsComponent.html":{},"components/HomeComponent.html":{},"components/ModulesComponent.html":{},"components/SparklineComponent.html":{},"components/TasksComponent.html":{},"coverage.html":{},"overview.html":{}}}],["application/json",{"_index":641,"title":{},"body":{"injectables/ModuleService.html":{},"injectables/TaskService.html":{},"miscellaneous/variables.html":{}}}],["appmodul",{"_index":223,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["apppag",{"_index":264,"title":{"classes/AppPage.html":{}},"body":{"classes/AppPage.html":{},"coverage.html":{}}}],["approutingmodul",{"_index":233,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["arc",{"_index":892,"title":{},"body":{"components/SparklineComponent.html":{}}}],["area",{"_index":909,"title":{},"body":{"components/SparklineComponent.html":{}}}],["artifact",{"_index":1112,"title":{},"body":{"index.html":{}}}],["assets/icons/light.svg",{"_index":189,"title":{},"body":{"components/AppComponent.html":{}}}],["assets/icons/light1.svg",{"_index":191,"title":{},"body":{"components/AppComponent.html":{}}}],["assets/icons/pump.svg",{"_index":185,"title":{},"body":{"components/AppComponent.html":{}}}],["assets/icons/sun.svg",{"_index":183,"title":{},"body":{"components/AppComponent.html":{}}}],["assets/icons/temperature.svg",{"_index":193,"title":{},"body":{"components/AppComponent.html":{}}}],["assets/icons/water.svg",{"_index":187,"title":{},"body":{"components/AppComponent.html":{}}}],["auto",{"_index":115,"title":{},"body":{"components/AddTaskComponent.html":{},"components/AppComponent.html":{},"components/ConfigurationComponent.html":{},"components/DashboardComponent.html":{},"components/HistoricalsComponent.html":{},"components/TasksComponent.html":{}}}],["automat",{"_index":1104,"title":{},"body":{"index.html":{}}}],["autoscal",{"_index":782,"title":{},"body":{"components/SparklineComponent.html":{}}}],["avail",{"_index":214,"title":{},"body":{"components/AppComponent.html":{},"modules.html":{}}}],["b",{"_index":518,"title":{},"body":{"components/HistoricalsComponent.html":{},"injectables/TaskService.html":{}}}],["b.date.gettim",{"_index":520,"title":{},"body":{"components/HistoricalsComponent.html":{},"injectables/TaskService.html":{}}}],["background",{"_index":103,"title":{},"body":{"components/AddTaskComponent.html":{},"components/DashboardComponent.html":{},"components/HistoricalsComponent.html":{},"components/HomeComponent.html":{},"components/ModulesComponent.html":{},"components/TasksComponent.html":{}}}],["bar",{"_index":891,"title":{},"body":{"components/SparklineComponent.html":{}}}],["basechartcompon",{"_index":756,"title":{},"body":{"components/SparklineComponent.html":{}}}],["behaviorsubject",{"_index":637,"title":{},"body":{"injectables/ModuleService.html":{},"injectables/TaskService.html":{}}}],["behaviorsubject(new",{"_index":631,"title":{},"body":{"injectables/ModuleService.html":{}}}],["beta.19",{"_index":1074,"title":{},"body":{"dependencies.html":{}}}],["between",{"_index":96,"title":{},"body":{"components/AddTaskComponent.html":{},"components/ConfigurationComponent.html":{}}}],["block",{"_index":125,"title":{},"body":{"components/AddTaskComponent.html":{},"components/ConfigurationComponent.html":{},"components/DashboardComponent.html":{},"components/SparklineComponent.html":{}}}],["boolean",{"_index":304,"title":{},"body":{"classes/ConfigsSchema.html":{},"classes/Module.html":{},"injectables/ModuleService.html":{},"components/SparklineComponent.html":{},"classes/StatusSchema.html":{},"classes/Task.html":{}}}],["bootstrap",{"_index":226,"title":{},"body":{"modules/AppModule.html":{},"modules/ModulesModule.html":{},"overview.html":{}}}],["border",{"_index":135,"title":{},"body":{"components/AddTaskComponent.html":{},"components/ConfigurationComponent.html":{},"components/HistoricalsComponent.html":{},"components/TasksComponent.html":{}}}],["bottom",{"_index":120,"title":{},"body":{"components/AddTaskComponent.html":{},"components/AppComponent.html":{},"components/ConfigurationComponent.html":{},"components/HomeComponent.html":{}}}],["brows",{"_index":1133,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":179,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"dependencies.html":{},"modules.html":{}}}],["browser.get",{"_index":271,"title":{},"body":{"classes/AppPage.html":{}}}],["browser/anim",{"_index":242,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodul",{"_index":241,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodul",{"_index":239,"title":{},"body":{"modules/AppModule.html":{}}}],["build",{"_index":1111,"title":{},"body":{"index.html":{}}}],["bulb",{"_index":305,"title":{},"body":{"classes/ConfigsSchema.html":{},"classes/Module.html":{},"classes/StatusSchema.html":{}}}],["button",{"_index":134,"title":{},"body":{"components/AddTaskComponent.html":{},"components/ConfigurationComponent.html":{},"components/HistoricalsComponent.html":{},"components/TasksComponent.html":{}}}],["c",{"_index":360,"title":{},"body":{"components/ConfigurationComponent.html":{},"components/DashboardComponent.html":{}}}],["calc(1em",{"_index":132,"title":{},"body":{"components/AddTaskComponent.html":{},"components/ConfigurationComponent.html":{}}}],["calculateviewdimens",{"_index":827,"title":{},"body":{"components/SparklineComponent.html":{}}}],["card",{"_index":446,"title":{},"body":{"components/DashboardComponent.html":{},"components/HistoricalsComponent.html":{},"components/HomeComponent.html":{},"components/SparklineComponent.html":{}}}],["caus",{"_index":216,"title":{},"body":{"components/AppComponent.html":{}}}],["cell",{"_index":895,"title":{},"body":{"components/SparklineComponent.html":{}}}],["center",{"_index":141,"title":{},"body":{"components/AddTaskComponent.html":{},"components/ConfigurationComponent.html":{},"components/HistoricalsComponent.html":{},"components/HomeComponent.html":{}}}],["chang",{"_index":1106,"title":{},"body":{"index.html":{}}}],["changedetect",{"_index":757,"title":{},"body":{"components/SparklineComponent.html":{}}}],["changedetectionstrategi",{"_index":822,"title":{},"body":{"components/SparklineComponent.html":{}}}],["changedetectionstrategy.onpush",{"_index":758,"title":{},"body":{"components/SparklineComponent.html":{}}}],["charact",{"_index":99,"title":{},"body":{"components/AddTaskComponent.html":{},"components/ConfigurationComponent.html":{}}}],["chart",{"_index":162,"title":{},"body":{"components/AddTaskComponent.html":{},"components/AppComponent.html":{},"components/ConfigurationComponent.html":{},"components/DashboardComponent.html":{},"components/HistoricalsComponent.html":{},"components/HomeComponent.html":{},"components/ModulesComponent.html":{},"modules/ModulesModule.html":{},"components/SparklineComponent.html":{},"components/TasksComponent.html":{},"dependencies.html":{}}}],["check",{"_index":419,"title":{},"body":{"components/DashboardComponent.html":{},"components/TasksComponent.html":{},"index.html":{}}}],["child(#{$i",{"_index":433,"title":{},"body":{"components/DashboardComponent.html":{}}}],["children",{"_index":716,"title":{},"body":{"modules/ModulesRoutingModule.html":{}}}],["circl",{"_index":890,"title":{},"body":{"components/SparklineComponent.html":{}}}],["class",{"_index":73,"title":{"classes/AppPage.html":{},"classes/ConfigsSchema.html":{},"classes/Module.html":{},"classes/Record.html":{},"classes/StatusSchema.html":{},"classes/Task.html":{}},"body":{"components/AddTaskComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"classes/ConfigsSchema.html":{},"components/ConfigurationComponent.html":{},"components/DashboardComponent.html":{},"components/HistoricalsComponent.html":{},"components/HomeComponent.html":{},"modules/MaterialModule.html":{},"classes/Module.html":{},"injectables/ModuleService.html":{},"components/ModulesComponent.html":{},"modules/ModulesModule.html":{},"modules/ModulesRoutingModule.html":{},"classes/Record.html":{},"injectables/RecordService.html":{},"components/SparklineComponent.html":{},"classes/StatusSchema.html":{},"classes/Task.html":{},"injectables/TaskService.html":{},"components/TasksComponent.html":{},"coverage.html":{},"overview.html":{}}}],["cli",{"_index":1093,"title":{},"body":{"index.html":{}}}],["cluster_appmodul",{"_index":228,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":231,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declar",{"_index":229,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_import",{"_index":230,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_provid",{"_index":232,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_modulesmodul",{"_index":695,"title":{},"body":{"modules/ModulesModule.html":{},"overview.html":{}}}],["cluster_modulesmodule_declar",{"_index":696,"title":{},"body":{"modules/ModulesModule.html":{},"overview.html":{}}}],["cluster_modulesmodule_import",{"_index":697,"title":{},"body":{"modules/ModulesModule.html":{},"overview.html":{}}}],["code",{"_index":1107,"title":{},"body":{"index.html":{}}}],["color",{"_index":104,"title":{},"body":{"components/AddTaskComponent.html":{},"components/HistoricalsComponent.html":{},"components/HomeComponent.html":{},"components/ModulesComponent.html":{},"components/SparklineComponent.html":{},"components/TasksComponent.html":{}}}],["colorhelp",{"_index":808,"title":{},"body":{"components/SparklineComponent.html":{}}}],["column",{"_index":111,"title":{},"body":{"components/AddTaskComponent.html":{},"components/AppComponent.html":{},"components/ConfigurationComponent.html":{},"components/HomeComponent.html":{}}}],["commonmodul",{"_index":700,"title":{},"body":{"modules/ModulesModule.html":{}}}],["complet",{"_index":1037,"title":{},"body":{"components/TasksComponent.html":{}}}],["compon",{"_index":0,"title":{"components/AddTaskComponent.html":{},"components/AppComponent.html":{},"components/ConfigurationComponent.html":{},"components/DashboardComponent.html":{},"components/HistoricalsComponent.html":{},"components/HomeComponent.html":{},"components/ModulesComponent.html":{},"components/SparklineComponent.html":{},"components/TasksComponent.html":{}},"body":{"components/AddTaskComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ConfigurationComponent.html":{},"components/DashboardComponent.html":{},"components/HistoricalsComponent.html":{},"components/HomeComponent.html":{},"components/ModulesComponent.html":{},"modules/ModulesRoutingModule.html":{},"components/SparklineComponent.html":{},"components/TasksComponent.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["component_templ",{"_index":146,"title":{},"body":{"components/AddTaskComponent.html":{},"components/AppComponent.html":{},"components/ConfigurationComponent.html":{},"components/DashboardComponent.html":{},"components/HistoricalsComponent.html":{},"components/HomeComponent.html":{},"components/ModulesComponent.html":{},"components/SparklineComponent.html":{},"components/TasksComponent.html":{}}}],["components/add",{"_index":709,"title":{},"body":{"modules/ModulesModule.html":{},"modules/ModulesRoutingModule.html":{}}}],["components/configuration/configuration.compon",{"_index":707,"title":{},"body":{"modules/ModulesModule.html":{},"modules/ModulesRoutingModule.html":{}}}],["components/dashboard/dashboard.compon",{"_index":706,"title":{},"body":{"modules/ModulesModule.html":{},"modules/ModulesRoutingModule.html":{}}}],["components/historicals/historicals.compon",{"_index":711,"title":{},"body":{"modules/ModulesModule.html":{},"modules/ModulesRoutingModule.html":{}}}],["components/historicals/sparkline.compon",{"_index":714,"title":{},"body":{"modules/ModulesModule.html":{}}}],["components/tasks/tasks.compon",{"_index":708,"title":{},"body":{"modules/ModulesModule.html":{},"modules/ModulesRoutingModule.html":{}}}],["conduct",{"_index":363,"title":{},"body":{"components/ConfigurationComponent.html":{}}}],["config",{"_index":309,"title":{},"body":{"classes/ConfigsSchema.html":{},"classes/Module.html":{},"classes/StatusSchema.html":{}}}],["configsschema",{"_index":286,"title":{"classes/ConfigsSchema.html":{}},"body":{"classes/ConfigsSchema.html":{},"classes/Module.html":{},"classes/StatusSchema.html":{},"coverage.html":{}}}],["configur",{"_index":326,"title":{},"body":{"components/ConfigurationComponent.html":{},"components/ModulesComponent.html":{},"modules/ModulesRoutingModule.html":{}}}],["configuration'},{'nam",{"_index":151,"title":{},"body":{"components/AddTaskComponent.html":{},"components/AppComponent.html":{},"components/ConfigurationComponent.html":{},"components/DashboardComponent.html":{},"components/HistoricalsComponent.html":{},"components/HomeComponent.html":{},"components/ModulesComponent.html":{},"components/SparklineComponent.html":{},"components/TasksComponent.html":{}}}],["configuration.component.html",{"_index":328,"title":{},"body":{"components/ConfigurationComponent.html":{}}}],["configuration.component.scss",{"_index":327,"title":{},"body":{"components/ConfigurationComponent.html":{}}}],["configurationcompon",{"_index":150,"title":{"components/ConfigurationComponent.html":{}},"body":{"components/AddTaskComponent.html":{},"components/AppComponent.html":{},"components/ConfigurationComponent.html":{},"components/DashboardComponent.html":{},"components/HistoricalsComponent.html":{},"components/HomeComponent.html":{},"components/ModulesComponent.html":{},"modules/ModulesModule.html":{},"modules/ModulesRoutingModule.html":{},"components/SparklineComponent.html":{},"components/TasksComponent.html":{},"coverage.html":{},"overview.html":{}}}],["console.log(\"error",{"_index":1003,"title":{},"body":{"injectables/TaskService.html":{}}}],["const",{"_index":278,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/HistoricalsComponent.html":{},"injectables/ModuleService.html":{},"modules/ModulesRoutingModule.html":{},"components/SparklineComponent.html":{},"injectables/TaskService.html":{}}}],["constrain",{"_index":221,"title":{},"body":{"components/AppComponent.html":{}}}],["constructor",{"_index":35,"title":{},"body":{"components/AddTaskComponent.html":{},"components/AppComponent.html":{},"components/ConfigurationComponent.html":{},"components/DashboardComponent.html":{},"components/HistoricalsComponent.html":{},"components/HomeComponent.html":{},"injectables/ModuleService.html":{},"components/ModulesComponent.html":{},"injectables/RecordService.html":{},"classes/Task.html":{},"injectables/TaskService.html":{},"components/TasksComponent.html":{}}}],["constructor(_http",{"_index":615,"title":{},"body":{"injectables/ModuleService.html":{},"injectables/RecordService.html":{},"injectables/TaskService.html":{}}}],["constructor(modul",{"_index":947,"title":{},"body":{"classes/Task.html":{}}}],["constructor(moduleservic",{"_index":36,"title":{},"body":{"components/AddTaskComponent.html":{},"components/AppComponent.html":{},"components/ConfigurationComponent.html":{},"components/DashboardComponent.html":{},"components/HistoricalsComponent.html":{},"components/HomeComponent.html":{},"components/ModulesComponent.html":{}}}],["constructor(priv",{"_index":339,"title":{},"body":{"components/ConfigurationComponent.html":{},"components/DashboardComponent.html":{},"injectables/RecordService.html":{},"injectables/TaskService.html":{},"components/TasksComponent.html":{}}}],["constructor(protect",{"_index":645,"title":{},"body":{"injectables/ModuleService.html":{}}}],["constructor(taskservic",{"_index":1014,"title":{},"body":{"components/TasksComponent.html":{}}}],["contain",{"_index":196,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/HistoricalsComponent.html":{},"components/HomeComponent.html":{},"components/ModulesComponent.html":{}}}],["content",{"_index":106,"title":{},"body":{"components/AddTaskComponent.html":{},"components/AppComponent.html":{},"components/ConfigurationComponent.html":{},"components/HistoricalsComponent.html":{},"components/HomeComponent.html":{},"injectables/ModuleService.html":{},"injectables/TaskService.html":{},"miscellaneous/variables.html":{}}}],["context",{"_index":1063,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["core",{"_index":1080,"title":{},"body":{"dependencies.html":{}}}],["core/material.modul",{"_index":705,"title":{},"body":{"modules/ModulesModule.html":{}}}],["core/models/modul",{"_index":68,"title":{},"body":{"components/AddTaskComponent.html":{},"components/AppComponent.html":{},"components/ConfigurationComponent.html":{},"components/DashboardComponent.html":{},"components/HomeComponent.html":{},"components/ModulesComponent.html":{}}}],["core/models/record",{"_index":494,"title":{},"body":{"components/HistoricalsComponent.html":{}}}],["core/models/task",{"_index":67,"title":{},"body":{"components/AddTaskComponent.html":{},"components/TasksComponent.html":{}}}],["core/services/api",{"_index":254,"title":{},"body":{"modules/AppModule.html":{}}}],["core/services/module.servic",{"_index":69,"title":{},"body":{"components/AddTaskComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ConfigurationComponent.html":{},"components/DashboardComponent.html":{},"components/HistoricalsComponent.html":{},"components/HomeComponent.html":{},"components/ModulesComponent.html":{}}}],["core/services/record.servic",{"_index":256,"title":{},"body":{"modules/AppModule.html":{},"components/HistoricalsComponent.html":{}}}],["core/services/task.servic",{"_index":64,"title":{},"body":{"components/AddTaskComponent.html":{},"modules/AppModule.html":{},"components/TasksComponent.html":{}}}],["coverag",{"_index":1038,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["creat",{"_index":89,"title":{},"body":{"components/AddTaskComponent.html":{},"injectables/TaskService.html":{}}}],["create(data",{"_index":971,"title":{},"body":{"injectables/TaskService.html":{}}}],["csv",{"_index":498,"title":{},"body":{"components/HistoricalsComponent.html":{},"dependencies.html":{}}}],["csv/angular5",{"_index":497,"title":{},"body":{"components/HistoricalsComponent.html":{}}}],["currentmodul",{"_index":644,"title":{},"body":{"injectables/ModuleService.html":{}}}],["cursor",{"_index":893,"title":{},"body":{"components/SparklineComponent.html":{}}}],["curv",{"_index":461,"title":{},"body":{"components/HistoricalsComponent.html":{},"components/SparklineComponent.html":{}}}],["curvelinear",{"_index":787,"title":{},"body":{"components/SparklineComponent.html":{}}}],["d",{"_index":870,"title":{},"body":{"components/SparklineComponent.html":{}}}],["d.name",{"_index":873,"title":{},"body":{"components/SparklineComponent.html":{}}}],["d3",{"_index":493,"title":{},"body":{"components/HistoricalsComponent.html":{},"components/SparklineComponent.html":{},"dependencies.html":{}}}],["dasharray",{"_index":924,"title":{},"body":{"components/SparklineComponent.html":{}}}],["dashboard",{"_index":368,"title":{},"body":{"components/DashboardComponent.html":{},"components/ModulesComponent.html":{},"modules/ModulesRoutingModule.html":{}}}],["dashboard'},{'nam",{"_index":153,"title":{},"body":{"components/AddTaskComponent.html":{},"components/AppComponent.html":{},"components/ConfigurationComponent.html":{},"components/DashboardComponent.html":{},"components/HistoricalsComponent.html":{},"components/HomeComponent.html":{},"components/ModulesComponent.html":{},"components/SparklineComponent.html":{},"components/TasksComponent.html":{}}}],["dashboard.component.html",{"_index":370,"title":{},"body":{"components/DashboardComponent.html":{}}}],["dashboard.component.scss",{"_index":369,"title":{},"body":{"components/DashboardComponent.html":{}}}],["dashboardcompon",{"_index":152,"title":{"components/DashboardComponent.html":{}},"body":{"components/AddTaskComponent.html":{},"components/AppComponent.html":{},"components/ConfigurationComponent.html":{},"components/DashboardComponent.html":{},"components/HistoricalsComponent.html":{},"components/HomeComponent.html":{},"components/ModulesComponent.html":{},"modules/ModulesModule.html":{},"modules/ModulesRoutingModule.html":{},"components/SparklineComponent.html":{},"components/TasksComponent.html":{},"coverage.html":{},"overview.html":{}}}],["dashoffset",{"_index":925,"title":{},"body":{"components/SparklineComponent.html":{}}}],["data",{"_index":462,"title":{},"body":{"components/HistoricalsComponent.html":{},"modules/ModulesRoutingModule.html":{},"injectables/TaskService.html":{}}}],["data.filter(record",{"_index":509,"title":{},"body":{"components/HistoricalsComponent.html":{}}}],["data.map(record",{"_index":533,"title":{},"body":{"components/HistoricalsComponent.html":{}}}],["dataencapsul",{"_index":260,"title":{},"body":{"modules/AppModule.html":{}}}],["date",{"_index":58,"title":{},"body":{"components/AddTaskComponent.html":{},"classes/ConfigsSchema.html":{},"components/ConfigurationComponent.html":{},"components/HistoricalsComponent.html":{},"classes/Module.html":{},"classes/Record.html":{},"components/SparklineComponent.html":{},"classes/StatusSchema.html":{},"classes/Task.html":{},"components/TasksComponent.html":{}}}],["date().gettim",{"_index":318,"title":{},"body":{"classes/ConfigsSchema.html":{},"classes/Module.html":{},"classes/StatusSchema.html":{},"classes/Task.html":{}}}],["date(this.d",{"_index":736,"title":{},"body":{"classes/Record.html":{},"classes/Task.html":{}}}],["date(this.start_at",{"_index":314,"title":{},"body":{"classes/ConfigsSchema.html":{},"classes/Module.html":{},"classes/StatusSchema.html":{}}}],["datecontrol",{"_index":25,"title":{},"body":{"components/AddTaskComponent.html":{},"components/TasksComponent.html":{}}}],["ddd",{"_index":921,"title":{},"body":{"components/SparklineComponent.html":{}}}],["declar",{"_index":225,"title":{},"body":{"modules/AppModule.html":{},"modules/ModulesModule.html":{},"overview.html":{}}}],["default",{"_index":55,"title":{},"body":{"components/AddTaskComponent.html":{},"components/ConfigurationComponent.html":{},"components/DashboardComponent.html":{},"components/HistoricalsComponent.html":{},"injectables/ModuleService.html":{},"components/ModulesComponent.html":{},"injectables/RecordService.html":{},"components/SparklineComponent.html":{},"injectables/TaskService.html":{},"miscellaneous/variables.html":{}}}],["defin",{"_index":40,"title":{},"body":{"components/AddTaskComponent.html":{},"components/AppComponent.html":{},"classes/AppPage.html":{},"classes/ConfigsSchema.html":{},"components/ConfigurationComponent.html":{},"components/DashboardComponent.html":{},"interfaces/Deserializable.html":{},"components/HistoricalsComponent.html":{},"components/HomeComponent.html":{},"classes/Module.html":{},"injectables/ModuleService.html":{},"components/ModulesComponent.html":{},"classes/Record.html":{},"injectables/RecordService.html":{},"components/SparklineComponent.html":{},"classes/StatusSchema.html":{},"classes/Task.html":{},"injectables/TaskService.html":{},"components/TasksComponent.html":{}}}],["depend",{"_index":224,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/ModulesModule.html":{},"dependencies.html":{},"overview.html":{}}}],["descript",{"_index":94,"title":{},"body":{"components/AddTaskComponent.html":{},"classes/Task.html":{}}}],["description:todo.description,complet",{"_index":999,"title":{},"body":{"injectables/TaskService.html":{}}}],["descriptioncontrol",{"_index":26,"title":{},"body":{"components/AddTaskComponent.html":{},"components/TasksComponent.html":{}}}],["deseri",{"_index":454,"title":{},"body":{"interfaces/Deserializable.html":{},"classes/Module.html":{},"classes/Record.html":{},"classes/Task.html":{}}}],["deserializ",{"_index":300,"title":{"interfaces/Deserializable.html":{}},"body":{"classes/ConfigsSchema.html":{},"interfaces/Deserializable.html":{},"classes/Module.html":{},"classes/Record.html":{},"classes/StatusSchema.html":{},"classes/Task.html":{},"coverage.html":{}}}],["deserialize(input",{"_index":310,"title":{},"body":{"classes/ConfigsSchema.html":{},"interfaces/Deserializable.html":{},"classes/Module.html":{},"classes/Record.html":{},"classes/StatusSchema.html":{},"classes/Task.html":{}}}],["desktop",{"_index":218,"title":{},"body":{"components/AppComponent.html":{}}}],["dev",{"_index":1101,"title":{},"body":{"index.html":{}}}],["develop",{"_index":1096,"title":{},"body":{"index.html":{}}}],["diff",{"_index":316,"title":{},"body":{"classes/ConfigsSchema.html":{},"classes/Module.html":{},"classes/StatusSchema.html":{},"classes/Task.html":{}}}],["dim",{"_index":763,"title":{},"body":{"components/SparklineComponent.html":{}}}],["direct",{"_index":110,"title":{},"body":{"components/AddTaskComponent.html":{},"components/AppComponent.html":{},"components/ConfigurationComponent.html":{},"components/DashboardComponent.html":{},"components/HistoricalsComponent.html":{},"components/HomeComponent.html":{},"components/ModulesComponent.html":{},"components/SparklineComponent.html":{},"components/TasksComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|modul",{"_index":1110,"title":{},"body":{"index.html":{}}}],["directori",{"_index":1115,"title":{},"body":{"index.html":{}}}],["display",{"_index":109,"title":{},"body":{"components/AddTaskComponent.html":{},"components/AppComponent.html":{},"components/ConfigurationComponent.html":{},"components/DashboardComponent.html":{},"components/HistoricalsComponent.html":{},"components/HomeComponent.html":{},"components/SparklineComponent.html":{}}}],["dist",{"_index":1114,"title":{},"body":{"index.html":{}}}],["document",{"_index":1039,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":6,"title":{},"body":{"components/AddTaskComponent.html":{},"components/AppComponent.html":{},"components/ConfigurationComponent.html":{},"components/DashboardComponent.html":{},"components/HistoricalsComponent.html":{},"components/HomeComponent.html":{},"components/ModulesComponent.html":{},"components/SparklineComponent.html":{},"components/TasksComponent.html":{}}}],["domain",{"_index":798,"title":{},"body":{"components/SparklineComponent.html":{}}}],["domain(domain",{"_index":875,"title":{},"body":{"components/SparklineComponent.html":{}}}],["domain.indexof(d.valu",{"_index":872,"title":{},"body":{"components/SparklineComponent.html":{}}}],["domsanit",{"_index":174,"title":{},"body":{"components/AppComponent.html":{}}}],["don't",{"_index":220,"title":{},"body":{"components/AppComponent.html":{}}}],["dot",{"_index":930,"title":{},"body":{"components/SparklineComponent.html":{}}}],["download",{"_index":542,"title":{},"body":{"components/HistoricalsComponent.html":{}}}],["downloaddata",{"_index":469,"title":{},"body":{"components/HistoricalsComponent.html":{}}}],["dynam",{"_index":1076,"title":{},"body":{"dependencies.html":{}}}],["e.c",{"_index":541,"title":{},"body":{"components/HistoricalsComponent.html":{}}}],["e2",{"_index":1125,"title":{},"body":{"index.html":{}}}],["e2e/src/app.po.t",{"_index":265,"title":{},"body":{"classes/AppPage.html":{},"coverage.html":{}}}],["e2e/src/app.po.ts:4",{"_index":269,"title":{},"body":{"classes/AppPage.html":{}}}],["e2e/src/app.po.ts:8",{"_index":268,"title":{},"body":{"classes/AppPage.html":{}}}],["eas",{"_index":902,"title":{},"body":{"components/SparklineComponent.html":{}}}],["ec",{"_index":289,"title":{},"body":{"classes/ConfigsSchema.html":{},"components/DashboardComponent.html":{},"components/HistoricalsComponent.html":{},"classes/Module.html":{},"classes/StatusSchema.html":{}}}],["ec_graph",{"_index":463,"title":{},"body":{"components/HistoricalsComponent.html":{}}}],["electr",{"_index":362,"title":{},"body":{"components/ConfigurationComponent.html":{}}}],["element",{"_index":144,"title":{},"body":{"components/AddTaskComponent.html":{},"components/AppComponent.html":{},"classes/AppPage.html":{},"components/ConfigurationComponent.html":{},"components/DashboardComponent.html":{},"components/HistoricalsComponent.html":{},"components/HomeComponent.html":{},"components/ModulesComponent.html":{},"components/SparklineComponent.html":{},"components/TasksComponent.html":{}}}],["element(by.css('app",{"_index":272,"title":{},"body":{"classes/AppPage.html":{}}}],["encapsul",{"_index":759,"title":{},"body":{"components/SparklineComponent.html":{}}}],["end",{"_index":1124,"title":{},"body":{"index.html":{}}}],["environ",{"_index":1060,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["err",{"_index":1002,"title":{},"body":{"injectables/TaskService.html":{}}}],["error",{"_index":378,"title":{},"body":{"components/DashboardComponent.html":{}}}],["errorcompon",{"_index":719,"title":{},"body":{"modules/ModulesRoutingModule.html":{}}}],["everythig",{"_index":415,"title":{},"body":{"components/DashboardComponent.html":{}}}],["exampl",{"_index":195,"title":{},"body":{"components/AppComponent.html":{}}}],["execut",{"_index":1121,"title":{},"body":{"index.html":{}}}],["export",{"_index":72,"title":{},"body":{"components/AddTaskComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"classes/ConfigsSchema.html":{},"components/ConfigurationComponent.html":{},"components/DashboardComponent.html":{},"interfaces/Deserializable.html":{},"components/HistoricalsComponent.html":{},"components/HomeComponent.html":{},"modules/MaterialModule.html":{},"classes/Module.html":{},"injectables/ModuleService.html":{},"components/ModulesComponent.html":{},"modules/ModulesModule.html":{},"modules/ModulesRoutingModule.html":{},"classes/Record.html":{},"injectables/RecordService.html":{},"components/SparklineComponent.html":{},"classes/StatusSchema.html":{},"classes/Task.html":{},"injectables/TaskService.html":{},"components/TasksComponent.html":{},"overview.html":{}}}],["extend",{"_index":755,"title":{},"body":{"components/SparklineComponent.html":{}}}],["f",{"_index":1024,"title":{},"body":{"components/TasksComponent.html":{}}}],["fals",{"_index":261,"title":{},"body":{"modules/AppModule.html":{},"injectables/ModuleService.html":{},"components/SparklineComponent.html":{},"miscellaneous/variables.html":{}}}],["field",{"_index":117,"title":{},"body":{"components/AddTaskComponent.html":{},"components/ConfigurationComponent.html":{}}}],["file",{"_index":8,"title":{},"body":{"components/AddTaskComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"classes/ConfigsSchema.html":{},"components/ConfigurationComponent.html":{},"components/DashboardComponent.html":{},"interfaces/Deserializable.html":{},"components/HistoricalsComponent.html":{},"components/HomeComponent.html":{},"modules/MaterialModule.html":{},"classes/Module.html":{},"injectables/ModuleService.html":{},"components/ModulesComponent.html":{},"modules/ModulesModule.html":{},"modules/ModulesRoutingModule.html":{},"classes/Record.html":{},"injectables/RecordService.html":{},"components/SparklineComponent.html":{},"classes/StatusSchema.html":{},"classes/Task.html":{},"injectables/TaskService.html":{},"components/TasksComponent.html":{},"coverage.html":{},"index.html":{}}}],["fill",{"_index":213,"title":{},"body":{"components/AppComponent.html":{},"components/SparklineComponent.html":{}}}],["filter(task",{"_index":989,"title":{},"body":{"injectables/TaskService.html":{}}}],["fine",{"_index":417,"title":{},"body":{"components/DashboardComponent.html":{}}}],["finishtask",{"_index":1013,"title":{},"body":{"components/TasksComponent.html":{}}}],["finishtask(task",{"_index":1016,"title":{},"body":{"components/TasksComponent.html":{}}}],["fix",{"_index":201,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{}}}],["flag",{"_index":1117,"title":{},"body":{"index.html":{}}}],["flex",{"_index":107,"title":{},"body":{"components/AddTaskComponent.html":{},"components/AppComponent.html":{},"components/ConfigurationComponent.html":{},"components/HistoricalsComponent.html":{},"components/HomeComponent.html":{},"components/TasksComponent.html":{}}}],["float",{"_index":887,"title":{},"body":{"components/SparklineComponent.html":{}}}],["focu",{"_index":903,"title":{},"body":{"components/SparklineComponent.html":{}}}],["font",{"_index":449,"title":{},"body":{"components/DashboardComponent.html":{},"components/SparklineComponent.html":{}}}],["form",{"_index":116,"title":{},"body":{"components/AddTaskComponent.html":{},"components/ConfigurationComponent.html":{}}}],["formcontrol",{"_index":52,"title":{},"body":{"components/AddTaskComponent.html":{},"components/ConfigurationComponent.html":{},"components/TasksComponent.html":{}}}],["formcontrol(this.module.configs.light",{"_index":345,"title":{},"body":{"components/ConfigurationComponent.html":{}}}],["formcontrol(this.module.nam",{"_index":342,"title":{},"body":{"components/ConfigurationComponent.html":{}}}],["formsmodul",{"_index":703,"title":{},"body":{"modules/ModulesModule.html":{}}}],["further",{"_index":1126,"title":{},"body":{"index.html":{}}}],["g",{"_index":906,"title":{},"body":{"components/SparklineComponent.html":{}}}],["gener",{"_index":1092,"title":{},"body":{"index.html":{}}}],["get",{"_index":1089,"title":{"index.html":{}},"body":{}}],["get(`${this.url}?module_id=${_module.id",{"_index":983,"title":{},"body":{"injectables/TaskService.html":{}}}],["get(`${this.url}?module_id=${id",{"_index":750,"title":{},"body":{"injectables/RecordService.html":{}}}],["get(id",{"_index":973,"title":{},"body":{"injectables/TaskService.html":{}}}],["get(this.url",{"_index":1005,"title":{},"body":{"injectables/TaskService.html":{}}}],["getal",{"_index":610,"title":{},"body":{"injectables/ModuleService.html":{},"injectables/TaskService.html":{}}}],["getbymodul",{"_index":741,"title":{},"body":{"injectables/RecordService.html":{}}}],["getbymodule(id",{"_index":743,"title":{},"body":{"injectables/RecordService.html":{}}}],["getconfigur",{"_index":611,"title":{},"body":{"injectables/ModuleService.html":{}}}],["getcuerr",{"_index":76,"title":{},"body":{"components/AddTaskComponent.html":{},"components/ConfigurationComponent.html":{},"injectables/ModuleService.html":{},"components/ModulesComponent.html":{}}}],["getdatetogroup",{"_index":723,"title":{},"body":{"classes/Record.html":{}}}],["getparagraphtext",{"_index":266,"title":{},"body":{"classes/AppPage.html":{}}}],["getprintabled",{"_index":724,"title":{},"body":{"classes/Record.html":{}}}],["getscaletyp",{"_index":772,"title":{},"body":{"components/SparklineComponent.html":{}}}],["getscaletype(valu",{"_index":792,"title":{},"body":{"components/SparklineComponent.html":{}}}],["getseriesdomain",{"_index":773,"title":{},"body":{"components/SparklineComponent.html":{}}}],["getuniquexdomainvalu",{"_index":828,"title":{},"body":{"components/SparklineComponent.html":{}}}],["getuniquexdomainvalues(this.result",{"_index":859,"title":{},"body":{"components/SparklineComponent.html":{}}}],["getvalu",{"_index":725,"title":{},"body":{"classes/Record.html":{}}}],["getvalue(key",{"_index":733,"title":{},"body":{"classes/Record.html":{}}}],["getxdomain",{"_index":774,"title":{},"body":{"components/SparklineComponent.html":{}}}],["getxscal",{"_index":775,"title":{},"body":{"components/SparklineComponent.html":{}}}],["getxscale(domain",{"_index":796,"title":{},"body":{"components/SparklineComponent.html":{}}}],["getydomain",{"_index":776,"title":{},"body":{"components/SparklineComponent.html":{}}}],["getyscal",{"_index":777,"title":{},"body":{"components/SparklineComponent.html":{}}}],["getyscale(domain",{"_index":800,"title":{},"body":{"components/SparklineComponent.html":{}}}],["go",{"_index":1129,"title":{},"body":{"index.html":{}}}],["gradient(#15ffa5",{"_index":688,"title":{},"body":{"components/ModulesComponent.html":{}}}],["gradient(1.5em",{"_index":666,"title":{},"body":{"components/ModulesComponent.html":{}}}],["gradient(2.3em",{"_index":677,"title":{},"body":{"components/ModulesComponent.html":{}}}],["gradient(3.5em",{"_index":684,"title":{},"body":{"components/ModulesComponent.html":{}}}],["graph",{"_index":430,"title":{},"body":{"components/DashboardComponent.html":{},"modules.html":{}}}],["gray",{"_index":1030,"title":{},"body":{"components/TasksComponent.html":{}}}],["green",{"_index":380,"title":{},"body":{"components/DashboardComponent.html":{},"components/TasksComponent.html":{}}}],["grid",{"_index":439,"title":{},"body":{"components/DashboardComponent.html":{},"components/HistoricalsComponent.html":{},"components/SparklineComponent.html":{}}}],["gridlin",{"_index":920,"title":{},"body":{"components/SparklineComponent.html":{}}}],["growth",{"_index":410,"title":{},"body":{"components/DashboardComponent.html":{}}}],["growthtim",{"_index":315,"title":{},"body":{"classes/ConfigsSchema.html":{},"classes/Module.html":{},"classes/StatusSchema.html":{}}}],["h",{"_index":963,"title":{},"body":{"classes/Task.html":{}}}],["h1",{"_index":447,"title":{},"body":{"components/DashboardComponent.html":{}}}],["h1')).gettext",{"_index":273,"title":{},"body":{"classes/AppPage.html":{}}}],["h1.exampl",{"_index":209,"title":{},"body":{"components/AppComponent.html":{}}}],["hammerj",{"_index":1084,"title":{},"body":{"dependencies.html":{}}}],["header",{"_index":364,"title":{},"body":{"components/ConfigurationComponent.html":{},"components/DashboardComponent.html":{},"components/HistoricalsComponent.html":{},"injectables/ModuleService.html":{},"injectables/TaskService.html":{},"components/TasksComponent.html":{},"miscellaneous/variables.html":{}}}],["height",{"_index":131,"title":{},"body":{"components/AddTaskComponent.html":{},"components/AppComponent.html":{},"components/ConfigurationComponent.html":{},"components/DashboardComponent.html":{},"components/HistoricalsComponent.html":{},"components/HomeComponent.html":{},"components/SparklineComponent.html":{},"components/TasksComponent.html":{}}}],["help",{"_index":1127,"title":{},"body":{"index.html":{}}}],["highlight",{"_index":911,"title":{},"body":{"components/SparklineComponent.html":{}}}],["histor",{"_index":457,"title":{},"body":{"components/HistoricalsComponent.html":{},"components/ModulesComponent.html":{},"modules/ModulesRoutingModule.html":{}}}],["historicals'},{'nam",{"_index":155,"title":{},"body":{"components/AddTaskComponent.html":{},"components/AppComponent.html":{},"components/ConfigurationComponent.html":{},"components/DashboardComponent.html":{},"components/HistoricalsComponent.html":{},"components/HomeComponent.html":{},"components/ModulesComponent.html":{},"components/SparklineComponent.html":{},"components/TasksComponent.html":{}}}],["historicals.component.html",{"_index":459,"title":{},"body":{"components/HistoricalsComponent.html":{}}}],["historicals.component.scss",{"_index":458,"title":{},"body":{"components/HistoricalsComponent.html":{}}}],["historicalscompon",{"_index":154,"title":{"components/HistoricalsComponent.html":{}},"body":{"components/AddTaskComponent.html":{},"components/AppComponent.html":{},"components/ConfigurationComponent.html":{},"components/DashboardComponent.html":{},"components/HistoricalsComponent.html":{},"components/HomeComponent.html":{},"components/ModulesComponent.html":{},"modules/ModulesModule.html":{},"modules/ModulesRoutingModule.html":{},"components/SparklineComponent.html":{},"components/TasksComponent.html":{},"coverage.html":{},"overview.html":{}}}],["home",{"_index":280,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/HomeComponent.html":{},"components/ModulesComponent.html":{}}}],["home'},{'nam",{"_index":157,"title":{},"body":{"components/AddTaskComponent.html":{},"components/AppComponent.html":{},"components/ConfigurationComponent.html":{},"components/DashboardComponent.html":{},"components/HistoricalsComponent.html":{},"components/HomeComponent.html":{},"components/ModulesComponent.html":{},"components/SparklineComponent.html":{},"components/TasksComponent.html":{}}}],["home.component.html",{"_index":548,"title":{},"body":{"components/HomeComponent.html":{}}}],["home.component.scss",{"_index":547,"title":{},"body":{"components/HomeComponent.html":{}}}],["home/home.compon",{"_index":258,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["homecompon",{"_index":156,"title":{"components/HomeComponent.html":{}},"body":{"components/AddTaskComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ConfigurationComponent.html":{},"components/DashboardComponent.html":{},"components/HistoricalsComponent.html":{},"components/HomeComponent.html":{},"components/ModulesComponent.html":{},"components/SparklineComponent.html":{},"components/TasksComponent.html":{},"coverage.html":{},"overview.html":{}}}],["hover",{"_index":897,"title":{},"body":{"components/SparklineComponent.html":{}}}],["html",{"_index":143,"title":{},"body":{"components/AddTaskComponent.html":{},"components/AppComponent.html":{},"components/ConfigurationComponent.html":{},"components/DashboardComponent.html":{},"components/HistoricalsComponent.html":{},"components/HomeComponent.html":{},"components/ModulesComponent.html":{},"components/SparklineComponent.html":{},"components/TasksComponent.html":{}}}],["http://localhost:4200",{"_index":1103,"title":{},"body":{"index.html":{}}}],["httpclient",{"_index":616,"title":{},"body":{"injectables/ModuleService.html":{},"injectables/RecordService.html":{},"injectables/TaskService.html":{}}}],["httpclientinmemorywebapimodul",{"_index":245,"title":{},"body":{"modules/AppModule.html":{}}}],["httpclientinmemorywebapimodule.forroot(apimockservic",{"_index":259,"title":{},"body":{"modules/AppModule.html":{}}}],["httpclientmodul",{"_index":243,"title":{},"body":{"modules/AppModule.html":{}}}],["httperrorrespons",{"_index":636,"title":{},"body":{"injectables/ModuleService.html":{},"injectables/TaskService.html":{}}}],["httpheader",{"_index":635,"title":{},"body":{"injectables/ModuleService.html":{},"injectables/RecordService.html":{},"injectables/TaskService.html":{},"miscellaneous/variables.html":{}}}],["httpoption",{"_index":640,"title":{},"body":{"injectables/ModuleService.html":{},"injectables/TaskService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["httpoptions).subscrib",{"_index":1007,"title":{},"body":{"injectables/TaskService.html":{}}}],["humid",{"_index":290,"title":{},"body":{"classes/ConfigsSchema.html":{},"components/ConfigurationComponent.html":{},"components/DashboardComponent.html":{},"components/HistoricalsComponent.html":{},"classes/Module.html":{},"classes/StatusSchema.html":{}}}],["humidity_graph",{"_index":464,"title":{},"body":{"components/HistoricalsComponent.html":{}}}],["id",{"_index":281,"title":{},"body":{"modules/AppRoutingModule.html":{},"classes/ConfigsSchema.html":{},"components/HomeComponent.html":{},"classes/Module.html":{},"injectables/ModuleService.html":{},"classes/Record.html":{},"injectables/RecordService.html":{},"classes/StatusSchema.html":{},"classes/Task.html":{},"injectables/TaskService.html":{}}}],["identifi",{"_index":1040,"title":{},"body":{"coverage.html":{}}}],["imag",{"_index":435,"title":{},"body":{"components/DashboardComponent.html":{}}}],["implement",{"_index":12,"title":{},"body":{"components/AddTaskComponent.html":{},"classes/ConfigsSchema.html":{},"components/ConfigurationComponent.html":{},"components/DashboardComponent.html":{},"components/HistoricalsComponent.html":{},"components/HomeComponent.html":{},"classes/Module.html":{},"components/ModulesComponent.html":{},"classes/Record.html":{},"classes/StatusSchema.html":{},"classes/Task.html":{},"components/TasksComponent.html":{}}}],["import",{"_index":62,"title":{},"body":{"components/AddTaskComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"classes/ConfigsSchema.html":{},"components/ConfigurationComponent.html":{},"components/DashboardComponent.html":{},"components/HistoricalsComponent.html":{},"components/HomeComponent.html":{},"modules/MaterialModule.html":{},"classes/Module.html":{},"injectables/ModuleService.html":{},"components/ModulesComponent.html":{},"modules/ModulesModule.html":{},"modules/ModulesRoutingModule.html":{},"classes/Record.html":{},"injectables/RecordService.html":{},"components/SparklineComponent.html":{},"classes/StatusSchema.html":{},"classes/Task.html":{},"injectables/TaskService.html":{},"components/TasksComponent.html":{}}}],["inact",{"_index":910,"title":{},"body":{"components/SparklineComponent.html":{}}}],["includ",{"_index":445,"title":{},"body":{"components/DashboardComponent.html":{}}}],["incomplet",{"_index":1036,"title":{},"body":{"components/TasksComponent.html":{}}}],["index",{"_index":23,"title":{"index.html":{}},"body":{"components/AddTaskComponent.html":{},"components/AppComponent.html":{},"classes/AppPage.html":{},"classes/ConfigsSchema.html":{},"components/ConfigurationComponent.html":{},"components/DashboardComponent.html":{},"interfaces/Deserializable.html":{},"components/HistoricalsComponent.html":{},"components/HomeComponent.html":{},"classes/Module.html":{},"injectables/ModuleService.html":{},"components/ModulesComponent.html":{},"classes/Record.html":{},"injectables/RecordService.html":{},"components/SparklineComponent.html":{},"classes/StatusSchema.html":{},"classes/Task.html":{},"injectables/TaskService.html":{},"components/TasksComponent.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":2,"title":{},"body":{"components/AddTaskComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"classes/ConfigsSchema.html":{},"components/ConfigurationComponent.html":{},"components/DashboardComponent.html":{},"interfaces/Deserializable.html":{},"components/HistoricalsComponent.html":{},"components/HomeComponent.html":{},"modules/MaterialModule.html":{},"classes/Module.html":{},"injectables/ModuleService.html":{},"components/ModulesComponent.html":{},"modules/ModulesModule.html":{},"modules/ModulesRoutingModule.html":{},"classes/Record.html":{},"injectables/RecordService.html":{},"components/SparklineComponent.html":{},"classes/StatusSchema.html":{},"classes/Task.html":{},"injectables/TaskService.html":{},"components/TasksComponent.html":{}}}],["initi",{"_index":124,"title":{},"body":{"components/AddTaskComponent.html":{},"components/ConfigurationComponent.html":{}}}],["inject",{"_index":604,"title":{"injectables/ModuleService.html":{},"injectables/RecordService.html":{},"injectables/TaskService.html":{}},"body":{"injectables/ModuleService.html":{},"injectables/RecordService.html":{},"injectables/TaskService.html":{},"coverage.html":{},"overview.html":{}}}],["input",{"_index":312,"title":{},"body":{"classes/ConfigsSchema.html":{},"interfaces/Deserializable.html":{},"classes/Module.html":{},"classes/Record.html":{},"components/SparklineComponent.html":{},"classes/StatusSchema.html":{},"classes/Task.html":{}}}],["instanceof",{"_index":882,"title":{},"body":{"components/SparklineComponent.html":{}}}],["interfac",{"_index":452,"title":{"interfaces/Deserializable.html":{}},"body":{"interfaces/Deserializable.html":{},"coverage.html":{},"overview.html":{}}}],["iscurrentload",{"_index":606,"title":{},"body":{"injectables/ModuleService.html":{}}}],["isdat",{"_index":778,"title":{},"body":{"components/SparklineComponent.html":{}}}],["isdate(valu",{"_index":802,"title":{},"body":{"components/SparklineComponent.html":{}}}],["isoutd",{"_index":946,"title":{},"body":{"classes/Task.html":{}}}],["item",{"_index":365,"title":{},"body":{"components/ConfigurationComponent.html":{},"components/HistoricalsComponent.html":{},"components/HomeComponent.html":{},"components/SparklineComponent.html":{},"components/TasksComponent.html":{}}}],["item.getdatetogroup",{"_index":524,"title":{},"body":{"components/HistoricalsComponent.html":{}}}],["item.getvalue(\"light",{"_index":523,"title":{},"body":{"components/HistoricalsComponent.html":{}}}],["item.nam",{"_index":883,"title":{},"body":{"components/SparklineComponent.html":{}}}],["js",{"_index":1081,"title":{},"body":{"dependencies.html":{}}}],["justifi",{"_index":366,"title":{},"body":{"components/ConfigurationComponent.html":{},"components/HistoricalsComponent.html":{},"components/HomeComponent.html":{}}}],["karma",{"_index":1123,"title":{},"body":{"index.html":{}}}],["key",{"_index":478,"title":{},"body":{"components/HistoricalsComponent.html":{},"classes/Record.html":{}}}],["label",{"_index":913,"title":{},"body":{"components/SparklineComponent.html":{}}}],["layout",{"_index":219,"title":{},"body":{"components/AppComponent.html":{},"dependencies.html":{}}}],["left",{"_index":198,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"components/SparklineComponent.html":{},"components/TasksComponent.html":{}}}],["legend",{"_index":142,"title":{},"body":{"components/AddTaskComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ConfigurationComponent.html":{},"components/DashboardComponent.html":{},"components/HistoricalsComponent.html":{},"components/HomeComponent.html":{},"components/ModulesComponent.html":{},"modules/ModulesModule.html":{},"components/SparklineComponent.html":{},"components/TasksComponent.html":{},"overview.html":{}}}],["legendtyp",{"_index":841,"title":{},"body":{"components/SparklineComponent.html":{}}}],["light",{"_index":188,"title":{},"body":{"components/AppComponent.html":{},"classes/ConfigsSchema.html":{},"components/DashboardComponent.html":{},"components/HistoricalsComponent.html":{},"classes/Module.html":{},"classes/StatusSchema.html":{}}}],["light1",{"_index":190,"title":{},"body":{"components/AppComponent.html":{}}}],["light_graph",{"_index":465,"title":{},"body":{"components/HistoricalsComponent.html":{}}}],["line",{"_index":543,"title":{},"body":{"components/HistoricalsComponent.html":{},"components/SparklineComponent.html":{}}}],["linear",{"_index":789,"title":{},"body":{"components/SparklineComponent.html":{}}}],["list",{"_index":440,"title":{},"body":{"components/DashboardComponent.html":{},"components/TasksComponent.html":{}}}],["loadchildren",{"_index":282,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["loadformodul",{"_index":969,"title":{},"body":{"injectables/TaskService.html":{}}}],["loadformodule(_modul",{"_index":976,"title":{},"body":{"injectables/TaskService.html":{}}}],["look",{"_index":416,"title":{},"body":{"components/DashboardComponent.html":{}}}],["luxcontrol",{"_index":329,"title":{},"body":{"components/ConfigurationComponent.html":{}}}],["m",{"_index":629,"title":{},"body":{"injectables/ModuleService.html":{}}}],["make",{"_index":202,"title":{},"body":{"components/AppComponent.html":{}}}],["map",{"_index":746,"title":{},"body":{"injectables/RecordService.html":{},"injectables/TaskService.html":{}}}],["map(item",{"_index":987,"title":{},"body":{"injectables/TaskService.html":{}}}],["map(r",{"_index":985,"title":{},"body":{"injectables/TaskService.html":{}}}],["margin",{"_index":114,"title":{},"body":{"components/AddTaskComponent.html":{},"components/AppComponent.html":{},"components/ConfigurationComponent.html":{},"components/DashboardComponent.html":{},"components/HistoricalsComponent.html":{},"components/SparklineComponent.html":{},"components/TasksComponent.html":{}}}],["mat",{"_index":101,"title":{},"body":{"components/AddTaskComponent.html":{},"components/ConfigurationComponent.html":{},"components/DashboardComponent.html":{},"components/HistoricalsComponent.html":{},"components/HomeComponent.html":{},"components/ModulesComponent.html":{},"components/TasksComponent.html":{}}}],["matautocompletemodul",{"_index":564,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matbuttonmodul",{"_index":565,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matbuttontogglemodul",{"_index":566,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matcardmodul",{"_index":567,"title":{},"body":{"modules/MaterialModule.html":{}}}],["match",{"_index":167,"title":{},"body":{"components/AddTaskComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"classes/ConfigsSchema.html":{},"components/ConfigurationComponent.html":{},"components/DashboardComponent.html":{},"interfaces/Deserializable.html":{},"components/HistoricalsComponent.html":{},"components/HomeComponent.html":{},"modules/MaterialModule.html":{},"classes/Module.html":{},"injectables/ModuleService.html":{},"components/ModulesComponent.html":{},"modules/ModulesModule.html":{},"modules/ModulesRoutingModule.html":{},"classes/Record.html":{},"injectables/RecordService.html":{},"components/SparklineComponent.html":{},"classes/StatusSchema.html":{},"classes/Task.html":{},"injectables/TaskService.html":{},"components/TasksComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["matcheckboxmodul",{"_index":568,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matchipsmodul",{"_index":569,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matdatepickermodul",{"_index":570,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matdialogmodul",{"_index":571,"title":{},"body":{"modules/MaterialModule.html":{}}}],["materialmodul",{"_index":562,"title":{"modules/MaterialModule.html":{}},"body":{"modules/MaterialModule.html":{},"modules/ModulesModule.html":{},"modules.html":{},"overview.html":{}}}],["matexpansionmodul",{"_index":572,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matformfieldmodul",{"_index":594,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matgridlistmodul",{"_index":573,"title":{},"body":{"modules/MaterialModule.html":{}}}],["math.abs(new",{"_index":317,"title":{},"body":{"classes/ConfigsSchema.html":{},"classes/Module.html":{},"classes/StatusSchema.html":{}}}],["math.ceil(diff",{"_index":320,"title":{},"body":{"classes/ConfigsSchema.html":{},"classes/Module.html":{},"classes/StatusSchema.html":{}}}],["math.floor",{"_index":964,"title":{},"body":{"classes/Task.html":{}}}],["math.max(...valu",{"_index":864,"title":{},"body":{"components/SparklineComponent.html":{}}}],["math.min(...valu",{"_index":862,"title":{},"body":{"components/SparklineComponent.html":{}}}],["maticonmodul",{"_index":250,"title":{},"body":{"modules/AppModule.html":{},"modules/MaterialModule.html":{}}}],["maticonregistri",{"_index":173,"title":{},"body":{"components/AppComponent.html":{}}}],["matinputmodul",{"_index":574,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matlistmodul",{"_index":575,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matmenumodul",{"_index":576,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matnativedatemodul",{"_index":577,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matpaginatormodul",{"_index":578,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matprogressbarmodul",{"_index":579,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matprogressspinnermodul",{"_index":580,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matradiomodul",{"_index":581,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matripplemodul",{"_index":582,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matselectmodul",{"_index":583,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matsidenavmodul",{"_index":584,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matslidermodul",{"_index":585,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matslidetogglemodul",{"_index":586,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matsnackbarmodul",{"_index":587,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matsortmodul",{"_index":588,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matsteppermodul",{"_index":593,"title":{},"body":{"modules/MaterialModule.html":{}}}],["mattablemodul",{"_index":589,"title":{},"body":{"modules/MaterialModule.html":{}}}],["mattabsmodul",{"_index":590,"title":{},"body":{"modules/MaterialModule.html":{}}}],["mattoolbarmodul",{"_index":591,"title":{},"body":{"modules/MaterialModule.html":{}}}],["mattooltipmodul",{"_index":592,"title":{},"body":{"modules/MaterialModule.html":{}}}],["max",{"_index":863,"title":{},"body":{"components/SparklineComponent.html":{}}}],["mediumspringgreen",{"_index":690,"title":{},"body":{"components/ModulesComponent.html":{}}}],["memori",{"_index":247,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["menu",{"_index":664,"title":{},"body":{"components/ModulesComponent.html":{}}}],["metadata",{"_index":14,"title":{},"body":{"components/AddTaskComponent.html":{},"components/AppComponent.html":{},"components/ConfigurationComponent.html":{},"components/DashboardComponent.html":{},"components/HistoricalsComponent.html":{},"components/HomeComponent.html":{},"components/ModulesComponent.html":{},"components/SparklineComponent.html":{},"components/TasksComponent.html":{}}}],["method",{"_index":31,"title":{},"body":{"components/AddTaskComponent.html":{},"components/AppComponent.html":{},"classes/AppPage.html":{},"components/ConfigurationComponent.html":{},"components/DashboardComponent.html":{},"interfaces/Deserializable.html":{},"components/HistoricalsComponent.html":{},"components/HomeComponent.html":{},"classes/Module.html":{},"injectables/ModuleService.html":{},"components/ModulesComponent.html":{},"classes/Record.html":{},"injectables/RecordService.html":{},"components/SparklineComponent.html":{},"classes/Task.html":{},"injectables/TaskService.html":{},"components/TasksComponent.html":{}}}],["min",{"_index":130,"title":{},"body":{"components/AddTaskComponent.html":{},"components/ConfigurationComponent.html":{},"components/HomeComponent.html":{},"components/SparklineComponent.html":{}}}],["mindat",{"_index":27,"title":{},"body":{"components/AddTaskComponent.html":{}}}],["miscellan",{"_index":1136,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["mixin",{"_index":429,"title":{},"body":{"components/DashboardComponent.html":{}}}],["mobil",{"_index":200,"title":{},"body":{"components/AppComponent.html":{}}}],["mock.servic",{"_index":255,"title":{},"body":{"modules/AppModule.html":{}}}],["mock.service.t",{"_index":1050,"title":{},"body":{"coverage.html":{}}}],["models/modul",{"_index":638,"title":{},"body":{"injectables/ModuleService.html":{},"injectables/TaskService.html":{}}}],["models/record",{"_index":748,"title":{},"body":{"injectables/RecordService.html":{}}}],["models/task",{"_index":639,"title":{},"body":{"injectables/ModuleService.html":{},"injectables/TaskService.html":{}}}],["modul",{"_index":28,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/MaterialModule.html":{},"classes/Module.html":{},"modules/ModulesModule.html":{},"modules/ModulesRoutingModule.html":{},"modules.html":{}},"body":{"components/AddTaskComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/ConfigsSchema.html":{},"components/ConfigurationComponent.html":{},"components/DashboardComponent.html":{},"components/HomeComponent.html":{},"modules/MaterialModule.html":{},"classes/Module.html":{},"injectables/ModuleService.html":{},"components/ModulesComponent.html":{},"modules/ModulesModule.html":{},"modules/ModulesRoutingModule.html":{},"classes/Record.html":{},"classes/StatusSchema.html":{},"classes/Task.html":{},"injectables/TaskService.html":{},"coverage.html":{},"modules.html":{},"overview.html":{}}}],["module().deserialize(_moduledata",{"_index":649,"title":{},"body":{"injectables/ModuleService.html":{}}}],["module.configs.air_temperatur",{"_index":420,"title":{},"body":{"components/DashboardComponent.html":{}}}],["module.configs.humid",{"_index":425,"title":{},"body":{"components/DashboardComponent.html":{}}}],["module.configs.ph",{"_index":427,"title":{},"body":{"components/DashboardComponent.html":{}}}],["module.configs.water_temperatur",{"_index":423,"title":{},"body":{"components/DashboardComponent.html":{}}}],["module.growthtime()}}day",{"_index":412,"title":{},"body":{"components/DashboardComponent.html":{}}}],["module.id",{"_index":958,"title":{},"body":{"classes/Task.html":{}}}],["module.nam",{"_index":507,"title":{},"body":{"components/HistoricalsComponent.html":{},"components/HomeComponent.html":{},"components/ModulesComponent.html":{}}}],["module.seri",{"_index":559,"title":{},"body":{"components/HomeComponent.html":{}}}],["module.start_at",{"_index":511,"title":{},"body":{"components/HistoricalsComponent.html":{}}}],["module.status.air_temperatur",{"_index":422,"title":{},"body":{"components/DashboardComponent.html":{}}}],["module.status.alert",{"_index":414,"title":{},"body":{"components/DashboardComponent.html":{}}}],["module.status.humid",{"_index":426,"title":{},"body":{"components/DashboardComponent.html":{}}}],["module.status.ph",{"_index":428,"title":{},"body":{"components/DashboardComponent.html":{}}}],["module.status.water_temperatur",{"_index":424,"title":{},"body":{"components/DashboardComponent.html":{}}}],["module_id",{"_index":722,"title":{},"body":{"classes/Record.html":{},"classes/Task.html":{}}}],["modulenam",{"_index":466,"title":{},"body":{"components/HistoricalsComponent.html":{}}}],["modules'},{'nam",{"_index":159,"title":{},"body":{"components/AddTaskComponent.html":{},"components/AppComponent.html":{},"components/ConfigurationComponent.html":{},"components/DashboardComponent.html":{},"components/HistoricalsComponent.html":{},"components/HomeComponent.html":{},"components/ModulesComponent.html":{},"components/SparklineComponent.html":{},"components/TasksComponent.html":{}}}],["modules.compon",{"_index":702,"title":{},"body":{"modules/ModulesModule.html":{},"modules/ModulesRoutingModule.html":{}}}],["modules.component.html",{"_index":656,"title":{},"body":{"components/ModulesComponent.html":{}}}],["modules.component.scss",{"_index":655,"title":{},"body":{"components/ModulesComponent.html":{}}}],["modules/modules.module#modulesmodul",{"_index":283,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["modulescompon",{"_index":158,"title":{"components/ModulesComponent.html":{}},"body":{"components/AddTaskComponent.html":{},"components/AppComponent.html":{},"components/ConfigurationComponent.html":{},"components/DashboardComponent.html":{},"components/HistoricalsComponent.html":{},"components/HomeComponent.html":{},"components/ModulesComponent.html":{},"modules/ModulesModule.html":{},"modules/ModulesRoutingModule.html":{},"components/SparklineComponent.html":{},"components/TasksComponent.html":{},"coverage.html":{},"overview.html":{}}}],["moduleservic",{"_index":37,"title":{"injectables/ModuleService.html":{}},"body":{"components/AddTaskComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ConfigurationComponent.html":{},"components/DashboardComponent.html":{},"components/HistoricalsComponent.html":{},"components/HomeComponent.html":{},"injectables/ModuleService.html":{},"components/ModulesComponent.html":{},"coverage.html":{},"overview.html":{}}}],["moduleservice.getcuerrent().subscribe(modul",{"_index":505,"title":{},"body":{"components/HistoricalsComponent.html":{}}}],["modulesmodul",{"_index":694,"title":{"modules/ModulesModule.html":{}},"body":{"modules/ModulesModule.html":{},"modules.html":{},"overview.html":{}}}],["modulesroutingmodul",{"_index":698,"title":{"modules/ModulesRoutingModule.html":{}},"body":{"modules/ModulesModule.html":{},"modules/ModulesRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":1128,"title":{},"body":{"index.html":{}}}],["myvideo",{"_index":561,"title":{},"body":{"components/HomeComponent.html":{}}}],["name",{"_index":44,"title":{},"body":{"components/AddTaskComponent.html":{},"components/AppComponent.html":{},"classes/ConfigsSchema.html":{},"components/ConfigurationComponent.html":{},"components/DashboardComponent.html":{},"interfaces/Deserializable.html":{},"components/HistoricalsComponent.html":{},"components/HomeComponent.html":{},"classes/Module.html":{},"injectables/ModuleService.html":{},"components/ModulesComponent.html":{},"classes/Record.html":{},"injectables/RecordService.html":{},"components/SparklineComponent.html":{},"classes/StatusSchema.html":{},"classes/Task.html":{},"injectables/TaskService.html":{},"components/TasksComponent.html":{},"index.html":{}}}],["namecontrol",{"_index":330,"title":{},"body":{"components/ConfigurationComponent.html":{}}}],["navig",{"_index":1102,"title":{},"body":{"index.html":{}}}],["navigateto",{"_index":267,"title":{},"body":{"classes/AppPage.html":{}}}],["new",{"_index":57,"title":{},"body":{"components/AddTaskComponent.html":{},"classes/ConfigsSchema.html":{},"components/ConfigurationComponent.html":{},"components/HistoricalsComponent.html":{},"classes/Module.html":{},"injectables/ModuleService.html":{},"modules/ModulesRoutingModule.html":{},"classes/Record.html":{},"injectables/RecordService.html":{},"components/SparklineComponent.html":{},"classes/StatusSchema.html":{},"classes/Task.html":{},"injectables/TaskService.html":{},"components/TasksComponent.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["ng",{"_index":1099,"title":{},"body":{"index.html":{}}}],["ngmodul",{"_index":240,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/MaterialModule.html":{},"modules/ModulesModule.html":{},"modules/ModulesRoutingModule.html":{}}}],["ngondestroy",{"_index":32,"title":{},"body":{"components/AddTaskComponent.html":{},"components/ConfigurationComponent.html":{},"components/DashboardComponent.html":{},"components/HistoricalsComponent.html":{},"components/ModulesComponent.html":{}}}],["ngoninit",{"_index":33,"title":{},"body":{"components/AddTaskComponent.html":{},"components/AppComponent.html":{},"components/ConfigurationComponent.html":{},"components/DashboardComponent.html":{},"components/HistoricalsComponent.html":{},"components/HomeComponent.html":{},"components/ModulesComponent.html":{},"components/TasksComponent.html":{}}}],["ngx",{"_index":161,"title":{},"body":{"components/AddTaskComponent.html":{},"components/AppComponent.html":{},"components/ConfigurationComponent.html":{},"components/DashboardComponent.html":{},"components/HistoricalsComponent.html":{},"components/HomeComponent.html":{},"components/ModulesComponent.html":{},"components/SparklineComponent.html":{},"components/TasksComponent.html":{}}}],["ngxchartsmodul",{"_index":712,"title":{},"body":{"modules/ModulesModule.html":{}}}],["none",{"_index":905,"title":{},"body":{"components/SparklineComponent.html":{}}}],["normal",{"_index":916,"title":{},"body":{"components/SparklineComponent.html":{}}}],["now",{"_index":413,"title":{},"body":{"components/DashboardComponent.html":{}}}],["nth",{"_index":432,"title":{},"body":{"components/DashboardComponent.html":{}}}],["null",{"_index":61,"title":{},"body":{"components/AddTaskComponent.html":{},"components/ConfigurationComponent.html":{},"components/DashboardComponent.html":{},"components/HistoricalsComponent.html":{},"components/ModulesComponent.html":{},"classes/Task.html":{},"injectables/TaskService.html":{}}}],["num",{"_index":879,"title":{},"body":{"components/SparklineComponent.html":{}}}],["number",{"_index":293,"title":{},"body":{"classes/ConfigsSchema.html":{},"components/DashboardComponent.html":{},"components/HomeComponent.html":{},"classes/Module.html":{},"injectables/ModuleService.html":{},"classes/Record.html":{},"injectables/RecordService.html":{},"components/SparklineComponent.html":{},"classes/StatusSchema.html":{},"classes/Task.html":{},"injectables/TaskService.html":{}}}],["number(v",{"_index":866,"title":{},"body":{"components/SparklineComponent.html":{}}}],["number:'1.0",{"_index":421,"title":{},"body":{"components/DashboardComponent.html":{}}}],["number:\\'1.0",{"_index":451,"title":{},"body":{"components/DashboardComponent.html":{}}}],["obj",{"_index":526,"title":{},"body":{"components/HistoricalsComponent.html":{}}}],["obj[item.getdatetogroup",{"_index":522,"title":{},"body":{"components/HistoricalsComponent.html":{}}}],["obj[item.getdatetogroup()].valu",{"_index":525,"title":{},"body":{"components/HistoricalsComponent.html":{}}}],["object",{"_index":384,"title":{},"body":{"components/DashboardComponent.html":{},"miscellaneous/variables.html":{}}}],["object.assign(thi",{"_index":311,"title":{},"body":{"classes/ConfigsSchema.html":{},"classes/Module.html":{},"classes/Record.html":{},"classes/StatusSchema.html":{},"classes/Task.html":{}}}],["object.keys(_data).foreach(key",{"_index":528,"title":{},"body":{"components/HistoricalsComponent.html":{}}}],["object.keys(_data).pop",{"_index":530,"title":{},"body":{"components/HistoricalsComponent.html":{}}}],["object.keys(_data).shift",{"_index":529,"title":{},"body":{"components/HistoricalsComponent.html":{}}}],["observ",{"_index":620,"title":{},"body":{"injectables/ModuleService.html":{},"injectables/RecordService.html":{},"injectables/TaskService.html":{},"components/TasksComponent.html":{}}}],["odd",{"_index":934,"title":{},"body":{"components/SparklineComponent.html":{}}}],["ondestroy",{"_index":325,"title":{},"body":{"components/ConfigurationComponent.html":{},"components/DashboardComponent.html":{},"components/ModulesComponent.html":{}}}],["oninit",{"_index":13,"title":{},"body":{"components/AddTaskComponent.html":{},"components/ConfigurationComponent.html":{},"components/DashboardComponent.html":{},"components/HistoricalsComponent.html":{},"components/HomeComponent.html":{},"components/ModulesComponent.html":{},"components/TasksComponent.html":{}}}],["opac",{"_index":898,"title":{},"body":{"components/SparklineComponent.html":{},"components/TasksComponent.html":{}}}],["option",{"_index":46,"title":{},"body":{"components/AddTaskComponent.html":{},"components/AppComponent.html":{},"components/ConfigurationComponent.html":{},"components/DashboardComponent.html":{},"interfaces/Deserializable.html":{},"components/HistoricalsComponent.html":{},"components/HomeComponent.html":{},"classes/Module.html":{},"injectables/ModuleService.html":{},"components/ModulesComponent.html":{},"classes/Record.html":{},"injectables/RecordService.html":{},"components/SparklineComponent.html":{},"classes/StatusSchema.html":{},"classes/Task.html":{},"injectables/TaskService.html":{},"components/TasksComponent.html":{}}}],["ordin",{"_index":876,"title":{},"body":{"components/SparklineComponent.html":{}}}],["out",{"_index":237,"title":{},"body":{"modules/AppModule.html":{},"modules/ModulesModule.html":{},"components/SparklineComponent.html":{},"index.html":{},"overview.html":{}}}],["outlin",{"_index":904,"title":{},"body":{"components/SparklineComponent.html":{}}}],["overflow",{"_index":888,"title":{},"body":{"components/SparklineComponent.html":{}}}],["overview",{"_index":1134,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["p",{"_index":961,"title":{},"body":{"classes/Task.html":{}}}],["packag",{"_index":1065,"title":{"dependencies.html":{}},"body":{}}],["pad",{"_index":119,"title":{},"body":{"components/AddTaskComponent.html":{},"components/ConfigurationComponent.html":{}}}],["padding(0.1",{"_index":877,"title":{},"body":{"components/SparklineComponent.html":{}}}],["panel",{"_index":932,"title":{},"body":{"components/SparklineComponent.html":{}}}],["paramet",{"_index":42,"title":{},"body":{"components/AddTaskComponent.html":{},"components/AppComponent.html":{},"components/ConfigurationComponent.html":{},"components/DashboardComponent.html":{},"interfaces/Deserializable.html":{},"components/HistoricalsComponent.html":{},"components/HomeComponent.html":{},"classes/Module.html":{},"injectables/ModuleService.html":{},"components/ModulesComponent.html":{},"classes/Record.html":{},"injectables/RecordService.html":{},"components/SparklineComponent.html":{},"classes/Task.html":{},"injectables/TaskService.html":{},"components/TasksComponent.html":{}}}],["passthruunknownurl",{"_index":262,"title":{},"body":{"modules/AppModule.html":{}}}],["past",{"_index":206,"title":{},"body":{"components/AppComponent.html":{}}}],["path",{"_index":279,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/ModulesRoutingModule.html":{},"components/SparklineComponent.html":{}}}],["ph",{"_index":291,"title":{},"body":{"classes/ConfigsSchema.html":{},"components/ConfigurationComponent.html":{},"components/DashboardComponent.html":{},"components/HistoricalsComponent.html":{},"classes/Module.html":{},"classes/StatusSchema.html":{}}}],["ph_graph",{"_index":467,"title":{},"body":{"components/HistoricalsComponent.html":{}}}],["pipe",{"_index":984,"title":{},"body":{"injectables/TaskService.html":{}}}],["pipe(map(r",{"_index":751,"title":{},"body":{"injectables/RecordService.html":{},"injectables/TaskService.html":{}}}],["pointer",{"_index":894,"title":{},"body":{"components/SparklineComponent.html":{}}}],["polar",{"_index":908,"title":{},"body":{"components/SparklineComponent.html":{}}}],["posit",{"_index":123,"title":{},"body":{"components/AddTaskComponent.html":{},"components/AppComponent.html":{},"components/ConfigurationComponent.html":{},"components/DashboardComponent.html":{},"components/HomeComponent.html":{}}}],["privat",{"_index":29,"title":{},"body":{"components/AddTaskComponent.html":{},"components/AppComponent.html":{},"components/ConfigurationComponent.html":{},"components/DashboardComponent.html":{},"components/HistoricalsComponent.html":{},"components/HomeComponent.html":{},"injectables/ModuleService.html":{},"components/ModulesComponent.html":{},"injectables/RecordService.html":{},"injectables/TaskService.html":{}}}],["prod",{"_index":1116,"title":{},"body":{"index.html":{}}}],["product",{"_index":1118,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["project",{"_index":1091,"title":{},"body":{"index.html":{}}}],["properti",{"_index":24,"title":{},"body":{"components/AddTaskComponent.html":{},"components/AppComponent.html":{},"classes/ConfigsSchema.html":{},"components/ConfigurationComponent.html":{},"components/DashboardComponent.html":{},"components/HistoricalsComponent.html":{},"components/HomeComponent.html":{},"classes/Module.html":{},"injectables/ModuleService.html":{},"components/ModulesComponent.html":{},"classes/Record.html":{},"injectables/RecordService.html":{},"components/SparklineComponent.html":{},"classes/StatusSchema.html":{},"classes/Task.html":{},"injectables/TaskService.html":{},"components/TasksComponent.html":{}}}],["protect",{"_index":608,"title":{},"body":{"injectables/ModuleService.html":{}}}],["protractor",{"_index":270,"title":{},"body":{"classes/AppPage.html":{},"index.html":{}}}],["provid",{"_index":227,"title":{},"body":{"modules/AppModule.html":{},"modules/ModulesModule.html":{},"overview.html":{}}}],["public",{"_index":172,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{}}}],["pump",{"_index":184,"title":{},"body":{"components/AppComponent.html":{},"classes/ConfigsSchema.html":{},"components/DashboardComponent.html":{},"classes/Module.html":{},"classes/StatusSchema.html":{}}}],["radial",{"_index":665,"title":{},"body":{"components/ModulesComponent.html":{}}}],["radiu",{"_index":136,"title":{},"body":{"components/AddTaskComponent.html":{},"components/ConfigurationComponent.html":{},"components/HistoricalsComponent.html":{},"components/TasksComponent.html":{}}}],["random(100",{"_index":438,"title":{},"body":{"components/DashboardComponent.html":{}}}],["rang",{"_index":907,"title":{},"body":{"components/SparklineComponent.html":{}}}],["range([0",{"_index":874,"title":{},"body":{"components/SparklineComponent.html":{}}}],["range([height",{"_index":878,"title":{},"body":{"components/SparklineComponent.html":{}}}],["re",{"_index":986,"title":{},"body":{"injectables/TaskService.html":{}}}],["reactiveformsmodul",{"_index":704,"title":{},"body":{"modules/ModulesModule.html":{}}}],["readm",{"_index":1130,"title":{},"body":{"index.html":{}}}],["record",{"_index":477,"title":{"classes/Record.html":{}},"body":{"components/HistoricalsComponent.html":{},"classes/Record.html":{},"injectables/RecordService.html":{},"coverage.html":{}}}],["record().deserialize(item",{"_index":753,"title":{},"body":{"injectables/RecordService.html":{}}}],["record.d",{"_index":510,"title":{},"body":{"components/HistoricalsComponent.html":{}}}],["record.date.getd",{"_index":537,"title":{},"body":{"components/HistoricalsComponent.html":{}}}],["record.date.getfullyear",{"_index":539,"title":{},"body":{"components/HistoricalsComponent.html":{}}}],["record.date.gethour",{"_index":540,"title":{},"body":{"components/HistoricalsComponent.html":{}}}],["record.date.getmonth",{"_index":538,"title":{},"body":{"components/HistoricalsComponent.html":{}}}],["record.getprintabled",{"_index":535,"title":{},"body":{"components/HistoricalsComponent.html":{}}}],["record.getvalue(key",{"_index":534,"title":{},"body":{"components/HistoricalsComponent.html":{}}}],["recordservic",{"_index":234,"title":{"injectables/RecordService.html":{}},"body":{"modules/AppModule.html":{},"components/HistoricalsComponent.html":{},"injectables/RecordService.html":{},"coverage.html":{},"overview.html":{}}}],["recordservice.getbymodule(module.id).subscribe((data",{"_index":508,"title":{},"body":{"components/HistoricalsComponent.html":{}}}],["rect",{"_index":933,"title":{},"body":{"components/SparklineComponent.html":{}}}],["red",{"_index":382,"title":{},"body":{"components/DashboardComponent.html":{},"components/TasksComponent.html":{}}}],["redirectto",{"_index":284,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["reduce((obj",{"_index":521,"title":{},"body":{"components/HistoricalsComponent.html":{}}}],["ref",{"_index":377,"title":{},"body":{"components/DashboardComponent.html":{}}}],["refer",{"_index":927,"title":{},"body":{"components/SparklineComponent.html":{}}}],["reflin",{"_index":922,"title":{},"body":{"components/SparklineComponent.html":{}}}],["reload",{"_index":1105,"title":{},"body":{"index.html":{}}}],["repeat",{"_index":693,"title":{},"body":{"components/ModulesComponent.html":{}}}],["requir",{"_index":95,"title":{},"body":{"components/AddTaskComponent.html":{},"components/ConfigurationComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["require.context",{"_index":1142,"title":{},"body":{"miscellaneous/variables.html":{}}}],["res.json()).map((todo",{"_index":997,"title":{},"body":{"injectables/TaskService.html":{}}}],["res.map(item",{"_index":752,"title":{},"body":{"injectables/RecordService.html":{},"injectables/TaskService.html":{}}}],["reset",{"_index":236,"title":{},"body":{"modules/AppModule.html":{},"components/ConfigurationComponent.html":{},"modules/ModulesModule.html":{},"overview.html":{}}}],["result",{"_index":166,"title":{},"body":{"components/AddTaskComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"classes/ConfigsSchema.html":{},"components/ConfigurationComponent.html":{},"components/DashboardComponent.html":{},"interfaces/Deserializable.html":{},"components/HistoricalsComponent.html":{},"components/HomeComponent.html":{},"modules/MaterialModule.html":{},"classes/Module.html":{},"injectables/ModuleService.html":{},"components/ModulesComponent.html":{},"modules/ModulesModule.html":{},"modules/ModulesRoutingModule.html":{},"classes/Record.html":{},"injectables/RecordService.html":{},"components/SparklineComponent.html":{},"classes/StatusSchema.html":{},"classes/Task.html":{},"injectables/TaskService.html":{},"components/TasksComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["results.seri",{"_index":871,"title":{},"body":{"components/SparklineComponent.html":{}}}],["retriev",{"_index":1004,"title":{},"body":{"injectables/TaskService.html":{}}}],["return",{"_index":48,"title":{},"body":{"components/AddTaskComponent.html":{},"components/AppComponent.html":{},"classes/AppPage.html":{},"classes/ConfigsSchema.html":{},"components/ConfigurationComponent.html":{},"components/DashboardComponent.html":{},"components/HistoricalsComponent.html":{},"components/HomeComponent.html":{},"classes/Module.html":{},"injectables/ModuleService.html":{},"components/ModulesComponent.html":{},"classes/Record.html":{},"injectables/RecordService.html":{},"components/SparklineComponent.html":{},"classes/StatusSchema.html":{},"classes/Task.html":{},"injectables/TaskService.html":{},"components/TasksComponent.html":{}}}],["rgb(0,0,0",{"_index":919,"title":{},"body":{"components/SparklineComponent.html":{}}}],["rgba(0",{"_index":1031,"title":{},"body":{"components/TasksComponent.html":{}}}],["rgba(0,0,0,0.05",{"_index":935,"title":{},"body":{"components/SparklineComponent.html":{}}}],["rgba(255",{"_index":669,"title":{},"body":{"components/ModulesComponent.html":{}}}],["right",{"_index":199,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{}}}],["rippl",{"_index":128,"title":{},"body":{"components/AddTaskComponent.html":{},"components/ConfigurationComponent.html":{}}}],["root",{"_index":169,"title":{},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{}}}],["root'},{'nam",{"_index":149,"title":{},"body":{"components/AddTaskComponent.html":{},"components/AppComponent.html":{},"components/ConfigurationComponent.html":{},"components/DashboardComponent.html":{},"components/HistoricalsComponent.html":{},"components/HomeComponent.html":{},"components/ModulesComponent.html":{},"components/SparklineComponent.html":{},"components/TasksComponent.html":{}}}],["rout",{"_index":276,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"components/ModulesComponent.html":{},"modules/ModulesRoutingModule.html":{},"overview.html":{},"routes.html":{}}}],["router",{"_index":39,"title":{},"body":{"components/AddTaskComponent.html":{}}}],["routermodul",{"_index":277,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/ModulesRoutingModule.html":{}}}],["routermodule.forchild(rout",{"_index":720,"title":{},"body":{"modules/ModulesRoutingModule.html":{}}}],["routermodule.forroot(rout",{"_index":285,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routing.modul",{"_index":251,"title":{},"body":{"modules/AppModule.html":{},"modules/ModulesModule.html":{}}}],["routing.module.t",{"_index":275,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/ModulesRoutingModule.html":{}}}],["run",{"_index":1098,"title":{},"body":{"index.html":{}}}],["rxj",{"_index":71,"title":{},"body":{"components/AddTaskComponent.html":{},"components/ConfigurationComponent.html":{},"components/DashboardComponent.html":{},"components/HistoricalsComponent.html":{},"injectables/ModuleService.html":{},"components/ModulesComponent.html":{},"injectables/RecordService.html":{},"injectables/TaskService.html":{},"components/TasksComponent.html":{},"dependencies.html":{}}}],["rxjs/oper",{"_index":747,"title":{},"body":{"injectables/RecordService.html":{},"injectables/TaskService.html":{}}}],["save",{"_index":34,"title":{},"body":{"components/AddTaskComponent.html":{},"components/ConfigurationComponent.html":{}}}],["scaffold",{"_index":1108,"title":{},"body":{"index.html":{}}}],["scale",{"_index":826,"title":{},"body":{"components/SparklineComponent.html":{}}}],["scalelinear",{"_index":823,"title":{},"body":{"components/SparklineComponent.html":{}}}],["scalepoint",{"_index":825,"title":{},"body":{"components/SparklineComponent.html":{}}}],["scaletim",{"_index":824,"title":{},"body":{"components/SparklineComponent.html":{}}}],["scaletyp",{"_index":764,"title":{},"body":{"components/SparklineComponent.html":{}}}],["schemetyp",{"_index":783,"title":{},"body":{"components/SparklineComponent.html":{}}}],["scroll",{"_index":205,"title":{},"body":{"components/AppComponent.html":{}}}],["selectedid",{"_index":607,"title":{},"body":{"injectables/ModuleService.html":{}}}],["selector",{"_index":15,"title":{},"body":{"components/AddTaskComponent.html":{},"components/AppComponent.html":{},"components/ConfigurationComponent.html":{},"components/DashboardComponent.html":{},"components/HistoricalsComponent.html":{},"components/HomeComponent.html":{},"components/ModulesComponent.html":{},"components/SparklineComponent.html":{},"components/TasksComponent.html":{}}}],["self",{"_index":140,"title":{},"body":{"components/AddTaskComponent.html":{}}}],["semaphor",{"_index":371,"title":{},"body":{"components/DashboardComponent.html":{}}}],["semaphorecolorcalcul",{"_index":372,"title":{},"body":{"components/DashboardComponent.html":{}}}],["semaphorecolorcalculator(valu",{"_index":376,"title":{},"body":{"components/DashboardComponent.html":{}}}],["sensor",{"_index":434,"title":{},"body":{"components/DashboardComponent.html":{}}}],["seri",{"_index":532,"title":{},"body":{"components/HistoricalsComponent.html":{},"components/SparklineComponent.html":{}}}],["serial",{"_index":306,"title":{},"body":{"classes/ConfigsSchema.html":{},"classes/Module.html":{},"classes/StatusSchema.html":{}}}],["seriesdomain",{"_index":765,"title":{},"body":{"components/SparklineComponent.html":{}}}],["serv",{"_index":1100,"title":{},"body":{"index.html":{}}}],["server",{"_index":1097,"title":{},"body":{"index.html":{}}}],["servic",{"_index":252,"title":{},"body":{"modules/AppModule.html":{}}}],["set",{"_index":549,"title":{},"body":{"components/HomeComponent.html":{}}}],["set(id",{"_index":552,"title":{},"body":{"components/HomeComponent.html":{}}}],["set(id:numb",{"_index":555,"title":{},"body":{"components/HomeComponent.html":{}}}],["setcolor",{"_index":779,"title":{},"body":{"components/SparklineComponent.html":{}}}],["setcuerr",{"_index":612,"title":{},"body":{"injectables/ModuleService.html":{}}}],["setcuerrent(id",{"_index":623,"title":{},"body":{"injectables/ModuleService.html":{}}}],["setcurr",{"_index":613,"title":{},"body":{"injectables/ModuleService.html":{}}}],["setcurrent(id",{"_index":625,"title":{},"body":{"injectables/ModuleService.html":{}}}],["shape",{"_index":492,"title":{},"body":{"components/HistoricalsComponent.html":{},"components/SparklineComponent.html":{},"dependencies.html":{}}}],["shape.curvebasi",{"_index":483,"title":{},"body":{"components/HistoricalsComponent.html":{}}}],["showlegend",{"_index":840,"title":{},"body":{"components/SparklineComponent.html":{}}}],["showxaxi",{"_index":834,"title":{},"body":{"components/SparklineComponent.html":{}}}],["showxlabel",{"_index":838,"title":{},"body":{"components/SparklineComponent.html":{}}}],["showyaxi",{"_index":835,"title":{},"body":{"components/SparklineComponent.html":{}}}],["showylabel",{"_index":839,"title":{},"body":{"components/SparklineComponent.html":{}}}],["shrink",{"_index":1034,"title":{},"body":{"components/TasksComponent.html":{}}}],["sidenav",{"_index":211,"title":{},"body":{"components/AppComponent.html":{},"components/ModulesComponent.html":{}}}],["size",{"_index":437,"title":{},"body":{"components/DashboardComponent.html":{},"components/ModulesComponent.html":{},"components/SparklineComponent.html":{}}}],["slice(0",{"_index":516,"title":{},"body":{"components/HistoricalsComponent.html":{}}}],["solid",{"_index":1029,"title":{},"body":{"components/TasksComponent.html":{}}}],["sort((a",{"_index":517,"title":{},"body":{"components/HistoricalsComponent.html":{}}}],["sort(function(a",{"_index":992,"title":{},"body":{"injectables/TaskService.html":{}}}],["sourc",{"_index":3,"title":{},"body":{"components/AddTaskComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"classes/ConfigsSchema.html":{},"components/ConfigurationComponent.html":{},"components/DashboardComponent.html":{},"interfaces/Deserializable.html":{},"components/HistoricalsComponent.html":{},"components/HomeComponent.html":{},"modules/MaterialModule.html":{},"classes/Module.html":{},"injectables/ModuleService.html":{},"components/ModulesComponent.html":{},"modules/ModulesModule.html":{},"modules/ModulesRoutingModule.html":{},"classes/Record.html":{},"injectables/RecordService.html":{},"components/SparklineComponent.html":{},"classes/StatusSchema.html":{},"classes/Task.html":{},"injectables/TaskService.html":{},"components/TasksComponent.html":{},"index.html":{}}}],["space",{"_index":215,"title":{},"body":{"components/AppComponent.html":{}}}],["span",{"_index":448,"title":{},"body":{"components/DashboardComponent.html":{}}}],["sparklin",{"_index":761,"title":{},"body":{"components/SparklineComponent.html":{}}}],["sparkline'},{'nam",{"_index":163,"title":{},"body":{"components/AddTaskComponent.html":{},"components/AppComponent.html":{},"components/ConfigurationComponent.html":{},"components/DashboardComponent.html":{},"components/HistoricalsComponent.html":{},"components/HomeComponent.html":{},"components/ModulesComponent.html":{},"components/SparklineComponent.html":{},"components/TasksComponent.html":{}}}],["sparkline.scss",{"_index":762,"title":{},"body":{"components/SparklineComponent.html":{}}}],["sparklinecompon",{"_index":160,"title":{"components/SparklineComponent.html":{}},"body":{"components/AddTaskComponent.html":{},"components/AppComponent.html":{},"components/ConfigurationComponent.html":{},"components/DashboardComponent.html":{},"components/HistoricalsComponent.html":{},"components/HomeComponent.html":{},"components/ModulesComponent.html":{},"modules/ModulesModule.html":{},"components/SparklineComponent.html":{},"components/TasksComponent.html":{},"coverage.html":{},"overview.html":{}}}],["spec\\.t",{"_index":1143,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.prod.t",{"_index":1138,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.t",{"_index":1139,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../module.service.t",{"_index":1140,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../task.service.t",{"_index":1141,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../test.t",{"_index":1137,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app",{"_index":274,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.t",{"_index":168,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:14",{"_index":175,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:59",{"_index":176,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.t",{"_index":238,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/core/material.module.t",{"_index":563,"title":{},"body":{"modules/MaterialModule.html":{}}}],["src/app/core/models/deserializable.t",{"_index":453,"title":{},"body":{"interfaces/Deserializable.html":{},"coverage.html":{}}}],["src/app/core/models/deserializable.ts:2",{"_index":455,"title":{},"body":{"interfaces/Deserializable.html":{}}}],["src/app/core/models/module.t",{"_index":287,"title":{},"body":{"classes/ConfigsSchema.html":{},"classes/Module.html":{},"classes/StatusSchema.html":{},"coverage.html":{}}}],["src/app/core/models/module.ts:13",{"_index":937,"title":{},"body":{"classes/StatusSchema.html":{}}}],["src/app/core/models/module.ts:14",{"_index":936,"title":{},"body":{"classes/StatusSchema.html":{}}}],["src/app/core/models/module.ts:15",{"_index":944,"title":{},"body":{"classes/StatusSchema.html":{}}}],["src/app/core/models/module.ts:16",{"_index":940,"title":{},"body":{"classes/StatusSchema.html":{}}}],["src/app/core/models/module.ts:17",{"_index":941,"title":{},"body":{"classes/StatusSchema.html":{}}}],["src/app/core/models/module.ts:18",{"_index":942,"title":{},"body":{"classes/StatusSchema.html":{}}}],["src/app/core/models/module.ts:19",{"_index":939,"title":{},"body":{"classes/StatusSchema.html":{}}}],["src/app/core/models/module.ts:20",{"_index":943,"title":{},"body":{"classes/StatusSchema.html":{}}}],["src/app/core/models/module.ts:21",{"_index":938,"title":{},"body":{"classes/StatusSchema.html":{}}}],["src/app/core/models/module.ts:25",{"_index":597,"title":{},"body":{"classes/Module.html":{}}}],["src/app/core/models/module.ts:26",{"_index":598,"title":{},"body":{"classes/Module.html":{}}}],["src/app/core/models/module.ts:27",{"_index":599,"title":{},"body":{"classes/Module.html":{}}}],["src/app/core/models/module.ts:28",{"_index":600,"title":{},"body":{"classes/Module.html":{}}}],["src/app/core/models/module.ts:29",{"_index":601,"title":{},"body":{"classes/Module.html":{}}}],["src/app/core/models/module.ts:30",{"_index":596,"title":{},"body":{"classes/Module.html":{}}}],["src/app/core/models/module.ts:32",{"_index":602,"title":{},"body":{"classes/Module.html":{}}}],["src/app/core/models/module.ts:38",{"_index":603,"title":{},"body":{"classes/Module.html":{}}}],["src/app/core/models/module.ts:4",{"_index":294,"title":{},"body":{"classes/ConfigsSchema.html":{}}}],["src/app/core/models/module.ts:5",{"_index":299,"title":{},"body":{"classes/ConfigsSchema.html":{}}}],["src/app/core/models/module.ts:6",{"_index":296,"title":{},"body":{"classes/ConfigsSchema.html":{}}}],["src/app/core/models/module.ts:7",{"_index":297,"title":{},"body":{"classes/ConfigsSchema.html":{}}}],["src/app/core/models/module.ts:8",{"_index":298,"title":{},"body":{"classes/ConfigsSchema.html":{}}}],["src/app/core/models/module.ts:9",{"_index":295,"title":{},"body":{"classes/ConfigsSchema.html":{}}}],["src/app/core/models/record.t",{"_index":721,"title":{},"body":{"classes/Record.html":{},"coverage.html":{}}}],["src/app/core/models/record.ts:10",{"_index":730,"title":{},"body":{"classes/Record.html":{}}}],["src/app/core/models/record.ts:16",{"_index":734,"title":{},"body":{"classes/Record.html":{}}}],["src/app/core/models/record.ts:20",{"_index":732,"title":{},"body":{"classes/Record.html":{}}}],["src/app/core/models/record.ts:24",{"_index":731,"title":{},"body":{"classes/Record.html":{}}}],["src/app/core/models/record.ts:5",{"_index":727,"title":{},"body":{"classes/Record.html":{}}}],["src/app/core/models/record.ts:6",{"_index":728,"title":{},"body":{"classes/Record.html":{}}}],["src/app/core/models/record.ts:7",{"_index":726,"title":{},"body":{"classes/Record.html":{}}}],["src/app/core/models/record.ts:8",{"_index":729,"title":{},"body":{"classes/Record.html":{}}}],["src/app/core/models/task.t",{"_index":945,"title":{},"body":{"classes/Task.html":{},"coverage.html":{}}}],["src/app/core/models/task.ts:10",{"_index":954,"title":{},"body":{"classes/Task.html":{}}}],["src/app/core/models/task.ts:11",{"_index":955,"title":{},"body":{"classes/Task.html":{}}}],["src/app/core/models/task.ts:12",{"_index":952,"title":{},"body":{"classes/Task.html":{}}}],["src/app/core/models/task.ts:13",{"_index":948,"title":{},"body":{"classes/Task.html":{}}}],["src/app/core/models/task.ts:30",{"_index":956,"title":{},"body":{"classes/Task.html":{}}}],["src/app/core/models/task.ts:6",{"_index":951,"title":{},"body":{"classes/Task.html":{}}}],["src/app/core/models/task.ts:7",{"_index":953,"title":{},"body":{"classes/Task.html":{}}}],["src/app/core/models/task.ts:8",{"_index":950,"title":{},"body":{"classes/Task.html":{}}}],["src/app/core/models/task.ts:9",{"_index":949,"title":{},"body":{"classes/Task.html":{}}}],["src/app/core/services/api",{"_index":1049,"title":{},"body":{"coverage.html":{}}}],["src/app/core/services/module.service.t",{"_index":605,"title":{},"body":{"injectables/ModuleService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/services/module.service.ts:20",{"_index":634,"title":{},"body":{"injectables/ModuleService.html":{}}}],["src/app/core/services/module.service.ts:21",{"_index":630,"title":{},"body":{"injectables/ModuleService.html":{}}}],["src/app/core/services/module.service.ts:25",{"_index":632,"title":{},"body":{"injectables/ModuleService.html":{}}}],["src/app/core/services/module.service.ts:26",{"_index":617,"title":{},"body":{"injectables/ModuleService.html":{}}}],["src/app/core/services/module.service.ts:32",{"_index":619,"title":{},"body":{"injectables/ModuleService.html":{}}}],["src/app/core/services/module.service.ts:36",{"_index":626,"title":{},"body":{"injectables/ModuleService.html":{}}}],["src/app/core/services/module.service.ts:44",{"_index":624,"title":{},"body":{"injectables/ModuleService.html":{}}}],["src/app/core/services/module.service.ts:48",{"_index":621,"title":{},"body":{"injectables/ModuleService.html":{}}}],["src/app/core/services/module.service.ts:50",{"_index":622,"title":{},"body":{"injectables/ModuleService.html":{}}}],["src/app/core/services/module.service.ts:54",{"_index":628,"title":{},"body":{"injectables/ModuleService.html":{}}}],["src/app/core/services/record.service.t",{"_index":740,"title":{},"body":{"injectables/RecordService.html":{},"coverage.html":{}}}],["src/app/core/services/record.service.ts:13",{"_index":744,"title":{},"body":{"injectables/RecordService.html":{}}}],["src/app/core/services/record.service.ts:9",{"_index":742,"title":{},"body":{"injectables/RecordService.html":{}}}],["src/app/core/services/task.service.t",{"_index":967,"title":{},"body":{"injectables/TaskService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/services/task.service.ts:22",{"_index":982,"title":{},"body":{"injectables/TaskService.html":{}}}],["src/app/core/services/task.service.ts:24",{"_index":980,"title":{},"body":{"injectables/TaskService.html":{}}}],["src/app/core/services/task.service.ts:26",{"_index":970,"title":{},"body":{"injectables/TaskService.html":{}}}],["src/app/core/services/task.service.ts:30",{"_index":977,"title":{},"body":{"injectables/TaskService.html":{}}}],["src/app/core/services/task.service.ts:58",{"_index":975,"title":{},"body":{"injectables/TaskService.html":{}}}],["src/app/core/services/task.service.ts:64",{"_index":974,"title":{},"body":{"injectables/TaskService.html":{}}}],["src/app/core/services/task.service.ts:68",{"_index":979,"title":{},"body":{"injectables/TaskService.html":{}}}],["src/app/core/services/task.service.ts:72",{"_index":972,"title":{},"body":{"injectables/TaskService.html":{}}}],["src/app/home/home.component.t",{"_index":546,"title":{},"body":{"components/HomeComponent.html":{},"coverage.html":{}}}],["src/app/home/home.component.ts:12",{"_index":550,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:19",{"_index":551,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:24",{"_index":553,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/modules/components/add",{"_index":9,"title":{},"body":{"components/AddTaskComponent.html":{},"coverage.html":{}}}],["src/app/modules/components/configuration/configuration.component.t",{"_index":324,"title":{},"body":{"components/ConfigurationComponent.html":{},"coverage.html":{}}}],["src/app/modules/components/configuration/configuration.component.ts:13",{"_index":336,"title":{},"body":{"components/ConfigurationComponent.html":{}}}],["src/app/modules/components/configuration/configuration.component.ts:14",{"_index":338,"title":{},"body":{"components/ConfigurationComponent.html":{}}}],["src/app/modules/components/configuration/configuration.component.ts:16",{"_index":337,"title":{},"body":{"components/ConfigurationComponent.html":{}}}],["src/app/modules/components/configuration/configuration.component.ts:17",{"_index":331,"title":{},"body":{"components/ConfigurationComponent.html":{}}}],["src/app/modules/components/configuration/configuration.component.ts:21",{"_index":333,"title":{},"body":{"components/ConfigurationComponent.html":{}}}],["src/app/modules/components/configuration/configuration.component.ts:38",{"_index":332,"title":{},"body":{"components/ConfigurationComponent.html":{}}}],["src/app/modules/components/configuration/configuration.component.ts:44",{"_index":335,"title":{},"body":{"components/ConfigurationComponent.html":{}}}],["src/app/modules/components/configuration/configuration.component.ts:51",{"_index":334,"title":{},"body":{"components/ConfigurationComponent.html":{}}}],["src/app/modules/components/dashboard/dashboard.component.t",{"_index":367,"title":{},"body":{"components/DashboardComponent.html":{},"coverage.html":{}}}],["src/app/modules/components/dashboard/dashboard.component.ts:13",{"_index":383,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/modules/components/dashboard/dashboard.component.ts:14",{"_index":386,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/modules/components/dashboard/dashboard.component.ts:16",{"_index":385,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/modules/components/dashboard/dashboard.component.ts:22",{"_index":373,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/modules/components/dashboard/dashboard.component.ts:26",{"_index":375,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/modules/components/dashboard/dashboard.component.ts:59",{"_index":374,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/modules/components/dashboard/dashboard.component.ts:65",{"_index":379,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/modules/components/historicals/historicals.component.t",{"_index":456,"title":{},"body":{"components/HistoricalsComponent.html":{},"coverage.html":{}}}],["src/app/modules/components/historicals/historicals.component.ts:102",{"_index":473,"title":{},"body":{"components/HistoricalsComponent.html":{}}}],["src/app/modules/components/historicals/historicals.component.ts:16",{"_index":490,"title":{},"body":{"components/HistoricalsComponent.html":{}}}],["src/app/modules/components/historicals/historicals.component.ts:18",{"_index":489,"title":{},"body":{"components/HistoricalsComponent.html":{}}}],["src/app/modules/components/historicals/historicals.component.ts:19",{"_index":485,"title":{},"body":{"components/HistoricalsComponent.html":{}}}],["src/app/modules/components/historicals/historicals.component.ts:20",{"_index":484,"title":{},"body":{"components/HistoricalsComponent.html":{}}}],["src/app/modules/components/historicals/historicals.component.ts:22",{"_index":491,"title":{},"body":{"components/HistoricalsComponent.html":{}}}],["src/app/modules/components/historicals/historicals.component.ts:23",{"_index":482,"title":{},"body":{"components/HistoricalsComponent.html":{}}}],["src/app/modules/components/historicals/historicals.component.ts:24",{"_index":487,"title":{},"body":{"components/HistoricalsComponent.html":{}}}],["src/app/modules/components/historicals/historicals.component.ts:25",{"_index":488,"title":{},"body":{"components/HistoricalsComponent.html":{}}}],["src/app/modules/components/historicals/historicals.component.ts:26",{"_index":486,"title":{},"body":{"components/HistoricalsComponent.html":{}}}],["src/app/modules/components/historicals/historicals.component.ts:27",{"_index":472,"title":{},"body":{"components/HistoricalsComponent.html":{}}}],["src/app/modules/components/historicals/historicals.component.ts:52",{"_index":481,"title":{},"body":{"components/HistoricalsComponent.html":{}}}],["src/app/modules/components/historicals/historicals.component.ts:80",{"_index":479,"title":{},"body":{"components/HistoricalsComponent.html":{}}}],["src/app/modules/components/historicals/historicals.component.ts:94",{"_index":475,"title":{},"body":{"components/HistoricalsComponent.html":{}}}],["src/app/modules/components/historicals/historicals.component.ts:96",{"_index":474,"title":{},"body":{"components/HistoricalsComponent.html":{}}}],["src/app/modules/components/historicals/sparkline.component.t",{"_index":754,"title":{},"body":{"components/SparklineComponent.html":{},"coverage.html":{}}}],["src/app/modules/components/historicals/sparkline.component.ts:121",{"_index":799,"title":{},"body":{"components/SparklineComponent.html":{}}}],["src/app/modules/components/historicals/sparkline.component.ts:155",{"_index":794,"title":{},"body":{"components/SparklineComponent.html":{}}}],["src/app/modules/components/historicals/sparkline.component.ts:159",{"_index":797,"title":{},"body":{"components/SparklineComponent.html":{}}}],["src/app/modules/components/historicals/sparkline.component.ts:180",{"_index":801,"title":{},"body":{"components/SparklineComponent.html":{}}}],["src/app/modules/components/historicals/sparkline.component.ts:188",{"_index":793,"title":{},"body":{"components/SparklineComponent.html":{}}}],["src/app/modules/components/historicals/sparkline.component.ts:207",{"_index":803,"title":{},"body":{"components/SparklineComponent.html":{}}}],["src/app/modules/components/historicals/sparkline.component.ts:215",{"_index":806,"title":{},"body":{"components/SparklineComponent.html":{}}}],["src/app/modules/components/historicals/sparkline.component.ts:219",{"_index":804,"title":{},"body":{"components/SparklineComponent.html":{}}}],["src/app/modules/components/historicals/sparkline.component.ts:51",{"_index":786,"title":{},"body":{"components/SparklineComponent.html":{}}}],["src/app/modules/components/historicals/sparkline.component.ts:52",{"_index":788,"title":{},"body":{"components/SparklineComponent.html":{}}}],["src/app/modules/components/historicals/sparkline.component.ts:53",{"_index":790,"title":{},"body":{"components/SparklineComponent.html":{}}}],["src/app/modules/components/historicals/sparkline.component.ts:54",{"_index":791,"title":{},"body":{"components/SparklineComponent.html":{}}}],["src/app/modules/components/historicals/sparkline.component.ts:55",{"_index":785,"title":{},"body":{"components/SparklineComponent.html":{}}}],["src/app/modules/components/historicals/sparkline.component.ts:57",{"_index":811,"title":{},"body":{"components/SparklineComponent.html":{}}}],["src/app/modules/components/historicals/sparkline.component.ts:58",{"_index":818,"title":{},"body":{"components/SparklineComponent.html":{}}}],["src/app/modules/components/historicals/sparkline.component.ts:59",{"_index":816,"title":{},"body":{"components/SparklineComponent.html":{}}}],["src/app/modules/components/historicals/sparkline.component.ts:60",{"_index":819,"title":{},"body":{"components/SparklineComponent.html":{}}}],["src/app/modules/components/historicals/sparkline.component.ts:61",{"_index":814,"title":{},"body":{"components/SparklineComponent.html":{}}}],["src/app/modules/components/historicals/sparkline.component.ts:62",{"_index":820,"title":{},"body":{"components/SparklineComponent.html":{}}}],["src/app/modules/components/historicals/sparkline.component.ts:63",{"_index":817,"title":{},"body":{"components/SparklineComponent.html":{}}}],["src/app/modules/components/historicals/sparkline.component.ts:64",{"_index":809,"title":{},"body":{"components/SparklineComponent.html":{}}}],["src/app/modules/components/historicals/sparkline.component.ts:65",{"_index":813,"title":{},"body":{"components/SparklineComponent.html":{}}}],["src/app/modules/components/historicals/sparkline.component.ts:66",{"_index":815,"title":{},"body":{"components/SparklineComponent.html":{}}}],["src/app/modules/components/historicals/sparkline.component.ts:67",{"_index":812,"title":{},"body":{"components/SparklineComponent.html":{}}}],["src/app/modules/components/historicals/sparkline.component.ts:69",{"_index":807,"title":{},"body":{"components/SparklineComponent.html":{}}}],["src/app/modules/components/historicals/sparkline.component.ts:98",{"_index":795,"title":{},"body":{"components/SparklineComponent.html":{}}}],["src/app/modules/components/tasks/tasks.component.t",{"_index":1010,"title":{},"body":{"components/TasksComponent.html":{},"coverage.html":{}}}],["src/app/modules/components/tasks/tasks.component.ts:13",{"_index":1020,"title":{},"body":{"components/TasksComponent.html":{}}}],["src/app/modules/components/tasks/tasks.component.ts:14",{"_index":1019,"title":{},"body":{"components/TasksComponent.html":{}}}],["src/app/modules/components/tasks/tasks.component.ts:15",{"_index":1015,"title":{},"body":{"components/TasksComponent.html":{}}}],["src/app/modules/components/tasks/tasks.component.ts:19",{"_index":1018,"title":{},"body":{"components/TasksComponent.html":{}}}],["src/app/modules/components/tasks/tasks.component.ts:30",{"_index":1017,"title":{},"body":{"components/TasksComponent.html":{}}}],["src/app/modules/modul",{"_index":715,"title":{},"body":{"modules/ModulesRoutingModule.html":{}}}],["src/app/modules/modules.component.t",{"_index":654,"title":{},"body":{"components/ModulesComponent.html":{},"coverage.html":{}}}],["src/app/modules/modules.component.ts:14",{"_index":661,"title":{},"body":{"components/ModulesComponent.html":{}}}],["src/app/modules/modules.component.ts:15",{"_index":658,"title":{},"body":{"components/ModulesComponent.html":{}}}],["src/app/modules/modules.component.ts:26",{"_index":660,"title":{},"body":{"components/ModulesComponent.html":{}}}],["src/app/modules/modules.component.ts:32",{"_index":659,"title":{},"body":{"components/ModulesComponent.html":{}}}],["src/app/modules/modules.module.t",{"_index":699,"title":{},"body":{"modules/ModulesModule.html":{}}}],["src/environments/environment.prod.t",{"_index":1059,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.t",{"_index":1061,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/test.t",{"_index":1062,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["start",{"_index":1090,"title":{"index.html":{}},"body":{}}],["start_at",{"_index":307,"title":{},"body":{"classes/ConfigsSchema.html":{},"classes/Module.html":{},"classes/StatusSchema.html":{}}}],["statement",{"_index":1041,"title":{},"body":{"coverage.html":{}}}],["statu",{"_index":308,"title":{},"body":{"classes/ConfigsSchema.html":{},"classes/Module.html":{},"classes/Record.html":{},"classes/StatusSchema.html":{},"classes/Task.html":{}}}],["statusschema",{"_index":301,"title":{"classes/StatusSchema.html":{}},"body":{"classes/ConfigsSchema.html":{},"classes/Module.html":{},"classes/Record.html":{},"classes/StatusSchema.html":{},"coverage.html":{}}}],["stay",{"_index":204,"title":{},"body":{"components/AppComponent.html":{}}}],["store",{"_index":1113,"title":{},"body":{"index.html":{}}}],["stretch",{"_index":212,"title":{},"body":{"components/AppComponent.html":{}}}],["string",{"_index":303,"title":{},"body":{"classes/ConfigsSchema.html":{},"components/HistoricalsComponent.html":{},"classes/Module.html":{},"injectables/ModuleService.html":{},"classes/Record.html":{},"injectables/RecordService.html":{},"components/SparklineComponent.html":{},"classes/StatusSchema.html":{},"classes/Task.html":{},"injectables/TaskService.html":{}}}],["stroke",{"_index":133,"title":{},"body":{"components/AddTaskComponent.html":{},"components/ConfigurationComponent.html":{},"components/HistoricalsComponent.html":{},"components/SparklineComponent.html":{}}}],["style",{"_index":5,"title":{},"body":{"components/AddTaskComponent.html":{},"components/AppComponent.html":{},"components/ConfigurationComponent.html":{},"components/DashboardComponent.html":{},"components/HistoricalsComponent.html":{},"components/HomeComponent.html":{},"components/ModulesComponent.html":{},"components/SparklineComponent.html":{},"components/TasksComponent.html":{}}}],["styleurl",{"_index":19,"title":{},"body":{"components/AddTaskComponent.html":{},"components/AppComponent.html":{},"components/ConfigurationComponent.html":{},"components/DashboardComponent.html":{},"components/HistoricalsComponent.html":{},"components/HomeComponent.html":{},"components/ModulesComponent.html":{},"components/SparklineComponent.html":{},"components/TasksComponent.html":{}}}],["subject",{"_index":642,"title":{},"body":{"injectables/ModuleService.html":{}}}],["subscrib",{"_index":92,"title":{},"body":{"components/AddTaskComponent.html":{},"injectables/TaskService.html":{}}}],["subscribe(_modul",{"_index":77,"title":{},"body":{"components/AddTaskComponent.html":{},"components/ModulesComponent.html":{}}}],["subscribe(modul",{"_index":340,"title":{},"body":{"components/ConfigurationComponent.html":{},"components/HomeComponent.html":{}}}],["subscribe(r",{"_index":993,"title":{},"body":{"injectables/TaskService.html":{}}}],["subscript",{"_index":30,"title":{},"body":{"components/AddTaskComponent.html":{},"components/ConfigurationComponent.html":{},"components/DashboardComponent.html":{},"components/HistoricalsComponent.html":{},"components/ModulesComponent.html":{}}}],["sun",{"_index":181,"title":{},"body":{"components/AppComponent.html":{}}}],["super.upd",{"_index":829,"title":{},"body":{"components/SparklineComponent.html":{}}}],["support",{"_index":1131,"title":{},"body":{"modules.html":{}}}],["sure",{"_index":203,"title":{},"body":{"components/AppComponent.html":{}}}],["svg",{"_index":1132,"title":{},"body":{"modules.html":{}}}],["swimlane/ngx",{"_index":713,"title":{},"body":{"modules/ModulesModule.html":{},"components/SparklineComponent.html":{},"dependencies.html":{}}}],["tabl",{"_index":129,"title":{},"body":{"components/AddTaskComponent.html":{},"components/ConfigurationComponent.html":{},"coverage.html":{}}}],["tablesort(document.getelementbyid('coverag",{"_index":1064,"title":{},"body":{"coverage.html":{}}}],["task",{"_index":18,"title":{"classes/Task.html":{}},"body":{"components/AddTaskComponent.html":{},"components/AppComponent.html":{},"components/ConfigurationComponent.html":{},"components/DashboardComponent.html":{},"components/HistoricalsComponent.html":{},"components/HomeComponent.html":{},"injectables/ModuleService.html":{},"components/ModulesComponent.html":{},"modules/ModulesRoutingModule.html":{},"components/SparklineComponent.html":{},"classes/Task.html":{},"injectables/TaskService.html":{},"components/TasksComponent.html":{},"coverage.html":{}}}],["task'},{'nam",{"_index":147,"title":{},"body":{"components/AddTaskComponent.html":{},"components/AppComponent.html":{},"components/ConfigurationComponent.html":{},"components/DashboardComponent.html":{},"components/HistoricalsComponent.html":{},"components/HomeComponent.html":{},"components/ModulesComponent.html":{},"components/SparklineComponent.html":{},"components/TasksComponent.html":{}}}],["task().deserialize(item",{"_index":988,"title":{},"body":{"injectables/TaskService.html":{}}}],["task.compon",{"_index":710,"title":{},"body":{"modules/ModulesModule.html":{},"modules/ModulesRoutingModule.html":{}}}],["task.component.html",{"_index":22,"title":{},"body":{"components/AddTaskComponent.html":{}}}],["task.component.scss",{"_index":20,"title":{},"body":{"components/AddTaskComponent.html":{}}}],["task.component.t",{"_index":11,"title":{},"body":{"components/AddTaskComponent.html":{},"coverage.html":{}}}],["task.component.ts:16",{"_index":54,"title":{},"body":{"components/AddTaskComponent.html":{}}}],["task.component.ts:17",{"_index":53,"title":{},"body":{"components/AddTaskComponent.html":{}}}],["task.component.ts:18",{"_index":59,"title":{},"body":{"components/AddTaskComponent.html":{}}}],["task.component.ts:19",{"_index":60,"title":{},"body":{"components/AddTaskComponent.html":{}}}],["task.component.ts:20",{"_index":41,"title":{},"body":{"components/AddTaskComponent.html":{}}}],["task.component.ts:28",{"_index":50,"title":{},"body":{"components/AddTaskComponent.html":{}}}],["task.component.ts:41",{"_index":47,"title":{},"body":{"components/AddTaskComponent.html":{}}}],["task.component.ts:47",{"_index":51,"title":{},"body":{"components/AddTaskComponent.html":{}}}],["task.dat",{"_index":990,"title":{},"body":{"injectables/TaskService.html":{},"components/TasksComponent.html":{}}}],["task.descript",{"_index":1026,"title":{},"body":{"components/TasksComponent.html":{}}}],["task.servic",{"_index":643,"title":{},"body":{"injectables/ModuleService.html":{}}}],["task.statu",{"_index":1023,"title":{},"body":{"components/TasksComponent.html":{}}}],["task/add",{"_index":10,"title":{},"body":{"components/AddTaskComponent.html":{},"modules/ModulesModule.html":{},"modules/ModulesRoutingModule.html":{},"coverage.html":{}}}],["tasks.component.html",{"_index":1012,"title":{},"body":{"components/TasksComponent.html":{}}}],["tasks.component.scss",{"_index":1011,"title":{},"body":{"components/TasksComponent.html":{}}}],["tasks/new",{"_index":718,"title":{},"body":{"modules/ModulesRoutingModule.html":{}}}],["taskscompon",{"_index":164,"title":{"components/TasksComponent.html":{}},"body":{"components/AddTaskComponent.html":{},"components/AppComponent.html":{},"components/ConfigurationComponent.html":{},"components/DashboardComponent.html":{},"components/HistoricalsComponent.html":{},"components/HomeComponent.html":{},"components/ModulesComponent.html":{},"modules/ModulesModule.html":{},"modules/ModulesRoutingModule.html":{},"components/SparklineComponent.html":{},"components/TasksComponent.html":{},"coverage.html":{},"overview.html":{}}}],["taskservic",{"_index":38,"title":{"injectables/TaskService.html":{}},"body":{"components/AddTaskComponent.html":{},"modules/AppModule.html":{},"injectables/ModuleService.html":{},"injectables/TaskService.html":{},"components/TasksComponent.html":{},"coverage.html":{},"overview.html":{}}}],["temperatur",{"_index":192,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigurationComponent.html":{},"components/DashboardComponent.html":{},"components/HistoricalsComponent.html":{}}}],["templat",{"_index":4,"title":{},"body":{"components/AddTaskComponent.html":{},"components/AppComponent.html":{},"components/ConfigurationComponent.html":{},"components/DashboardComponent.html":{},"components/HistoricalsComponent.html":{},"components/HomeComponent.html":{},"components/ModulesComponent.html":{},"components/SparklineComponent.html":{},"components/TasksComponent.html":{}}}],["templateurl",{"_index":21,"title":{},"body":{"components/AddTaskComponent.html":{},"components/AppComponent.html":{},"components/ConfigurationComponent.html":{},"components/DashboardComponent.html":{},"components/HistoricalsComponent.html":{},"components/HomeComponent.html":{},"components/ModulesComponent.html":{},"components/TasksComponent.html":{}}}],["test",{"_index":1120,"title":{},"body":{"index.html":{}}}],["this._http",{"_index":749,"title":{},"body":{"injectables/RecordService.html":{},"injectables/TaskService.html":{}}}],["this._http.get(`${this.url}/${id",{"_index":1006,"title":{},"body":{"injectables/TaskService.html":{}}}],["this._http.get(`${this.url}/${id}`).subscribe(_moduledata",{"_index":648,"title":{},"body":{"injectables/ModuleService.html":{}}}],["this._http.get(this.url",{"_index":647,"title":{},"body":{"injectables/ModuleService.html":{}}}],["this._http.post(this.url",{"_index":1008,"title":{},"body":{"injectables/TaskService.html":{}}}],["this._http.put(this.url",{"_index":653,"title":{},"body":{"injectables/ModuleService.html":{},"injectables/TaskService.html":{}}}],["this._todos.next(list(todo",{"_index":1001,"title":{},"body":{"injectables/TaskService.html":{}}}],["this.air_temp_graph",{"_index":500,"title":{},"body":{"components/HistoricalsComponent.html":{}}}],["this.color",{"_index":884,"title":{},"body":{"components/SparklineComponent.html":{}}}],["this.customcolor",{"_index":886,"title":{},"body":{"components/SparklineComponent.html":{}}}],["this.dat",{"_index":735,"title":{},"body":{"classes/Record.html":{},"classes/Task.html":{}}}],["this.data",{"_index":512,"title":{},"body":{"components/HistoricalsComponent.html":{}}}],["this.data.map(record",{"_index":536,"title":{},"body":{"components/HistoricalsComponent.html":{}}}],["this.date.gettim",{"_index":965,"title":{},"body":{"classes/Task.html":{}}}],["this.date.toisostr",{"_index":738,"title":{},"body":{"classes/Record.html":{}}}],["this.date.toisostring().substring(0",{"_index":739,"title":{},"body":{"classes/Record.html":{}}}],["this.datecontrol",{"_index":84,"title":{},"body":{"components/AddTaskComponent.html":{},"components/TasksComponent.html":{}}}],["this.datecontrol.invalid",{"_index":87,"title":{},"body":{"components/AddTaskComponent.html":{}}}],["this.datecontrol.valu",{"_index":91,"title":{},"body":{"components/AddTaskComponent.html":{}}}],["this.descript",{"_index":959,"title":{},"body":{"classes/Task.html":{}}}],["this.descriptioncontrol",{"_index":80,"title":{},"body":{"components/AddTaskComponent.html":{},"components/TasksComponent.html":{}}}],["this.descriptioncontrol.invalid",{"_index":86,"title":{},"body":{"components/AddTaskComponent.html":{}}}],["this.descriptioncontrol.valu",{"_index":90,"title":{},"body":{"components/AddTaskComponent.html":{}}}],["this.dim",{"_index":830,"title":{},"body":{"components/SparklineComponent.html":{}}}],["this.dims.height",{"_index":854,"title":{},"body":{"components/SparklineComponent.html":{}}}],["this.dims.width",{"_index":851,"title":{},"body":{"components/SparklineComponent.html":{}}}],["this.domsanitizer.bypasssecuritytrustresourceurl",{"_index":182,"title":{},"body":{"components/AppComponent.html":{}}}],["this.ec_graph",{"_index":503,"title":{},"body":{"components/HistoricalsComponent.html":{}}}],["this.getscaletype(valu",{"_index":861,"title":{},"body":{"components/SparklineComponent.html":{}}}],["this.getseriesdomain",{"_index":848,"title":{},"body":{"components/SparklineComponent.html":{}}}],["this.getxdomain",{"_index":844,"title":{},"body":{"components/SparklineComponent.html":{}}}],["this.getxscale(this.xdomain",{"_index":850,"title":{},"body":{"components/SparklineComponent.html":{}}}],["this.getydomain",{"_index":846,"title":{},"body":{"components/SparklineComponent.html":{}}}],["this.getyscale(this.ydomain",{"_index":853,"title":{},"body":{"components/SparklineComponent.html":{}}}],["this.height",{"_index":832,"title":{},"body":{"components/SparklineComponent.html":{}}}],["this.humidity_graph",{"_index":501,"title":{},"body":{"components/HistoricalsComponent.html":{}}}],["this.isdate(valu",{"_index":880,"title":{},"body":{"components/SparklineComponent.html":{}}}],["this.isoutd",{"_index":966,"title":{},"body":{"classes/Task.html":{}}}],["this.light_graph",{"_index":502,"title":{},"body":{"components/HistoricalsComponent.html":{}}}],["this.loadformodule(data.modul",{"_index":1009,"title":{},"body":{"injectables/TaskService.html":{}}}],["this.luxcontrol",{"_index":344,"title":{},"body":{"components/ConfigurationComponent.html":{}}}],["this.luxcontrol.invalid",{"_index":351,"title":{},"body":{"components/ConfigurationComponent.html":{}}}],["this.luxcontrol.valu",{"_index":355,"title":{},"body":{"components/ConfigurationComponent.html":{}}}],["this.margin",{"_index":833,"title":{},"body":{"components/SparklineComponent.html":{}}}],["this.margin[0",{"_index":858,"title":{},"body":{"components/SparklineComponent.html":{}}}],["this.maticonregistry.addsvgicon",{"_index":180,"title":{},"body":{"components/AppComponent.html":{}}}],["this.modul",{"_index":78,"title":{},"body":{"components/AddTaskComponent.html":{},"components/AppComponent.html":{},"components/ConfigurationComponent.html":{},"components/DashboardComponent.html":{},"components/HomeComponent.html":{},"components/ModulesComponent.html":{},"classes/Task.html":{}}}],["this.module$.asobserv",{"_index":652,"title":{},"body":{"injectables/ModuleService.html":{}}}],["this.module$.next(_modul",{"_index":650,"title":{},"body":{"injectables/ModuleService.html":{}}}],["this.module.config",{"_index":388,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.module.configs.air_temperatur",{"_index":393,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.module.configs.ec",{"_index":403,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.module.configs.humid",{"_index":400,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.module.configs.light",{"_index":354,"title":{},"body":{"components/ConfigurationComponent.html":{}}}],["this.module.configs.ph",{"_index":407,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.module.configs.water_temperatur",{"_index":397,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.module.nam",{"_index":352,"title":{},"body":{"components/ConfigurationComponent.html":{}}}],["this.module.start_at",{"_index":357,"title":{},"body":{"components/ConfigurationComponent.html":{}}}],["this.module.statu",{"_index":389,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.module.status.air_temperatur",{"_index":392,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.module.status.ec",{"_index":402,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.module.status.humid",{"_index":399,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.module.status.ph",{"_index":406,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.module.status.water_temperatur",{"_index":396,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.module_id",{"_index":957,"title":{},"body":{"classes/Task.html":{}}}],["this.modulenam",{"_index":506,"title":{},"body":{"components/HistoricalsComponent.html":{}}}],["this.moduleservic",{"_index":75,"title":{},"body":{"components/AddTaskComponent.html":{},"components/ConfigurationComponent.html":{},"components/ModulesComponent.html":{}}}],["this.moduleservice.getal",{"_index":554,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.moduleservice.getall().subscribe(modul",{"_index":194,"title":{},"body":{"components/AppComponent.html":{}}}],["this.moduleservice.getcuerrent().subscribe(_modul",{"_index":387,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.moduleservice.setcurrent(id",{"_index":556,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.moduleservice.setcurrent(params.id",{"_index":663,"title":{},"body":{"components/ModulesComponent.html":{}}}],["this.moduleservice.update(this.module).subscrib",{"_index":356,"title":{},"body":{"components/ConfigurationComponent.html":{}}}],["this.namecontrol",{"_index":341,"title":{},"body":{"components/ConfigurationComponent.html":{}}}],["this.namecontrol.invalid",{"_index":350,"title":{},"body":{"components/ConfigurationComponent.html":{}}}],["this.namecontrol.valu",{"_index":353,"title":{},"body":{"components/ConfigurationComponent.html":{}}}],["this.ph_graph",{"_index":504,"title":{},"body":{"components/HistoricalsComponent.html":{}}}],["this.result",{"_index":869,"title":{},"body":{"components/SparklineComponent.html":{}}}],["this.route.params.subscribe(param",{"_index":662,"title":{},"body":{"components/ModulesComponent.html":{}}}],["this.router.navigate([this.module.id",{"_index":93,"title":{},"body":{"components/AddTaskComponent.html":{}}}],["this.scaletyp",{"_index":860,"title":{},"body":{"components/SparklineComponent.html":{}}}],["this.schem",{"_index":885,"title":{},"body":{"components/SparklineComponent.html":{}}}],["this.schemetyp",{"_index":842,"title":{},"body":{"components/SparklineComponent.html":{}}}],["this.selectedid",{"_index":646,"title":{},"body":{"injectables/ModuleService.html":{}}}],["this.semaphore.air_temperatur",{"_index":390,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.semaphore.ec",{"_index":401,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.semaphore.humid",{"_index":398,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.semaphore.ph",{"_index":405,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.semaphore.water_temperatur",{"_index":395,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.semaphorecolorcalcul",{"_index":391,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.seriesdomain",{"_index":847,"title":{},"body":{"components/SparklineComponent.html":{}}}],["this.setcolor",{"_index":855,"title":{},"body":{"components/SparklineComponent.html":{}}}],["this.start_at",{"_index":313,"title":{},"body":{"classes/ConfigsSchema.html":{},"classes/Module.html":{},"classes/StatusSchema.html":{}}}],["this.start_at.gettim",{"_index":319,"title":{},"body":{"classes/ConfigsSchema.html":{},"classes/Module.html":{},"classes/StatusSchema.html":{}}}],["this.statu",{"_index":960,"title":{},"body":{"classes/Task.html":{}}}],["this.status[key",{"_index":737,"title":{},"body":{"classes/Record.html":{}}}],["this.subscript",{"_index":74,"title":{},"body":{"components/AddTaskComponent.html":{},"components/ConfigurationComponent.html":{},"components/DashboardComponent.html":{},"components/HistoricalsComponent.html":{},"components/ModulesComponent.html":{}}}],["this.subscription.unsubscrib",{"_index":85,"title":{},"body":{"components/AddTaskComponent.html":{},"components/ConfigurationComponent.html":{},"components/DashboardComponent.html":{},"components/HistoricalsComponent.html":{},"components/ModulesComponent.html":{}}}],["this.task",{"_index":1021,"title":{},"body":{"components/TasksComponent.html":{}}}],["this.tasks$.next(r",{"_index":994,"title":{},"body":{"injectables/TaskService.html":{}}}],["this.taskservic",{"_index":88,"title":{},"body":{"components/AddTaskComponent.html":{}}}],["this.taskservice.loadformodule(_modul",{"_index":651,"title":{},"body":{"injectables/ModuleService.html":{}}}],["this.taskservice.task",{"_index":1022,"title":{},"body":{"components/TasksComponent.html":{}}}],["this.taskservice.update(task);//.subscrib",{"_index":1025,"title":{},"body":{"components/TasksComponent.html":{}}}],["this.todobackendservice.getalltodo",{"_index":995,"title":{},"body":{"injectables/TaskService.html":{}}}],["this.tograph(data",{"_index":513,"title":{},"body":{"components/HistoricalsComponent.html":{}}}],["this.tographlight(data",{"_index":514,"title":{},"body":{"components/HistoricalsComponent.html":{}}}],["this.transform",{"_index":856,"title":{},"body":{"components/SparklineComponent.html":{}}}],["this.typ",{"_index":962,"title":{},"body":{"classes/Task.html":{}}}],["this.valuedomain",{"_index":868,"title":{},"body":{"components/SparklineComponent.html":{}}}],["this.water_temp_graph",{"_index":499,"title":{},"body":{"components/HistoricalsComponent.html":{}}}],["this.width",{"_index":831,"title":{},"body":{"components/SparklineComponent.html":{}}}],["this.xdomain",{"_index":843,"title":{},"body":{"components/SparklineComponent.html":{}}}],["this.xscal",{"_index":849,"title":{},"body":{"components/SparklineComponent.html":{}}}],["this.xset",{"_index":867,"title":{},"body":{"components/SparklineComponent.html":{}}}],["this.ydomain",{"_index":845,"title":{},"body":{"components/SparklineComponent.html":{}}}],["this.yscal",{"_index":852,"title":{},"body":{"components/SparklineComponent.html":{}}}],["through",{"_index":431,"title":{},"body":{"components/DashboardComponent.html":{}}}],["tile",{"_index":443,"title":{},"body":{"components/DashboardComponent.html":{}}}],["time",{"_index":411,"title":{},"body":{"components/DashboardComponent.html":{},"components/SparklineComponent.html":{}}}],["titl",{"_index":717,"title":{},"body":{"modules/ModulesRoutingModule.html":{}}}],["today",{"_index":100,"title":{},"body":{"components/AddTaskComponent.html":{}}}],["todo",{"_index":996,"title":{},"body":{"injectables/TaskService.html":{}}}],["todo({id:todo.id",{"_index":998,"title":{},"body":{"injectables/TaskService.html":{}}}],["todo.complet",{"_index":1000,"title":{},"body":{"injectables/TaskService.html":{}}}],["tograph",{"_index":470,"title":{},"body":{"components/HistoricalsComponent.html":{}}}],["tograph(data",{"_index":476,"title":{},"body":{"components/HistoricalsComponent.html":{}}}],["tographlight",{"_index":471,"title":{},"body":{"components/HistoricalsComponent.html":{}}}],["tographlight(data",{"_index":480,"title":{},"body":{"components/HistoricalsComponent.html":{}}}],["toload",{"_index":968,"title":{},"body":{"injectables/TaskService.html":{}}}],["toolbar",{"_index":102,"title":{},"body":{"components/AddTaskComponent.html":{},"components/AppComponent.html":{},"components/TasksComponent.html":{}}}],["tooltip",{"_index":917,"title":{},"body":{"components/SparklineComponent.html":{}}}],["top",{"_index":126,"title":{},"body":{"components/AddTaskComponent.html":{},"components/AppComponent.html":{},"components/ConfigurationComponent.html":{},"components/DashboardComponent.html":{},"components/HomeComponent.html":{},"components/TasksComponent.html":{}}}],["trackbi",{"_index":780,"title":{},"body":{"components/SparklineComponent.html":{}}}],["trackby(index",{"_index":805,"title":{},"body":{"components/SparklineComponent.html":{}}}],["transform",{"_index":766,"title":{},"body":{"components/SparklineComponent.html":{}}}],["transit",{"_index":900,"title":{},"body":{"components/SparklineComponent.html":{}}}],["translate(${this.dims.xoffset",{"_index":857,"title":{},"body":{"components/SparklineComponent.html":{}}}],["transpar",{"_index":105,"title":{},"body":{"components/AddTaskComponent.html":{},"components/HistoricalsComponent.html":{},"components/HomeComponent.html":{},"components/TasksComponent.html":{}}}],["tree",{"_index":7,"title":{},"body":{"components/AddTaskComponent.html":{},"components/AppComponent.html":{},"components/ConfigurationComponent.html":{},"components/DashboardComponent.html":{},"components/HistoricalsComponent.html":{},"components/HomeComponent.html":{},"components/ModulesComponent.html":{},"components/SparklineComponent.html":{},"components/TasksComponent.html":{}}}],["true",{"_index":263,"title":{},"body":{"modules/AppModule.html":{},"components/SparklineComponent.html":{},"miscellaneous/variables.html":{}}}],["type",{"_index":45,"title":{},"body":{"components/AddTaskComponent.html":{},"components/AppComponent.html":{},"classes/ConfigsSchema.html":{},"components/ConfigurationComponent.html":{},"components/DashboardComponent.html":{},"interfaces/Deserializable.html":{},"components/HistoricalsComponent.html":{},"components/HomeComponent.html":{},"classes/Module.html":{},"injectables/ModuleService.html":{},"components/ModulesComponent.html":{},"classes/Record.html":{},"injectables/RecordService.html":{},"components/SparklineComponent.html":{},"classes/StatusSchema.html":{},"classes/Task.html":{},"injectables/TaskService.html":{},"components/TasksComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typeof",{"_index":881,"title":{},"body":{"components/SparklineComponent.html":{}}}],["underlin",{"_index":122,"title":{},"body":{"components/AddTaskComponent.html":{},"components/ConfigurationComponent.html":{}}}],["unit",{"_index":1119,"title":{},"body":{"index.html":{}}}],["updat",{"_index":614,"title":{},"body":{"injectables/ModuleService.html":{},"components/SparklineComponent.html":{},"injectables/TaskService.html":{}}}],["update(data",{"_index":978,"title":{},"body":{"injectables/TaskService.html":{}}}],["update(m",{"_index":627,"title":{},"body":{"injectables/ModuleService.html":{}}}],["url",{"_index":609,"title":{},"body":{"injectables/ModuleService.html":{},"injectables/RecordService.html":{},"injectables/TaskService.html":{}}}],["url(\"../../../../assets/images/alo.png",{"_index":436,"title":{},"body":{"components/DashboardComponent.html":{}}}],["us",{"_index":1109,"title":{},"body":{"index.html":{}}}],["valid",{"_index":65,"title":{},"body":{"components/AddTaskComponent.html":{},"components/ConfigurationComponent.html":{},"components/TasksComponent.html":{}}}],["validators.max(100000",{"_index":349,"title":{},"body":{"components/ConfigurationComponent.html":{}}}],["validators.maxlength(15",{"_index":343,"title":{},"body":{"components/ConfigurationComponent.html":{},"components/TasksComponent.html":{}}}],["validators.maxlength(25",{"_index":83,"title":{},"body":{"components/AddTaskComponent.html":{}}}],["validators.min(10000",{"_index":348,"title":{},"body":{"components/ConfigurationComponent.html":{}}}],["validators.minlength(3",{"_index":82,"title":{},"body":{"components/AddTaskComponent.html":{},"components/ConfigurationComponent.html":{},"components/TasksComponent.html":{}}}],["validators.pattern(\"[0",{"_index":346,"title":{},"body":{"components/ConfigurationComponent.html":{}}}],["validators.requir",{"_index":81,"title":{},"body":{"components/AddTaskComponent.html":{},"components/ConfigurationComponent.html":{},"components/TasksComponent.html":{}}}],["valu",{"_index":56,"title":{},"body":{"components/AddTaskComponent.html":{},"components/ConfigurationComponent.html":{},"components/DashboardComponent.html":{},"components/HistoricalsComponent.html":{},"injectables/ModuleService.html":{},"components/ModulesComponent.html":{},"injectables/RecordService.html":{},"components/SparklineComponent.html":{},"injectables/TaskService.html":{},"miscellaneous/variables.html":{}}}],["valuedomain",{"_index":784,"title":{},"body":{"components/SparklineComponent.html":{}}}],["values.map(v",{"_index":865,"title":{},"body":{"components/SparklineComponent.html":{}}}],["var",{"_index":145,"title":{},"body":{"components/AddTaskComponent.html":{},"components/AppComponent.html":{},"components/ConfigurationComponent.html":{},"components/DashboardComponent.html":{},"components/HistoricalsComponent.html":{},"components/HomeComponent.html":{},"components/ModulesComponent.html":{},"components/SparklineComponent.html":{},"components/TasksComponent.html":{}}}],["variabl",{"_index":1052,"title":{"miscellaneous/variables.html":{}},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["version",{"_index":1094,"title":{},"body":{"index.html":{}}}],["via",{"_index":1122,"title":{},"body":{"index.html":{}}}],["viewdimens",{"_index":810,"title":{},"body":{"components/SparklineComponent.html":{}}}],["viewencapsul",{"_index":821,"title":{},"body":{"components/SparklineComponent.html":{}}}],["viewencapsulation.non",{"_index":760,"title":{},"body":{"components/SparklineComponent.html":{}}}],["visibl",{"_index":889,"title":{},"body":{"components/SparklineComponent.html":{}}}],["void",{"_index":49,"title":{},"body":{"components/AddTaskComponent.html":{},"components/AppComponent.html":{},"components/ConfigurationComponent.html":{},"components/DashboardComponent.html":{},"components/HistoricalsComponent.html":{},"components/HomeComponent.html":{},"injectables/ModuleService.html":{},"components/ModulesComponent.html":{},"components/SparklineComponent.html":{},"injectables/TaskService.html":{},"components/TasksComponent.html":{}}}],["warn",{"_index":418,"title":{},"body":{"components/DashboardComponent.html":{}}}],["water",{"_index":186,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigurationComponent.html":{},"components/DashboardComponent.html":{},"components/HistoricalsComponent.html":{}}}],["water_temp_graph",{"_index":468,"title":{},"body":{"components/HistoricalsComponent.html":{}}}],["water_temperatur",{"_index":292,"title":{},"body":{"classes/ConfigsSchema.html":{},"components/DashboardComponent.html":{},"components/HistoricalsComponent.html":{},"classes/Module.html":{},"classes/StatusSchema.html":{}}}],["web",{"_index":248,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["weight",{"_index":915,"title":{},"body":{"components/SparklineComponent.html":{}}}],["welcom",{"_index":557,"title":{},"body":{"components/HomeComponent.html":{}}}],["white",{"_index":560,"title":{},"body":{"components/HomeComponent.html":{}}}],["width",{"_index":112,"title":{},"body":{"components/AddTaskComponent.html":{},"components/ConfigurationComponent.html":{},"components/DashboardComponent.html":{},"components/HistoricalsComponent.html":{},"components/HomeComponent.html":{},"components/ModulesComponent.html":{},"components/SparklineComponent.html":{},"components/TasksComponent.html":{}}}],["wrapper",{"_index":118,"title":{},"body":{"components/AddTaskComponent.html":{},"components/ConfigurationComponent.html":{}}}],["xaxisheight",{"_index":836,"title":{},"body":{"components/SparklineComponent.html":{}}}],["xdomain",{"_index":767,"title":{},"body":{"components/SparklineComponent.html":{}}}],["xscale",{"_index":768,"title":{},"body":{"components/SparklineComponent.html":{}}}],["xset",{"_index":769,"title":{},"body":{"components/SparklineComponent.html":{}}}],["yaxiswidth",{"_index":837,"title":{},"body":{"components/SparklineComponent.html":{}}}],["ydomain",{"_index":770,"title":{},"body":{"components/SparklineComponent.html":{}}}],["yellow",{"_index":381,"title":{},"body":{"components/DashboardComponent.html":{}}}],["yscale",{"_index":771,"title":{},"body":{"components/SparklineComponent.html":{}}}],["z",{"_index":207,"title":{},"body":{"components/AppComponent.html":{}}}],["zone.j",{"_index":1087,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":235,"title":{},"body":{"modules/AppModule.html":{},"modules/ModulesModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AddTaskComponent.html":{"url":"components/AddTaskComponent.html","title":"component - AddTaskComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AddTaskComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/components/add-task/add-task.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-add-task\n            \n\n            \n                styleUrls\n                ./add-task.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./add-task.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                dateControl\n                            \n                            \n                                descriptionControl\n                            \n                            \n                                minDate\n                            \n                            \n                                module\n                            \n                            \n                                    Private\n                                subscription\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                save\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(moduleService: ModuleService, taskService: TaskService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/components/add-task/add-task.component.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        moduleService\n                                                  \n                                                        \n                                                                    ModuleService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        taskService\n                                                  \n                                                        \n                                                                    TaskService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/modules/components/add-task/add-task.component.ts:41\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/modules/components/add-task/add-task.component.ts:28\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            save\n                            \n                            \n                        \n                    \n                \n                \n                    \nsave()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/modules/components/add-task/add-task.component.ts:47\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dateControl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        dateControl:     FormControl\n\n                    \n                \n                    \n                        \n                            Type :     FormControl\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/components/add-task/add-task.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            descriptionControl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        descriptionControl:     FormControl\n\n                    \n                \n                    \n                        \n                            Type :     FormControl\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/components/add-task/add-task.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            minDate\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        minDate:     \n\n                    \n                \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/components/add-task/add-task.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            module\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        module:     Module\n\n                    \n                \n                    \n                        \n                            Type :     Module\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/components/add-task/add-task.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            subscription\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        subscription:     Subscription\n\n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/components/add-task/add-task.component.ts:20\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from \"@angular/core\";\nimport { TaskService } from \"../../../core/services/task.service\";\nimport { FormControl, Validators } from \"@angular/forms\";\nimport { Task } from \"../../../core/models/task\";\nimport { Module } from \"../../../core/models/module\";\nimport { ModuleService } from \"../../../core/services/module.service\";\nimport { Router } from \"@angular/router\";\nimport { Subscription } from \"rxjs\";\n\n@Component({\n  selector: \"app-add-task\",\n  templateUrl: \"./add-task.component.html\",\n  styleUrls: [\"./add-task.component.scss\"]\n})\nexport class AddTaskComponent implements OnInit {\n  descriptionControl: FormControl;\n  dateControl: FormControl;\n  minDate = new Date();\n  module: Module;\n  private subscription: Subscription = null;\n\n  constructor(\n    private moduleService: ModuleService,\n    private taskService: TaskService,\n    private router: Router\n  ) {}\n\n  ngOnInit() {\n    this.subscription = this.moduleService\n      .getCuerrent()\n      .subscribe(_module => (this.module = _module));\n\n    this.descriptionControl = new FormControl(\"\", [\n      Validators.required,\n      Validators.minLength(3),\n      Validators.maxLength(25)\n    ]);\n    this.dateControl = new FormControl(\"\", [Validators.required]);\n  }\n\n  ngOnDestroy() {\n    if (this.subscription !== null) {\n      this.subscription.unsubscribe();\n    }\n  }\n\n  save() {\n    if (this.descriptionControl.invalid || this.dateControl.invalid) return;\n    this.taskService\n      .create(\n        new Task(\n          this.module,\n          this.descriptionControl.value,\n          this.dateControl.value\n        )\n      );\n//      .subscribe();\n    return this.router.navigate([this.module.id + \"/tasks\"]);\n  }\n}\n\n    \n\n    \n        \n  Tasks\n  \n  \n    add\n  \n\n\n\n  \n    \n    \n      Task description is required.\n    \n    \n      Task description must be between 3 and 25 characters.\n    \n  \n  \n  \n    \n    \n    \n    \n      Task date is required.\n    \n    \n      Task must be after today.\n    \n  \n  \n  Save\n\n\n    \n\n    \n                \n                    ./add-task.component.scss\n                \n                mat-toolbar {\n  background-color: transparent !important;\n}\n\n.content {\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  width: 95%;\n  margin: auto;\n\n  .mat-form-field {\n    .mat-form-field-wrapper {\n      padding-bottom: 0;\n\n      .mat-form-field-underline {\n        position: initial !important;\n        display: block;\n        margin-top: -1px;\n      }\n\n      .mat-form-field-subscript-wrapper,\n      .mat-form-field-ripple {\n        position: initial !important;\n        display: table;\n      }\n\n      .mat-form-field-subscript-wrapper {\n        min-height: calc(1em + 1px);\n      }\n    }\n  }\n\n  .mat-stroked-button {\n    border-radius: 17px;\n    width: 80% !important;\n    align-self: center;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Tasks        add                  Task description is required.              Task description must be between 3 and 25 characters.                                Task date is required.              Task must be after today.          Save'\n    var COMPONENTS = [{'name': 'AddTaskComponent', 'selector': 'app-add-task'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ConfigurationComponent', 'selector': 'app-configuration'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'HistoricalsComponent', 'selector': 'app-historicals'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'ModulesComponent', 'selector': 'app-modules'},{'name': 'SparklineComponent', 'selector': 'ngx-charts-sparkline'},{'name': 'TasksComponent', 'selector': 'app-tasks'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AddTaskComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                ./app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                modules\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(moduleService: ModuleService, matIconRegistry: MatIconRegistry, domSanitizer: DomSanitizer)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        moduleService\n                                                  \n                                                        \n                                                                    ModuleService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        matIconRegistry\n                                                  \n                                                        \n                                                                    MatIconRegistry\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        domSanitizer\n                                                  \n                                                        \n                                                                    DomSanitizer\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/app.component.ts:59\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            modules\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        modules:     Module[]\n\n                    \n                \n                    \n                        \n                            Type :     Module[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:14\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from \"@angular/core\";\nimport { MatIconRegistry } from \"@angular/material/icon\";\nimport { ModuleService } from \"./core/services/module.service\";\nimport { DomSanitizer } from \"@angular/platform-browser\";\n\nimport { Module } from \"./core/models/module\";\n\n@Component({\n  selector: \"app-root\",\n  templateUrl: \"./app.component.html\",\n  styleUrls: [\"./app.component.scss\"]\n})\nexport class AppComponent {\n  public modules: Module[];\n\n  constructor(\n    private moduleService: ModuleService,\n    private matIconRegistry: MatIconRegistry,\n    private domSanitizer: DomSanitizer\n  ) {\n    this.matIconRegistry.addSvgIcon(\n      `sun`,\n      this.domSanitizer.bypassSecurityTrustResourceUrl(\n        \"../assets/icons/Sun.svg\"\n      )\n    );\n    this.matIconRegistry.addSvgIcon(\n      `pump`,\n      this.domSanitizer.bypassSecurityTrustResourceUrl(\n        \"../assets/icons/Pump.svg\"\n      )\n    );\n    this.matIconRegistry.addSvgIcon(\n      `water`,\n      this.domSanitizer.bypassSecurityTrustResourceUrl(\n        \"../assets/icons/Water.svg\"\n      )\n    );\n    this.matIconRegistry.addSvgIcon(\n      `light`,\n      this.domSanitizer.bypassSecurityTrustResourceUrl(\n        \"../assets/icons/Light.svg\"\n      )\n    );\n    this.matIconRegistry.addSvgIcon(\n      `light1`,\n      this.domSanitizer.bypassSecurityTrustResourceUrl(\n        \"../assets/icons/Light1.svg\"\n      )\n    );\n    this.matIconRegistry.addSvgIcon(\n      `temperature`,\n      this.domSanitizer.bypassSecurityTrustResourceUrl(\n        \"../assets/icons/Temperature.svg\"\n      )\n    );\n  }\n\n  ngOnInit() {\n    this.moduleService.getAll().subscribe(modules => (this.modules = modules));\n  }\n}\n\n    \n\n    \n        \n\n    \n\n    \n                \n                    ./app.component.scss\n                \n                .example-container {\n  display: flex;\n  flex-direction: column;\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n}\n\n.example-is-mobile .example-toolbar {\n  position: fixed;\n  /* Make sure the toolbar will stay on top of the content as it scrolls past. */\n  z-index: 2;\n}\n\nh1.example-app-name {\n  margin-left: 8px;\n}\n\n.example-sidenav-container {\n  /* When the sidenav is not fixed, stretch the sidenav container to fill the available space. This\n     causes `` to act as our scrolling element for desktop layouts. */\n  flex: 1;\n}\n\n.example-is-mobile .example-sidenav-container {\n  /* When the sidenav is fixed, don't constrain the height of the sidenav container. This allows the\n     `` to be our scrolling element for mobile layouts. */\n  flex: 1 0 auto;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AddTaskComponent', 'selector': 'app-add-task'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ConfigurationComponent', 'selector': 'app-configuration'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'HistoricalsComponent', 'selector': 'app-historicals'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'ModulesComponent', 'selector': 'app-modules'},{'name': 'SparklineComponent', 'selector': 'ngx-charts-sparkline'},{'name': 'TasksComponent', 'selector': 'app-tasks'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n  Modules\n  AppModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nAppModule -->\n\nHomeComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nModuleService\n\nModuleService\n\nAppModule -->\n\nModuleService->AppModule\n\n\n\n\n\nRecordService\n\nRecordService\n\nAppModule -->\n\nRecordService->AppModule\n\n\n\n\n\nTaskService\n\nTaskService\n\nAppModule -->\n\nTaskService->AppModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                AppComponent\n                            \n                            \n                                HomeComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     ModuleService\n                            \n                            \n                                     RecordService\n                            \n                            \n                                     TaskService\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    AppRoutingModule\n                            \n                    \n                \n                \n                    Bootstrap\n                    \n                            \n                                AppComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { BrowserModule } from \"@angular/platform-browser\";\nimport { NgModule } from \"@angular/core\";\nimport { BrowserAnimationsModule } from \"@angular/platform-browser/animations\";\nimport { HttpClientModule } from \"@angular/common/http\";\nimport { HttpClientInMemoryWebApiModule } from \"angular-in-memory-web-api\";\nimport { MatIconModule } from \"@angular/material/icon\";\n\n//Modules\nimport { AppRoutingModule } from \"./app-routing.module\";\n\n//Services\nimport { ApiMockService } from \"./core/services/api-mock.service\";\nimport { TaskService } from \"./core/services/task.service\";\nimport { ModuleService } from \"./core/services/module.service\";\nimport { RecordService } from \"./core/services/record.service\";\n\n//Components\nimport { AppComponent } from \"./app.component\";\nimport { HomeComponent } from \"./home/home.component\";\n\n@NgModule({\n  declarations: [AppComponent, HomeComponent],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    HttpClientModule,\n    AppRoutingModule,\n    MatIconModule,\n    HttpClientInMemoryWebApiModule.forRoot(ApiMockService, {\n      dataEncapsulation: false,\n      passThruUnknownUrl: true\n    })\n  ],\n  providers: [TaskService, ModuleService, RecordService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AppPage.html":{"url":"classes/AppPage.html","title":"class - AppPage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AppPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            e2e/src/app.po.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getParagraphText\n                            \n                            \n                                navigateTo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getParagraphText\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetParagraphText()\n                    \n                \n\n\n                        \n                            \n                                    Defined in e2e/src/app.po.ts:8\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            navigateTo\n                            \n                            \n                        \n                    \n                \n                \n                    \nnavigateTo()\n                    \n                \n\n\n                        \n                            \n                                    Defined in e2e/src/app.po.ts:4\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { browser, by, element } from 'protractor';\n\nexport class AppPage {\n  navigateTo() {\n    return browser.get('/');\n  }\n\n  getParagraphText() {\n    return element(by.css('app-root h1')).getText();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n  Modules\n  AppRoutingModule\n\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n        \n\n        \n            \n            \n        \n    \n\n\n    \n        import { NgModule } from \"@angular/core\";\nimport { Routes, RouterModule } from \"@angular/router\";\n\n//Components\nimport { HomeComponent } from \"./home/home.component\";\n\n\nconst routes: Routes = [\n  {\n    path: \"home\",\n    component: HomeComponent\n  },\n  {\n    path: \":id\",\n    loadChildren: \"./modules/modules.module#ModulesModule\"\n  },\n  {\n    path: \"**\",\n    redirectTo: \"home\"\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ConfigsSchema.html":{"url":"classes/ConfigsSchema.html","title":"class - ConfigsSchema","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ConfigsSchema\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/module.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                air_temperature\n                            \n                            \n                                ec\n                            \n                            \n                                humidity\n                            \n                            \n                                light\n                            \n                            \n                                ph\n                            \n                            \n                                water_temperature\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            air_temperature\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        air_temperature:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/models/module.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ec\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        ec:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/models/module.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            humidity\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        humidity:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/models/module.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            light\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        light:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/models/module.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ph\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        ph:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/models/module.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            water_temperature\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        water_temperature:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/models/module.ts:5\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Deserializable } from \"./deserializable\";\n\nclass ConfigsSchema {\n  air_temperature: number;\n  water_temperature: number;\n  humidity: number;\n  light: number;\n  ph: number;\n  ec: number;\n}\n\nexport class StatusSchema {\n  alert?: string;\n  air_temperature: number;\n  water_temperature: number;\n  humidity: number;\n  light: number;\n  ph: number;\n  ec: number;\n  pump: boolean;\n  bulb: boolean;\n}\n\nexport class Module implements Deserializable {\n  id: number;\n  name: string;\n  serial: string;\n  start_at: Date;\n  status: StatusSchema;\n  configs: ConfigsSchema;\n\n  deserialize(input: any) {\n    Object.assign(this, input);\n    this.start_at = new Date(this.start_at);\n    return this;\n  }\n\n  GrowthTime() {\n    if (!this.start_at) return \"\";\n    let diff = Math.abs(new Date().getTime() - this.start_at.getTime());\n    return Math.ceil(diff / (1000 * 3600 * 24));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ConfigurationComponent.html":{"url":"components/ConfigurationComponent.html","title":"component - ConfigurationComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ConfigurationComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/components/configuration/configuration.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-configuration\n            \n\n            \n                styleUrls\n                ./configuration.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./configuration.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                luxControl\n                            \n                            \n                                module\n                            \n                            \n                                nameControl\n                            \n                            \n                                    Private\n                                subscription\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                reset\n                            \n                            \n                                save\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(moduleService: ModuleService)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/components/configuration/configuration.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        moduleService\n                                                  \n                                                        \n                                                                    ModuleService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/modules/components/configuration/configuration.component.ts:38\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/modules/components/configuration/configuration.component.ts:21\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            reset\n                            \n                            \n                        \n                    \n                \n                \n                    \nreset()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/modules/components/configuration/configuration.component.ts:51\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            save\n                            \n                            \n                        \n                    \n                \n                \n                    \nsave()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/modules/components/configuration/configuration.component.ts:44\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            luxControl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        luxControl:     FormControl\n\n                    \n                \n                    \n                        \n                            Type :     FormControl\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/components/configuration/configuration.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            module\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        module:     Module\n\n                    \n                \n                    \n                        \n                            Type :     Module\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/components/configuration/configuration.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            nameControl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        nameControl:     FormControl\n\n                    \n                \n                    \n                        \n                            Type :     FormControl\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/components/configuration/configuration.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            subscription\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        subscription:     Subscription\n\n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/components/configuration/configuration.component.ts:14\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, OnDestroy } from \"@angular/core\";\nimport { FormControl, Validators } from \"@angular/forms\";\nimport { ModuleService } from \"../../../core/services/module.service\";\nimport { Module } from \"../../../core/models/module\";\nimport { Subscription } from \"rxjs\";\n\n@Component({\n  selector: \"app-configuration\",\n  templateUrl: \"./configuration.component.html\",\n  styleUrls: [\"./configuration.component.scss\"]\n})\nexport class ConfigurationComponent implements OnInit, OnDestroy {\n  module: Module;\n  private subscription: Subscription = null;\n\n  nameControl: FormControl;\n  luxControl: FormControl;\n\n  constructor(private moduleService: ModuleService) {}\n\n  ngOnInit() {\n    this.subscription = this.moduleService\n      .getCuerrent()\n      .subscribe(module => (this.module = module));\n    this.nameControl = new FormControl(this.module.name, [\n      Validators.required,\n      Validators.minLength(3),\n      Validators.maxLength(15)\n    ]);\n    this.luxControl = new FormControl(this.module.configs.light, [\n      Validators.required,\n      Validators.pattern(\"[0-9]*\"),\n      Validators.min(10000),\n      Validators.max(100000)\n    ]);\n  }\n\n  ngOnDestroy() {\n    if (this.subscription !== null) {\n      this.subscription.unsubscribe();\n    }\n  }\n\n  save() {\n    if (this.nameControl.invalid || this.luxControl.invalid) return;\n    this.module.name = this.nameControl.value;\n    this.module.configs.light = this.luxControl.value;\n    this.moduleService.update(this.module).subscribe();\n  }\n\n  reset() {\n    this.module.start_at = new Date();\n    this.moduleService.update(this.module).subscribe();\n  }\n}\n\n    \n\n    \n        \n  \n    Configurations\n    \n    Save\n  \n  \n    \n    \n      Field is required.\n    \n    \n      Field must be between 3 and 15 characters.\n    \n  \n\n  Air Temperature (ºC)\n  \n\n  Water Temperature (ºC)\n  \n\n  Humidity\n  \n\n  Acidity (pH)\n  \n\n  Electric Conductivity\n  \n\n  \n    \n    \n      Field is required.\n    \n    \n      Field is required.\n    \n  \n\n  Reset Module\n\n\n    \n\n    \n                \n                    ./configuration.component.scss\n                \n                .content {\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  width: 95%;\n  margin: auto;\n\n  .header {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n\n    .mat-stroked-button {\n      border-radius: 17px;\n    }\n  }\n\n  .mat-form-field {\n    .mat-form-field-wrapper {\n      padding-bottom: 0;\n\n      .mat-form-field-underline {\n        position: initial !important;\n        display: block;\n        margin-top: -1px;\n      }\n\n      .mat-form-field-subscript-wrapper,\n      .mat-form-field-ripple {\n        position: initial !important;\n        display: table;\n      }\n\n      .mat-form-field-subscript-wrapper {\n        min-height: calc(1em + 1px);\n      }\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Configurations        Save                  Field is required.              Field must be between 3 and 15 characters.        Air Temperature (ºC)    Water Temperature (ºC)    Humidity    Acidity (pH)    Electric Conductivity                  Field is required.              Field is required.        Reset Module'\n    var COMPONENTS = [{'name': 'AddTaskComponent', 'selector': 'app-add-task'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ConfigurationComponent', 'selector': 'app-configuration'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'HistoricalsComponent', 'selector': 'app-historicals'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'ModulesComponent', 'selector': 'app-modules'},{'name': 'SparklineComponent', 'selector': 'ngx-charts-sparkline'},{'name': 'TasksComponent', 'selector': 'app-tasks'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ConfigurationComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DashboardComponent.html":{"url":"components/DashboardComponent.html","title":"component - DashboardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DashboardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/components/dashboard/dashboard.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-dashboard\n            \n\n            \n                styleUrls\n                ./dashboard.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./dashboard.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                module\n                            \n                            \n                                semaphore\n                            \n                            \n                                    Private\n                                subscription\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                semaphoreColorCalculator\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(moduleService: ModuleService)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/components/dashboard/dashboard.component.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        moduleService\n                                                  \n                                                        \n                                                                    ModuleService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/modules/components/dashboard/dashboard.component.ts:59\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/modules/components/dashboard/dashboard.component.ts:26\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            semaphoreColorCalculator\n                            \n                            \n                        \n                    \n                \n                \n                    \nsemaphoreColorCalculator(value: number, ref: number, error: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/modules/components/dashboard/dashboard.component.ts:65\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        ref\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        error\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                0\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     \"green\" | \"yellow\" | \"red\"\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            module\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        module:     Module\n\n                    \n                \n                    \n                        \n                            Type :     Module\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/components/dashboard/dashboard.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            semaphore\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        semaphore:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    air_temperature: \"red\",\n    water_temperature: \"red\",\n    humidity: \"red\",\n    ec: \"red\",\n    ph: \"red\"\n  }\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/components/dashboard/dashboard.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            subscription\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        subscription:     Subscription\n\n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/components/dashboard/dashboard.component.ts:14\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, OnDestroy } from \"@angular/core\";\nimport { Subscription } from \"rxjs\";\n\nimport { ModuleService } from \"../../../core/services/module.service\";\nimport { Module } from \"../../../core/models/module\";\n\n@Component({\n  selector: \"app-dashboard\",\n  templateUrl: \"./dashboard.component.html\",\n  styleUrls: [\"./dashboard.component.scss\"]\n})\nexport class DashboardComponent implements OnInit, OnDestroy {\n  module: Module = null;\n  private subscription: Subscription = null;\n\n  semaphore = {\n    air_temperature: \"red\",\n    water_temperature: \"red\",\n    humidity: \"red\",\n    ec: \"red\",\n    ph: \"red\"\n  };\n\n  constructor(private moduleService: ModuleService) {}\n\n  ngOnInit() {\n    this.subscription = this.moduleService.getCuerrent().subscribe(_module => {\n      this.module = _module;\n      if (this.module.configs && this.module.status) {\n        this.semaphore.air_temperature = this.semaphoreColorCalculator(\n          this.module.status.air_temperature,\n          this.module.configs.air_temperature,\n          10\n        );\n        this.semaphore.water_temperature = this.semaphoreColorCalculator(\n          this.module.status.water_temperature,\n          this.module.configs.water_temperature,\n          10\n        );\n        this.semaphore.humidity = this.semaphoreColorCalculator(\n          this.module.status.humidity,\n          this.module.configs.humidity,\n          10\n        );\n        this.semaphore.ec = this.semaphoreColorCalculator(\n          this.module.status.ec,\n          this.module.configs.ec,\n          5\n        );\n        this.semaphore.ph = this.semaphoreColorCalculator(\n          this.module.status.ph,\n          this.module.configs.ph,\n          2\n        );\n      }\n    });\n  }\n\n  ngOnDestroy() {\n    if (this.subscription !== null) {\n      this.subscription.unsubscribe();\n    }\n  }\n\n  semaphoreColorCalculator(value: number, ref: number, error: number = 0) {\n    if (error == 0) {\n      if (value == ref) return \"green\";\n      if (value = ref * 0.9) return \"yellow\";\n      return \"red\";\n    }\n    error /= 100;\n    if (value = ref * (1 - error))\n      return \"green\";\n    if (value = ref * (1 - error * 2))\n      return \"yellow\";\n    return \"red\";\n  }\n}\n\n    \n\n    \n        \n\n  \n    \n      \n        Growth Time\n      \n      \n        {{module.GrowthTime()}}days\n      \n    \n  \n\n  \n    \n      \n        For now...\n      \n      \n        \n          {{module.status.alert ? module.status.alert : 'Everythig look fine.'}}\n        \n      \n    \n  \n\n  \n    \n      Pump\n      Light\n    \n  \n\n  \n    \n      \n        \n          error\n          warning\n          check\n        \n        \n          Air Temperature\n        \n        ~{{ module.configs.air_temperature | number:'1.0-1' }}ºC\n      \n      \n        {{ module.status.air_temperature | number:'1.0-1' }}ºC\n      \n    \n  \n\n  \n    \n      \n        \n          error\n          warning\n          check\n        \n        Water Temperature\n        ~{{ module.configs.water_temperature | number:'1.0-1' }}ºC\n      \n      \n        {{ module.status.water_temperature | number:'1.0-1' }}ºC\n      \n    \n  \n\n  \n    \n      \n        \n          error\n          warning\n          check\n        \n        Humidity\n        ~{{ module.configs.humidity | number:'1.0-1' }}%\n      \n      \n        {{ module.status.humidity | number:'1.0-1' }}%\n      \n    \n  \n\n  \n    \n      \n        \n          error\n          warning\n          check\n        \n        pH\n        ~{{ module.configs.ph | number:'1.0-1' }}\n      \n      \n        {{ module.status.ph | number:'1.0-1' }}\n      \n    \n  \n\n\n    \n\n    \n                \n                    ./dashboard.component.scss\n                \n                @mixin graph-background {\n  @for $i from 1 through 15 {\n    &:nth-child(#{$i}) .sensor-container {\n      background-image: url(\"../../../../assets/images/alo.png\");\n      background-size: auto 100%;\n      background-position: #{($i * random(100)) % 100}% 0%;\n    }\n  }\n}\n\nmat-grid-list {\n  margin: 10px 10px 0px 10px;\n\n  mat-grid-tile {\n    width: 90%;\n    @include graph-background();\n\n    mat-card {\n      width: 100%;\n      height: 100%;\n\n      mat-card-header {\n        margin-top: 10px;\n      }\n    }\n\n    h1 {\n      span {\n        display: block;\n        font-size: 0.5em;\n      }\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    Growth Time                    {{module.GrowthTime()}}days                                For now...                              {{module.status.alert ? module.status.alert : \\'Everythig look fine.\\'}}                                Pump      Light                                    error          warning          check                          Air Temperature                ~{{ module.configs.air_temperature | number:\\'1.0-1\\' }}ºC                    {{ module.status.air_temperature | number:\\'1.0-1\\' }}ºC                                          error          warning          check                Water Temperature        ~{{ module.configs.water_temperature | number:\\'1.0-1\\' }}ºC                    {{ module.status.water_temperature | number:\\'1.0-1\\' }}ºC                                          error          warning          check                Humidity        ~{{ module.configs.humidity | number:\\'1.0-1\\' }}%                    {{ module.status.humidity | number:\\'1.0-1\\' }}%                                          error          warning          check                pH        ~{{ module.configs.ph | number:\\'1.0-1\\' }}                    {{ module.status.ph | number:\\'1.0-1\\' }}            '\n    var COMPONENTS = [{'name': 'AddTaskComponent', 'selector': 'app-add-task'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ConfigurationComponent', 'selector': 'app-configuration'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'HistoricalsComponent', 'selector': 'app-historicals'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'ModulesComponent', 'selector': 'app-modules'},{'name': 'SparklineComponent', 'selector': 'ngx-charts-sparkline'},{'name': 'TasksComponent', 'selector': 'app-tasks'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DashboardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Deserializable.html":{"url":"interfaces/Deserializable.html","title":"interface - Deserializable","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Deserializable\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/deserializable.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    deserialize\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deserialize\n                            \n                            \n                        \n                    \n                \n                \n                    \ndeserialize(input: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/models/deserializable.ts:2\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        input\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        export interface Deserializable {\n  deserialize(input: any): this;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HistoricalsComponent.html":{"url":"components/HistoricalsComponent.html","title":"component - HistoricalsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  HistoricalsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/components/historicals/historicals.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-historicals\n            \n\n            \n                styleUrls\n                ./historicals.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./historicals.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                air_temp_graph\n                            \n                            \n                                curve\n                            \n                            \n                                data\n                            \n                            \n                                ec_graph\n                            \n                            \n                                humidity_graph\n                            \n                            \n                                light_graph\n                            \n                            \n                                moduleName\n                            \n                            \n                                ph_graph\n                            \n                            \n                                    Private\n                                subscription\n                            \n                            \n                                water_temp_graph\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                downloadData\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                toGraph\n                            \n                            \n                                toGraphLight\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(moduleService: ModuleService, recordService: RecordService)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/components/historicals/historicals.component.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        moduleService\n                                                  \n                                                        \n                                                                    ModuleService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        recordService\n                                                  \n                                                        \n                                                                    RecordService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            downloadData\n                            \n                            \n                        \n                    \n                \n                \n                    \ndownloadData()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/modules/components/historicals/historicals.component.ts:102\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/modules/components/historicals/historicals.component.ts:96\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/modules/components/historicals/historicals.component.ts:94\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toGraph\n                            \n                            \n                        \n                    \n                \n                \n                    \ntoGraph(data: Record[], key: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/modules/components/historicals/historicals.component.ts:80\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                        \n                                                                    Record[]\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        key\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     {}\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toGraphLight\n                            \n                            \n                        \n                    \n                \n                \n                    \ntoGraphLight(data: Record[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/modules/components/historicals/historicals.component.ts:52\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                        \n                                                                    Record[]\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     {}\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            air_temp_graph\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        air_temp_graph:     any[]\n\n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/components/historicals/historicals.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            curve\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        curve:     \n\n                    \n                \n                    \n                        \n                            Default value : shape.curveBasis\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/components/historicals/historicals.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            data\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        data:     Record[]\n\n                    \n                \n                    \n                        \n                            Type :     Record[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/components/historicals/historicals.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ec_graph\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        ec_graph:     any[]\n\n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/components/historicals/historicals.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            humidity_graph\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        humidity_graph:     any[]\n\n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/components/historicals/historicals.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            light_graph\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        light_graph:     any[]\n\n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/components/historicals/historicals.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            moduleName\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        moduleName:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : \"\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/components/historicals/historicals.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ph_graph\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        ph_graph:     any[]\n\n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/components/historicals/historicals.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            subscription\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        subscription:     Subscription\n\n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/components/historicals/historicals.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            water_temp_graph\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        water_temp_graph:     any[]\n\n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/components/historicals/historicals.component.ts:22\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from \"@angular/core\";\nimport * as shape from \"d3-shape\";\nimport { Subscription } from \"rxjs\";\nimport { RecordService } from \"../../../core/services/record.service\";\nimport { ModuleService } from \"../../../core/services/module.service\";\nimport { Record } from \"../../../core/models/record\";\n\nimport { Angular5Csv } from \"angular5-csv/Angular5-csv\";\n\n@Component({\n  selector: \"app-historicals\",\n  templateUrl: \"./historicals.component.html\",\n  styleUrls: [\"./historicals.component.scss\"]\n})\nexport class HistoricalsComponent implements OnInit {\n  private subscription: Subscription = null;\n\n  moduleName = \"\";\n  data: Record[];\n  curve = shape.curveBasis;\n\n  water_temp_graph: any[];\n  air_temp_graph: any[];\n  humidity_graph: any[];\n  light_graph: any[];\n  ec_graph: any[];\n  ph_graph: any[];\n\n  constructor(moduleService: ModuleService, recordService: RecordService) {\n    this.water_temp_graph = [];\n    this.air_temp_graph = [];\n    this.humidity_graph = [];\n    this.light_graph = [];\n    this.ec_graph = [];\n    this.ph_graph = [];\n\n    this.subscription = moduleService.getCuerrent().subscribe(module => {\n      this.moduleName = module.name;\n      recordService.getByModule(module.id).subscribe((data: Record[]) => {\n        data = data.filter(record => record.date > module.start_at);\n        this.data = data;\n        this.water_temp_graph = this.toGraph(data, \"water_temperature\");\n        this.air_temp_graph = this.toGraph(data, \"air_temperature\");\n        this.humidity_graph = this.toGraph(data, \"humidity\");\n        this.ec_graph = this.toGraph(data, \"ec\");\n        this.ph_graph = this.toGraph(data, \"ph\");\n        this.light_graph = this.toGraphLight(data);\n      });\n    });\n  }\n\n  toGraphLight(data: Record[]) {\n    let _data = data\n      .slice(0)\n      .sort((a, b) => a.date.getTime() - b.date.getTime())\n      .reduce((obj, item) => {\n        if (!obj[item.getDateToGroup()]) {\n          obj[item.getDateToGroup()] = {\n            value: item.getValue(\"light\"),\n            name: item.getDateToGroup()\n          };\n        } else {\n          obj[item.getDateToGroup()].value += item.getValue(\"light\");\n        }\n        return obj;\n      }, []);\n    let __data = [];\n    Object.keys(_data).forEach(key => {\n      if (key != Object.keys(_data).shift() && key != Object.keys(_data).pop())\n        __data.push(_data[key]);\n    });\n    return [\n      {\n        name: \"light\",\n        series: __data\n      }\n    ];\n  }\n\n  toGraph(data: Record[], key: string) {\n    return [\n      {\n        name: key,\n        series: data.map(record => {\n          return {\n            value: record.getValue(key),\n            name: record.getPrintableDate()\n          };\n        })\n      }\n    ];\n  }\n\n  ngOnInit() {}\n\n  ngOnDestroy() {\n    if (this.subscription !== null) {\n      this.subscription.unsubscribe();\n    }\n  }\n\n  downloadData() {\n    new Angular5Csv(\n      this.data.map(record => {\n        const date =\n          record.date.getDate() +\n          \"-\" +\n          (record.date.getMonth() + 1) +\n          \"-\" +\n          record.date.getFullYear() +\n          \" \" +\n          (record.date.getHours() \n    \n\n    \n        \n  \n    Water temperature\n  \n  \n  \n  \n  \n\n  \n    Air temperature\n  \n  \n  \n  \n  \n\n  \n    Humidity\n  \n  \n  \n  \n  \n\n  \n    e.c.\n  \n  \n  \n  \n  \n\n  \n    pH\n  \n  \n  \n  \n  \n\n  \n    Light\n  \n  \n  \n  \n  \n\n  Download records\n\n\n    \n\n    \n                \n                    ./historicals.component.scss\n                \n                mat-card {\n    flex: 1;\n    background-color: transparent !important;\n}\n\nngx-charts-line-chart {\n    width: 100% !important;\n    height: auto !important;\n}\n\n.content {\n    width: 100%;\n    margin: auto;\n    display: grid;\n    \n    .header {\n        display: flex;\n        align-items: center;\n        justify-content: center;\n      }\n    .chart-container {\n        width: 95%;\n        height: 150px;\n        margin: auto;\n    }\n\n    .mat-stroked-button {\n        border-radius: 17px;\n        width: 60%;\n        margin: auto;\n      }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Water temperature                Air temperature                Humidity                e.c.                pH                Light            Download records'\n    var COMPONENTS = [{'name': 'AddTaskComponent', 'selector': 'app-add-task'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ConfigurationComponent', 'selector': 'app-configuration'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'HistoricalsComponent', 'selector': 'app-historicals'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'ModulesComponent', 'selector': 'app-modules'},{'name': 'SparklineComponent', 'selector': 'ngx-charts-sparkline'},{'name': 'TasksComponent', 'selector': 'app-tasks'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HistoricalsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HomeComponent.html":{"url":"components/HomeComponent.html","title":"component - HomeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  HomeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/home/home.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-home\n            \n\n            \n                styleUrls\n                ./home.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./home.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                modules\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                set\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(moduleService: ModuleService)\n                    \n                \n                        \n                            \n                                Defined in src/app/home/home.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        moduleService\n                                                  \n                                                        \n                                                                    ModuleService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/home/home.component.ts:19\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            set\n                            \n                            \n                        \n                    \n                \n                \n                    \nset(id: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/home/home.component.ts:24\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            modules\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        modules:     Module[]\n\n                    \n                \n                    \n                        \n                            Type :     Module[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home/home.component.ts:12\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\nimport { ModuleService } from '../core/services/module.service';\nimport { Module } from '../core/models/module';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit {\n  public modules: Module[];\n\n  constructor(\n    private moduleService: ModuleService,\n  ) {\n  }\n\n  ngOnInit() {\n    this.moduleService.getAll()\n      .subscribe(modules => this.modules = modules);\n  }\n\n  set(id:number){\n    this.moduleService.setCurrent(id);\n  }\n}\n\n    \n\n    \n        \n    \n  \n\n    Welcome to aHydro\n    \n        {{ module.name ? module.name : module.serial }}\n    \n\n    \n\n    \n                \n                    ./home.component.scss\n                \n                .container {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    position: absolute;\n    top: 0;\n    bottom: 0;\n    left: 0;\n    right: 0;\n}\n\n.container * {\n    color: white;\n}\n\nmat-card {\n    background: transparent;\n}\n\n#myVideo {\n    position: fixed;\n    right: 0;\n    bottom: 0;\n    min-width: 100%;\n    min-height: 100%;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          Welcome to aHydro            {{ module.name ? module.name : module.serial }}    '\n    var COMPONENTS = [{'name': 'AddTaskComponent', 'selector': 'app-add-task'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ConfigurationComponent', 'selector': 'app-configuration'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'HistoricalsComponent', 'selector': 'app-historicals'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'ModulesComponent', 'selector': 'app-modules'},{'name': 'SparklineComponent', 'selector': 'ngx-charts-sparkline'},{'name': 'TasksComponent', 'selector': 'app-tasks'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HomeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MaterialModule.html":{"url":"modules/MaterialModule.html","title":"module - MaterialModule","body":"\n                   \n\n\n\n\n  Modules\n  MaterialModule\n\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/core/material.module.ts\n        \n\n\n        \n\n        \n            \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\n\nimport {\n  MatAutocompleteModule,\n  MatButtonModule,\n  MatButtonToggleModule,\n  MatCardModule,\n  MatCheckboxModule,\n  MatChipsModule,\n  MatDatepickerModule,\n  MatDialogModule,\n  MatExpansionModule,\n  MatGridListModule,\n  MatIconModule,\n  MatInputModule,\n  MatListModule,\n  MatMenuModule,\n  MatNativeDateModule,\n  MatPaginatorModule,\n  MatProgressBarModule,\n  MatProgressSpinnerModule,\n  MatRadioModule,\n  MatRippleModule,\n  MatSelectModule,\n  MatSidenavModule,\n  MatSliderModule,\n  MatSlideToggleModule,\n  MatSnackBarModule,\n  MatSortModule,\n  MatTableModule,\n  MatTabsModule,\n  MatToolbarModule,\n  MatTooltipModule,\n  MatStepperModule,\n  MatFormFieldModule\n} from '@angular/material';\n\n@NgModule({\n  imports: [\n    MatAutocompleteModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatChipsModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatExpansionModule,\n    MatGridListModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatNativeDateModule,\n    MatPaginatorModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatRadioModule,\n    MatRippleModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatSnackBarModule,\n    MatSortModule,\n    MatTableModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatTooltipModule,\n    MatStepperModule,\n    MatFormFieldModule\n  ],\n  exports: [\n    MatAutocompleteModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatChipsModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatExpansionModule,\n    MatGridListModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatNativeDateModule,\n    MatPaginatorModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatRadioModule,\n    MatRippleModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatSnackBarModule,\n    MatSortModule,\n    MatTableModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatTooltipModule,\n    MatStepperModule,\n    MatFormFieldModule\n  ]\n})\nexport class MaterialModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Module.html":{"url":"classes/Module.html","title":"class - Module","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Module\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/module.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Deserializable\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                configs\n                            \n                            \n                                id\n                            \n                            \n                                name\n                            \n                            \n                                serial\n                            \n                            \n                                start_at\n                            \n                            \n                                status\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deserialize\n                            \n                            \n                                GrowthTime\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            configs\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        configs:     ConfigsSchema\n\n                    \n                \n                    \n                        \n                            Type :     ConfigsSchema\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/models/module.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        id:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/models/module.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        name:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/models/module.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            serial\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        serial:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/models/module.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            start_at\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        start_at:     Date\n\n                    \n                \n                    \n                        \n                            Type :     Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/models/module.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            status\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        status:     StatusSchema\n\n                    \n                \n                    \n                        \n                            Type :     StatusSchema\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/models/module.ts:29\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deserialize\n                            \n                            \n                        \n                    \n                \n                \n                    \ndeserialize(input: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/models/module.ts:32\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        input\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     this\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            GrowthTime\n                            \n                            \n                        \n                    \n                \n                \n                    \nGrowthTime()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/models/module.ts:38\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Deserializable } from \"./deserializable\";\n\nclass ConfigsSchema {\n  air_temperature: number;\n  water_temperature: number;\n  humidity: number;\n  light: number;\n  ph: number;\n  ec: number;\n}\n\nexport class StatusSchema {\n  alert?: string;\n  air_temperature: number;\n  water_temperature: number;\n  humidity: number;\n  light: number;\n  ph: number;\n  ec: number;\n  pump: boolean;\n  bulb: boolean;\n}\n\nexport class Module implements Deserializable {\n  id: number;\n  name: string;\n  serial: string;\n  start_at: Date;\n  status: StatusSchema;\n  configs: ConfigsSchema;\n\n  deserialize(input: any) {\n    Object.assign(this, input);\n    this.start_at = new Date(this.start_at);\n    return this;\n  }\n\n  GrowthTime() {\n    if (!this.start_at) return \"\";\n    let diff = Math.abs(new Date().getTime() - this.start_at.getTime());\n    return Math.ceil(diff / (1000 * 3600 * 24));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ModuleService.html":{"url":"injectables/ModuleService.html","title":"injectable - ModuleService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ModuleService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/module.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isCurrentLoad\n                            \n                            \n                                module$\n                            \n                            \n                                selectedId\n                            \n                            \n                                    Protected\n                                url\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAll\n                            \n                            \n                                getConfigurations\n                            \n                            \n                                getCuerrent\n                            \n                            \n                                setCuerrent\n                            \n                            \n                                setCurrent\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_http: HttpClient, taskService: TaskService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/module.service.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        taskService\n                                                  \n                                                        \n                                                                    TaskService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getAll\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetAll()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/services/module.service.ts:32\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     Observable\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getConfigurations\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetConfigurations()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/services/module.service.ts:48\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getCuerrent\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetCuerrent()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/services/module.service.ts:50\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     Observable\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setCuerrent\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetCuerrent(id: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/services/module.service.ts:44\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setCurrent\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetCurrent(id: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/services/module.service.ts:36\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            update\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdate(m: Module)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/services/module.service.ts:54\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        m\n                                                        \n                                                                    Module\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isCurrentLoad\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isCurrentLoad:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/services/module.service.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            module$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        module$:     \n\n                    \n                \n                    \n                        \n                            Default value : new BehaviorSubject(new Module())\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/services/module.service.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        selectedId:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/services/module.service.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            url\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        url:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : \"api/modules\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/services/module.service.ts:20\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport {\n  HttpClient,\n  HttpHeaders,\n  HttpErrorResponse\n} from \"@angular/common/http\";\nimport { Observable, BehaviorSubject } from \"rxjs\";\n\nimport { Module } from \"../models/module\";\nimport { Task } from \"../models/task\";\n\nconst httpOptions = {\n  headers: new HttpHeaders({ \"Content-Type\": \"application/json\" })\n};\nimport { Subject } from \"rxjs\";\nimport { TaskService } from \"./task.service\";\n\n@Injectable()\nexport class ModuleService {\n  protected url = \"api/modules\";\n  isCurrentLoad: boolean = false;\n\n  //protected currentModule: Module;\n\n  module$ = new BehaviorSubject(new Module());\n  selectedId: number = 0;\n\n  constructor(protected _http: HttpClient, private taskService: TaskService) {\n    this.selectedId = 0;\n  }\n\n  getAll(): Observable {\n    return this._http.get(this.url);\n  }\n\n  setCurrent(id: number) {\n    this._http.get(`${this.url}/${id}`).subscribe(_moduleData => {\n      const _module = new Module().deserialize(_moduleData);\n      this.module$.next(_module);\n      this.taskService.loadForModule(_module);\n    });\n  }\n\n  setCuerrent(id: number): Observable {\n    return this.module$.asObservable();\n  }\n\n  getConfigurations() {}\n\n  getCuerrent(): Observable {\n    return this.module$.asObservable();\n  }\n\n  update(m: Module): Observable {\n    return this._http.put(this.url, m, httpOptions);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ModulesComponent.html":{"url":"components/ModulesComponent.html","title":"component - ModulesComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ModulesComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/modules.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-modules\n            \n\n            \n                styleUrls\n                ./modules.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./modules.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                module\n                            \n                            \n                                    Private\n                                subscription\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(moduleService: ModuleService, route: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/modules.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        moduleService\n                                                  \n                                                        \n                                                                    ModuleService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/modules/modules.component.ts:32\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/modules/modules.component.ts:26\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            module\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        module:     Module\n\n                    \n                \n                    \n                        \n                            Type :     Module\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/modules.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            subscription\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        subscription:     Subscription\n\n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/modules.component.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, OnDestroy } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { Subscription } from \"rxjs\";\n\nimport { ModuleService } from \"../core/services/module.service\";\nimport { Module } from \"../core/models/module\";\n\n@Component({\n  selector: \"app-modules\",\n  templateUrl: \"./modules.component.html\",\n  styleUrls: [\"./modules.component.scss\"]\n})\nexport class ModulesComponent implements OnInit, OnDestroy {\n  module: Module = null;\n  private subscription: Subscription = null;\n\n  constructor(\n    private moduleService: ModuleService,\n    private route: ActivatedRoute\n  ) {\n    this.route.params.subscribe(params =>\n      this.moduleService.setCurrent(params.id)\n    );\n  }\n\n  ngOnInit() {\n    this.subscription = this.moduleService\n      .getCuerrent()\n      .subscribe(_module => (this.module = _module));\n  }\n\n  ngOnDestroy() {\n    if (this.subscription !== null) {\n      this.subscription.unsubscribe();\n    }\n  }\n}\n\n    \n\n    \n        \n\n  \n    \n      Home\n      \n      Dashboard\n      Configurations\n      Tasks\n      Historicals\n    \n  \n\n  \n    \n      \n        menu\n      \n      aHydro\n      \n      {{module !== null ? module.name : ''}}\n    \n\n    \n\n  \n\n\n    \n\n    \n                \n                    ./modules.component.scss\n                \n                mat-sidenav-container {\n  /*\n  background: radial-gradient(1.5em 6.28571em at 1.95em, rgba(255, 255, 255, 0) 50%, rgba(255, 255, 255, 0.25) 50%, rgba(255, 255, 255, 0.25) 55%, rgba(255, 255, 255, 0) 55%) 0 0, radial-gradient(1.5em 6.28571em at -0.45em, rgba(255, 255, 255, 0) 50%, rgba(255, 255, 255, 0.25) 50%, rgba(255, 255, 255, 0.25) 55%, rgba(255, 255, 255, 0) 55%) 1.5em 5.5em, radial-gradient(2.3em 4.57143em at 2.99em, rgba(255, 255, 255, 0) 50%, rgba(255, 255, 255, 0.3) 50%, rgba(255, 255, 255, 0.3) 55%, rgba(255, 255, 255, 0) 55%) 0 0, radial-gradient(2.3em 4.57143em at -0.69em, rgba(255, 255, 255, 0) 50%, rgba(255, 255, 255, 0.3) 50%, rgba(255, 255, 255, 0.3) 55%, rgba(255, 255, 255, 0) 55%) 2.3em 4em, radial-gradient(3.5em 6.28571em at 4.55em, rgba(255, 255, 255, 0) 50%, rgba(255, 255, 255, 0.25) 50%, rgba(255, 255, 255, 0.25) 55%, rgba(255, 255, 255, 0) 55%) 0 0, radial-gradient(3.5em 6.28571em at -1.05em, rgba(255, 255, 255, 0) 50%, rgba(255, 255, 255, 0.25) 50%, rgba(255, 255, 255, 0.25) 55%, rgba(255, 255, 255, 0) 55%) 3.5em 5.5em, radial-gradient(#15ffa5, #00ced1);\n  background-color: mediumspringgreen;\n  background-size: 1.5em 11em, 1.5em 11em, 2.3em 8em, 2.3em 8em, 3.5em 11em, 3.5em 11em, 100% 100%;\n  background-repeat: repeat;\n  */\n\n\n  mat-sidenav {\n    width: 60%;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Home            Dashboard      Configurations      Tasks      Historicals                          menu            aHydro            {{module !== null ? module.name : \\'\\'}}          '\n    var COMPONENTS = [{'name': 'AddTaskComponent', 'selector': 'app-add-task'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ConfigurationComponent', 'selector': 'app-configuration'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'HistoricalsComponent', 'selector': 'app-historicals'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'ModulesComponent', 'selector': 'app-modules'},{'name': 'SparklineComponent', 'selector': 'ngx-charts-sparkline'},{'name': 'TasksComponent', 'selector': 'app-tasks'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ModulesComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ModulesModule.html":{"url":"modules/ModulesModule.html","title":"module - ModulesModule","body":"\n                   \n\n\n\n\n  Modules\n  ModulesModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ModulesModule\n\n\n\ncluster_ModulesModule_declarations\n\n\n\ncluster_ModulesModule_imports\n\n\n\n\nAddTaskComponent\n\nAddTaskComponent\n\n\n\nModulesModule\n\nModulesModule\n\nModulesModule -->\n\nAddTaskComponent->ModulesModule\n\n\n\n\n\nConfigurationComponent\n\nConfigurationComponent\n\nModulesModule -->\n\nConfigurationComponent->ModulesModule\n\n\n\n\n\nDashboardComponent\n\nDashboardComponent\n\nModulesModule -->\n\nDashboardComponent->ModulesModule\n\n\n\n\n\nHistoricalsComponent\n\nHistoricalsComponent\n\nModulesModule -->\n\nHistoricalsComponent->ModulesModule\n\n\n\n\n\nModulesComponent\n\nModulesComponent\n\nModulesModule -->\n\nModulesComponent->ModulesModule\n\n\n\n\n\nSparklineComponent\n\nSparklineComponent\n\nModulesModule -->\n\nSparklineComponent->ModulesModule\n\n\n\n\n\nTasksComponent\n\nTasksComponent\n\nModulesModule -->\n\nTasksComponent->ModulesModule\n\n\n\n\n\nMaterialModule\n\nMaterialModule\n\nModulesModule -->\n\nMaterialModule->ModulesModule\n\n\n\n\n\nModulesRoutingModule\n\nModulesRoutingModule\n\nModulesModule -->\n\nModulesRoutingModule->ModulesModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/modules.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                AddTaskComponent\n                            \n                            \n                                ConfigurationComponent\n                            \n                            \n                                DashboardComponent\n                            \n                            \n                                HistoricalsComponent\n                            \n                            \n                                ModulesComponent\n                            \n                            \n                                SparklineComponent\n                            \n                            \n                                TasksComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    MaterialModule\n                            \n                            \n                                    ModulesRoutingModule\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ModulesComponent } from './modules.component';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport { MaterialModule } from '../core/material.module'\nimport { ModulesRoutingModule } from './modules-routing.module';\nimport { DashboardComponent } from './components/dashboard/dashboard.component';\nimport { ConfigurationComponent } from './components/configuration/configuration.component';\nimport { TasksComponent } from './components/tasks/tasks.component';\nimport { AddTaskComponent } from './components/add-task/add-task.component';\nimport { HistoricalsComponent } from './components/historicals/historicals.component';\nimport {NgxChartsModule} from '@swimlane/ngx-charts';\nimport {SparklineComponent} from './components/historicals/sparkline.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ModulesRoutingModule,\n    MaterialModule,\n    FormsModule,\n    ReactiveFormsModule,\n    NgxChartsModule\n  ],\n  declarations: [\n    ConfigurationComponent,\n    DashboardComponent,\n    ModulesComponent,\n    TasksComponent,\n    AddTaskComponent,\n    HistoricalsComponent,\n    SparklineComponent\n  ]\n})\nexport class ModulesModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ModulesRoutingModule.html":{"url":"modules/ModulesRoutingModule.html","title":"module - ModulesRoutingModule","body":"\n                   \n\n\n\n\n  Modules\n  ModulesRoutingModule\n\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/modules-routing.module.ts\n        \n\n\n        \n\n        \n            \n            \n        \n    \n\n\n    \n        import {\n  NgModule\n} from '@angular/core';\nimport {\n  Routes,\n  RouterModule\n} from '@angular/router';\n\nimport {\n  ModulesComponent\n} from './modules.component';\nimport {\n  DashboardComponent\n} from './components/dashboard/dashboard.component';\nimport {\n  ConfigurationComponent\n} from './components/configuration/configuration.component';\nimport {\n  TasksComponent\n} from './components/tasks/tasks.component';\nimport {\n  AddTaskComponent\n} from './components/add-task/add-task.component';\nimport {\n  HistoricalsComponent\n} from './components/historicals/historicals.component';\n\n\n\nconst routes: Routes = [{\n    path: '',\n    component: ModulesComponent,\n    children: [{\n        path: '',\n        component: DashboardComponent,\n        data: {\n          title: 'Dashboard'\n        }\n      },\n      {\n        path: 'configuration',\n        component: ConfigurationComponent,\n        data: {\n          title: 'configuration'\n        }\n      },\n      {\n        path: 'tasks',\n        component: TasksComponent,\n        data: {\n          title: 'Tasks'\n        }\n      },\n      {\n        path: 'tasks/new',\n        component: AddTaskComponent,\n        data: {\n          title: 'New Task'\n        }\n      },\n      {\n        path: 'historicals',\n        component: HistoricalsComponent,\n        data: {\n          title: 'Historicals'\n        }\n      },\n    ]\n  },\n  /*\n  {\n      path: '**',\n      component: ErrorComponent\n  }\n  */\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ModulesRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Record.html":{"url":"classes/Record.html","title":"class - Record","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Record\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/record.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Deserializable\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                date\n                            \n                            \n                                id\n                            \n                            \n                                module_id\n                            \n                            \n                                status\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deserialize\n                            \n                            \n                                getDateToGroup\n                            \n                            \n                                getPrintableDate\n                            \n                            \n                                getValue\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            date\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        date:     Date\n\n                    \n                \n                    \n                        \n                            Type :     Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/models/record.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        id:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/models/record.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            module_id\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        module_id:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/models/record.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            status\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        status:     StatusSchema\n\n                    \n                \n                    \n                        \n                            Type :     StatusSchema\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/models/record.ts:8\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deserialize\n                            \n                            \n                        \n                    \n                \n                \n                    \ndeserialize(input: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/models/record.ts:10\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        input\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     this\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getDateToGroup\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetDateToGroup()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/models/record.ts:24\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getPrintableDate\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetPrintableDate()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/models/record.ts:20\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getValue\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetValue(key: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/models/record.ts:16\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        key\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Deserializable } from \"./deserializable\";\nimport { StatusSchema } from \"./module\";\n\nexport class Record implements Deserializable {\n  id: number;\n  module_id: number;\n  date: Date;\n  status: StatusSchema;\n\n  deserialize(input: any) {\n    Object.assign(this, input);\n    this.date = new Date(this.date);\n    return this;\n  }\n\n  getValue(key: string){\n    return this.status[key];\n  }\n  \n  getPrintableDate(){\n    return this.date.toISOString();\n  }\n  \n  getDateToGroup(){\n    return this.date.toISOString().substring(0, 10);\n  }\n\n}\n\n\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RecordService.html":{"url":"injectables/RecordService.html","title":"injectable - RecordService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  RecordService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/record.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                url\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getByModule\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/record.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getByModule\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetByModule(id: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/services/record.service.ts:13\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            url\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        url:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : \"api/records\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/services/record.service.ts:9\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\nimport { Observable } from \"rxjs\";\nimport { map } from \"rxjs/operators\";\nimport { Record } from \"../models/record\";\n\n@Injectable()\nexport class RecordService {\n  private url = \"api/records\";\n\n  constructor(private _http: HttpClient) {}\n\n  getByModule(id: number): Observable {\n    return this._http\n      .get(`${this.url}?module_id=${id}`)\n      .pipe(map(res => res.map(item => new Record().deserialize(item))));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SparklineComponent.html":{"url":"components/SparklineComponent.html","title":"component - SparklineComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SparklineComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/components/historicals/sparkline.component.ts\n\n\n\n    \n        Extends\n    \n    \n            BaseChartComponent\n    \n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n\n\n\n\n\n\n\n            \n                selector\n                ngx-charts-sparkline\n            \n\n            \n                styleUrls\n                ./sparkline.scss\n            \n\n\n            \n                template\n                \n  \n    \n      \n        \n      \n    \n  \n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                colors\n                            \n                            \n                                dims\n                            \n                            \n                                margin\n                            \n                            \n                                scaleType\n                            \n                            \n                                seriesDomain\n                            \n                            \n                                transform\n                            \n                            \n                                xDomain\n                            \n                            \n                                xScale\n                            \n                            \n                                xSet\n                            \n                            \n                                yDomain\n                            \n                            \n                                yScale\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getScaleType\n                            \n                            \n                                getSeriesDomain\n                            \n                            \n                                getXDomain\n                            \n                            \n                                getXScale\n                            \n                            \n                                getYDomain\n                            \n                            \n                                getYScale\n                            \n                            \n                                isDate\n                            \n                            \n                                setColors\n                            \n                            \n                                trackBy\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                animations\n                            \n                            \n                                autoScale\n                            \n                            \n                                curve\n                            \n                            \n                                schemeType\n                            \n                            \n                                valueDomain\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        animations\n                    \n                    \n                            \n                            Type :    boolean\n\n                            \n                        \n                            Default value : true\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/components/historicals/sparkline.component.ts:55\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        autoScale\n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/components/historicals/sparkline.component.ts:51\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        curve\n                    \n                    \n                            \n                            Type :    any\n\n                            \n                        \n                            Default value : curveLinear\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/components/historicals/sparkline.component.ts:52\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        schemeType\n                    \n                    \n                            \n                            Type :    string\n\n                            \n                        \n                            Default value : \"linear\"\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/components/historicals/sparkline.component.ts:53\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        valueDomain\n                    \n                    \n                            \n                            Type :    number[]\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/components/historicals/sparkline.component.ts:54\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getScaleType\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetScaleType(values)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/modules/components/historicals/sparkline.component.ts:188\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        values\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getSeriesDomain\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetSeriesDomain()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/modules/components/historicals/sparkline.component.ts:155\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any[]\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getXDomain\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetXDomain()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/modules/components/historicals/sparkline.component.ts:98\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any[]\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getXScale\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetXScale(domain, width)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/modules/components/historicals/sparkline.component.ts:159\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        domain\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        width\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getYDomain\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetYDomain()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/modules/components/historicals/sparkline.component.ts:121\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any[]\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getYScale\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetYScale(domain, height)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/modules/components/historicals/sparkline.component.ts:180\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        domain\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        height\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isDate\n                            \n                            \n                        \n                    \n                \n                \n                    \nisDate(value)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/modules/components/historicals/sparkline.component.ts:207\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setColors\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetColors()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/modules/components/historicals/sparkline.component.ts:219\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            trackBy\n                            \n                            \n                        \n                    \n                \n                \n                    \ntrackBy(index, item)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/modules/components/historicals/sparkline.component.ts:215\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        index\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        item\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            update\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdate()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/modules/components/historicals/sparkline.component.ts:69\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            colors\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        colors:     ColorHelper\n\n                    \n                \n                    \n                        \n                            Type :     ColorHelper\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/components/historicals/sparkline.component.ts:64\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dims\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        dims:     ViewDimensions\n\n                    \n                \n                    \n                        \n                            Type :     ViewDimensions\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/components/historicals/sparkline.component.ts:57\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            margin\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        margin:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [0, 0, 0, 0]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/components/historicals/sparkline.component.ts:67\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            scaleType\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        scaleType:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/components/historicals/sparkline.component.ts:65\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            seriesDomain\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        seriesDomain:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/components/historicals/sparkline.component.ts:61\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            transform\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        transform:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/components/historicals/sparkline.component.ts:66\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            xDomain\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        xDomain:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/components/historicals/sparkline.component.ts:59\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            xScale\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        xScale:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/components/historicals/sparkline.component.ts:63\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            xSet\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        xSet:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/components/historicals/sparkline.component.ts:58\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            yDomain\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        yDomain:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/components/historicals/sparkline.component.ts:60\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            yScale\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        yScale:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/components/historicals/sparkline.component.ts:62\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {\n  Component,\n  Input,\n  ViewEncapsulation,\n  ChangeDetectionStrategy\n} from \"@angular/core\";\nimport { scaleLinear, scaleTime, scalePoint } from \"d3-scale\";\nimport { curveLinear } from \"d3-shape\";\n\nimport {\n  calculateViewDimensions,\n  ViewDimensions,\n  BaseChartComponent,\n  ColorHelper\n} from \"@swimlane/ngx-charts\";\nimport { getUniqueXDomainValues } from \"@swimlane/ngx-charts\";\n\n@Component({\n  selector: \"ngx-charts-sparkline\",\n  template: `\n    \n      \n        \n          \n            \n          \n        \n      \n    \n  `,\n  styleUrls: [\"./sparkline.scss\"],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class SparklineComponent extends BaseChartComponent {\n  @Input() autoScale = false;\n  @Input() curve: any = curveLinear;\n  @Input() schemeType: string = \"linear\";\n  @Input() valueDomain: number[];\n  @Input() animations: boolean = true;\n\n  dims: ViewDimensions;\n  xSet: any;\n  xDomain: any;\n  yDomain: any;\n  seriesDomain: any;\n  yScale: any;\n  xScale: any;\n  colors: ColorHelper;\n  scaleType: string;\n  transform: string;\n  margin = [0, 0, 0, 0];\n\n  update(): void {\n    super.update();\n\n    this.dims = calculateViewDimensions({\n      width: this.width,\n      height: this.height,\n      margins: this.margin,\n      showXAxis: false,\n      showYAxis: false,\n      xAxisHeight: 0,\n      yAxisWidth: 0,\n      showXLabel: false,\n      showYLabel: false,\n      showLegend: false,\n      legendType: this.schemeType\n    });\n\n    this.xDomain = this.getXDomain();\n\n    this.yDomain = this.getYDomain();\n    this.seriesDomain = this.getSeriesDomain();\n\n    this.xScale = this.getXScale(this.xDomain, this.dims.width);\n    this.yScale = this.getYScale(this.yDomain, this.dims.height);\n\n    this.setColors();\n    this.transform = `translate(${this.dims.xOffset} , ${this.margin[0]})`;\n  }\n\n  getXDomain(): any[] {\n    let values = getUniqueXDomainValues(this.results);\n\n    this.scaleType = this.getScaleType(values);\n    let domain = [];\n\n    if (this.scaleType === \"time\") {\n      const min = Math.min(...values);\n      const max = Math.max(...values);\n      domain = [min, max];\n    } else if (this.scaleType === \"linear\") {\n      values = values.map(v => Number(v));\n      const min = Math.min(...values);\n      const max = Math.max(...values);\n      domain = [min, max];\n    } else {\n      domain = values;\n    }\n\n    this.xSet = values;\n    return domain;\n  }\n\n  getYDomain(): any[] {\n    if (this.valueDomain) {\n      return this.valueDomain;\n    }\n\n    const domain = [];\n\n    for (const results of this.results) {\n      for (const d of results.series) {\n        if (domain.indexOf(d.value)  d.name);\n  }\n\n  getXScale(domain, width): any {\n    let scale;\n\n    if (this.scaleType === \"time\") {\n      scale = scaleTime()\n        .range([0, width])\n        .domain(domain);\n    } else if (this.scaleType === \"linear\") {\n      scale = scaleLinear()\n        .range([0, width])\n        .domain(domain);\n    } else if (this.scaleType === \"ordinal\") {\n      scale = scalePoint()\n        .range([0, width])\n        .padding(0.1)\n        .domain(domain);\n    }\n\n    return scale;\n  }\n\n  getYScale(domain, height): any {\n    const scale = scaleLinear()\n      .range([height, 0])\n      .domain(domain);\n\n    return scale;\n  }\n\n  getScaleType(values): string {\n    let date = true;\n    let num = true;\n\n    for (const value of values) {\n      if (!this.isDate(value)) {\n        date = false;\n      }\n\n      if (typeof value !== \"number\") {\n        num = false;\n      }\n    }\n\n    if (date) return \"time\";\n    if (num) return \"linear\";\n    return \"ordinal\";\n  }\n\n  isDate(value): boolean {\n    if (value instanceof Date) {\n      return true;\n    }\n\n    return false;\n  }\n\n  trackBy(index, item): string {\n    return item.name;\n  }\n\n  setColors(): void {\n    let domain;\n    if (this.schemeType === \"ordinal\") {\n      domain = this.seriesDomain;\n    } else {\n      domain = this.yDomain;\n    }\n\n    this.colors = new ColorHelper(\n      this.scheme,\n      this.schemeType,\n      domain,\n      this.customColors\n    );\n  }\n}\n\n    \n\n\n    \n                \n                    ./sparkline.scss\n                \n                \n.ngx-charts {\n  float: left;\n  overflow: visible;\n\n  .circle,\n  .bar,\n  .arc {\n    cursor: pointer;\n  }\n\n  .bar,\n  .cell,\n  .arc,\n  .card {\n    &.active,\n    &:hover {\n      opacity: 0.8;\n      transition: opacity 100ms ease-in-out;\n    }\n\n    &:focus {\n      outline: none;\n    }\n  }\n\n  g {\n    &:focus {\n      outline: none;\n    }\n  }\n\n  .line-series,\n  .line-series-range,\n  .polar-series-path,\n  .polar-series-area,\n  .area-series {\n    &.inactive {\n      transition: opacity 100ms ease-in-out;\n      opacity: .2\n    }\n  }\n\n  .line-highlight {\n    display: none;\n\n    &.active {\n      display: block;\n    }\n  }\n\n  .area {\n    opacity: 0.6;\n  }\n\n  .circle {\n    &:hover {\n      cursor: pointer;\n    }\n  }\n\n  .label {\n    font-size: 12px;\n    font-weight: normal;\n  }\n\n  .tooltip-anchor {\n    fill: rgb(0,0,0);\n  }\n\n  .gridline-path {\n    stroke: #ddd;\n    stroke-width: 1;\n    fill: none;\n  }\n\n  .refline-path {\n    stroke: #a8b2c7;\n    stroke-width: 1;\n    stroke-dasharray: 5;\n    stroke-dashoffset: 5;\n  }\n\n  .refline-label {\n    font-size: 9px;\n  }\n\n  .reference-area {\n    fill-opacity: 0.05;\n    fill: #000;\n  }\n\n  .gridline-path-dotted {\n    stroke: #ddd;\n    stroke-width: 1;\n    fill: none;\n    stroke-dasharray: 1, 20;\n    stroke-dashoffset: 3;\n  }\n\n  .grid-panel {\n    rect {\n      fill: none;\n    }\n\n    &.odd {\n      rect {\n        fill: rgba(0,0,0,0.05);\n      }\n    }\n  }\n\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                '\n    var COMPONENTS = [{'name': 'AddTaskComponent', 'selector': 'app-add-task'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ConfigurationComponent', 'selector': 'app-configuration'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'HistoricalsComponent', 'selector': 'app-historicals'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'ModulesComponent', 'selector': 'app-modules'},{'name': 'SparklineComponent', 'selector': 'ngx-charts-sparkline'},{'name': 'TasksComponent', 'selector': 'app-tasks'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SparklineComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/StatusSchema.html":{"url":"classes/StatusSchema.html","title":"class - StatusSchema","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  StatusSchema\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/module.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                air_temperature\n                            \n                            \n                                    Optional\n                                alert\n                            \n                            \n                                bulb\n                            \n                            \n                                ec\n                            \n                            \n                                humidity\n                            \n                            \n                                light\n                            \n                            \n                                ph\n                            \n                            \n                                pump\n                            \n                            \n                                water_temperature\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            air_temperature\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        air_temperature:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/models/module.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            alert\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        alert:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/models/module.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            bulb\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        bulb:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/models/module.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ec\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        ec:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/models/module.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            humidity\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        humidity:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/models/module.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            light\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        light:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/models/module.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ph\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        ph:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/models/module.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            pump\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        pump:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/models/module.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            water_temperature\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        water_temperature:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/models/module.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Deserializable } from \"./deserializable\";\n\nclass ConfigsSchema {\n  air_temperature: number;\n  water_temperature: number;\n  humidity: number;\n  light: number;\n  ph: number;\n  ec: number;\n}\n\nexport class StatusSchema {\n  alert?: string;\n  air_temperature: number;\n  water_temperature: number;\n  humidity: number;\n  light: number;\n  ph: number;\n  ec: number;\n  pump: boolean;\n  bulb: boolean;\n}\n\nexport class Module implements Deserializable {\n  id: number;\n  name: string;\n  serial: string;\n  start_at: Date;\n  status: StatusSchema;\n  configs: ConfigsSchema;\n\n  deserialize(input: any) {\n    Object.assign(this, input);\n    this.start_at = new Date(this.start_at);\n    return this;\n  }\n\n  GrowthTime() {\n    if (!this.start_at) return \"\";\n    let diff = Math.abs(new Date().getTime() - this.start_at.getTime());\n    return Math.ceil(diff / (1000 * 3600 * 24));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Task.html":{"url":"classes/Task.html","title":"class - Task","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Task\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/task.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Deserializable\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                date\n                            \n                            \n                                description\n                            \n                            \n                                id\n                            \n                            \n                                isOutdated\n                            \n                            \n                                module\n                            \n                            \n                                module_id\n                            \n                            \n                                status\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deserialize\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(module: Module, description: string, date: Date)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/models/task.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        module\n                                                  \n                                                        \n                                                                    Module\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        description\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        date\n                                                  \n                                                        \n                                                                    Date\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            date\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        date:     Date\n\n                    \n                \n                    \n                        \n                            Type :     Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/models/task.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            description\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        description:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/models/task.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        id:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/models/task.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isOutdated\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isOutdated:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/models/task.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            module\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        module:     Module\n\n                    \n                \n                    \n                        \n                            Type :     Module\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/models/task.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            module_id\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        module_id:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/models/task.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            status\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        status:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/models/task.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/models/task.ts:11\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deserialize\n                            \n                            \n                        \n                    \n                \n                \n                    \ndeserialize(input: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/models/task.ts:30\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        input\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     this\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Module } from \"./module\";\n\nimport { Deserializable } from \"./deserializable\";\n\nexport class Task implements Deserializable {\n  id: number;\n  module_id: number;\n  description: string;\n  date: Date;\n  status: string;\n  type: string;\n  isOutdated: boolean;\n  module: Module;\n\n  constructor(\n    module: Module = null,\n    description: string = null,\n    date: Date = null\n  ) {\n    if (module !== null && description !== null && date !== null) {\n      this.module = module;\n      this.module_id = module.id;\n      this.description = description;\n      this.date = date;\n    }\n    this.status = \"P\";\n    this.type = \"H\";\n  }\n\n  deserialize(input: any) {\n    Object.assign(this, input);\n    this.date = new Date(this.date);\n    let diff = Math.floor(\n      (this.date.getTime() - new Date().getTime()) / (1000 * 60 * 60 * 24)\n    );\n    this.isOutdated = diff \n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TaskService.html":{"url":"injectables/TaskService.html","title":"injectable - TaskService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TaskService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/task.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                tasks$\n                            \n                            \n                                toLoad\n                            \n                            \n                                    Private\n                                url\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                get\n                            \n                            \n                                getAll\n                            \n                            \n                                loadForModule\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/task.service.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            create\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreate(data: Task)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/services/task.service.ts:72\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                        \n                                                                    Task\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            get\n                            \n                            \n                        \n                    \n                \n                \n                    \nget(id: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/services/task.service.ts:64\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getAll\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetAll()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/services/task.service.ts:58\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     Observable\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadForModule\n                            \n                            \n                        \n                    \n                \n                \n                    \nloadForModule(_module: Module)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/services/task.service.ts:30\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _module\n                                                        \n                                                                    Module\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            update\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdate(data: Task)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/services/task.service.ts:68\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                        \n                                                                    Task\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tasks$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        tasks$:     BehaviorSubject\n\n                    \n                \n                    \n                        \n                            Type :     BehaviorSubject\n\n                        \n                    \n                    \n                        \n                            Default value : new BehaviorSubject([])\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/services/task.service.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toLoad\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        toLoad:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/services/task.service.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            url\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        url:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : \"api/tasks\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/services/task.service.ts:22\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\n\nimport {\n  HttpClient,\n  HttpHeaders,\n  HttpErrorResponse\n} from \"@angular/common/http\";\n\nimport { Observable, BehaviorSubject } from \"rxjs\";\n\nimport { Task } from \"../models/task\";\nimport { Module } from \"../models/module\";\nimport { map } from \"rxjs/operators\";\nconst httpOptions = {\n  headers: new HttpHeaders({\n    \"Content-Type\": \"application/json\"\n  })\n};\n\n@Injectable()\nexport class TaskService {\n  private url = \"api/tasks\";\n\n  toLoad: number = null;\n\n  tasks$: BehaviorSubject = new BehaviorSubject([]);\n\n  constructor(private _http: HttpClient) {}\n\n  loadForModule(_module: Module) {\n    this._http\n      .get(`${this.url}?module_id=${_module.id}`)\n      .pipe(\n        map(res =>\n          res\n            .map(item => new Task().deserialize(item))\n            .filter(task => task.date >= _module.start_at)\n            .sort(function(a, b) {\n              return b.date.getTime() - a.date.getTime();\n            })\n        )\n      )\n      .subscribe(res => this.tasks$.next(res));\n    /*\n    this.todoBackendService.getAllTodos()\n        .subscribe(\n            res => {\n                let todos = (res.json()).map((todo: any) =>\n                    new Todo({id:todo.id, description:todo.description,completed: todo.completed}));\n\n                this._todos.next(List(todos));\n            },\n            err => console.log(\"Error retrieving Todos\")\n        );\n        */\n  }\n\n  getAll(): Observable {\n    return this._http\n      .get(this.url)\n      .pipe(map(res => res.map(item => new Task().deserialize(item))));\n  }\n\n  get(id: number): Observable {\n    return this._http.get(`${this.url}/${id}`);\n  }\n\n  update(data: Task): any {\n    return this._http.put(this.url, data, httpOptions).subscribe();\n  }\n\n  create(data: Task): any {\n    return this._http.post(this.url, data, httpOptions).subscribe(() => {\n      this.loadForModule(data.module);\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TasksComponent.html":{"url":"components/TasksComponent.html","title":"component - TasksComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TasksComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/components/tasks/tasks.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-tasks\n            \n\n            \n                styleUrls\n                ./tasks.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./tasks.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                dateControl\n                            \n                            \n                                descriptionControl\n                            \n                            \n                                tasks$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                finishTask\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(taskService: TaskService)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/components/tasks/tasks.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        taskService\n                                                  \n                                                        \n                                                                    TaskService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            finishTask\n                            \n                            \n                        \n                    \n                \n                \n                    \nfinishTask(task: Task)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/modules/components/tasks/tasks.component.ts:30\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        task\n                                                        \n                                                                    Task\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/modules/components/tasks/tasks.component.ts:19\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dateControl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        dateControl:     FormControl\n\n                    \n                \n                    \n                        \n                            Type :     FormControl\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/components/tasks/tasks.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            descriptionControl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        descriptionControl:     FormControl\n\n                    \n                \n                    \n                        \n                            Type :     FormControl\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/components/tasks/tasks.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tasks$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        tasks$:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/components/tasks/tasks.component.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from \"@angular/core\";\nimport { FormControl, Validators } from \"@angular/forms\";\nimport { TaskService } from \"../../../core/services/task.service\";\nimport { Task } from \"../../../core/models/task\";\nimport { Observable } from \"rxjs\";\n\n@Component({\n  selector: \"app-tasks\",\n  templateUrl: \"./tasks.component.html\",\n  styleUrls: [\"./tasks.component.scss\"]\n})\nexport class TasksComponent implements OnInit {\n  tasks$: Observable;\n  descriptionControl: FormControl;\n  dateControl: FormControl;\n\n  constructor(private taskService: TaskService) {}\n\n  ngOnInit() {\n    this.tasks$ = this.taskService.tasks$;\n\n    this.descriptionControl = new FormControl(\"\", [\n      Validators.required,\n      Validators.minLength(3),\n      Validators.maxLength(15)\n    ]);\n    this.dateControl = new FormControl(\"\", [Validators.required]);\n  }\n\n  finishTask(task: Task) {\n    task.status = \"F\";\n    this.taskService.update(task);//.subscribe();\n  }\n}\n\n    \n\n    \n        \n  Tasks\n  \n  \n    add\n  \n\n\n\n  \n    {{task.description}}\n    {{task.date | date}}\n    \n      check\n    \n  \n\n\n    \n\n    \n                \n                    ./tasks.component.scss\n                \n                mat-toolbar {\n  background: transparent !important;\n}\n\nmat-list {\n  width: 80%;\n  margin: auto;\n}\n\nmat-list-item {\n  margin-top: 5px;\n  border-left: 2px solid gray;\n  background-color: rgba(0, 0, 0, 0.07);\n}\n\n.header-button {\n  height: 40px;\n  width: 40px;\n  border-radius: 50%;\n  flex-shrink: 0;\n}\n\n.transparent {\n  opacity: 0.5;\n}\n\n.incomplete {\n  border-left: 2px solid red;\n}\n\n.complete {\n  border-left: 2px solid green;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Tasks        add        {{task.description}}    {{task.date | date}}          check      '\n    var COMPONENTS = [{'name': 'AddTaskComponent', 'selector': 'app-add-task'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ConfigurationComponent', 'selector': 'app-configuration'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'HistoricalsComponent', 'selector': 'app-historicals'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'ModulesComponent', 'selector': 'app-modules'},{'name': 'SparklineComponent', 'selector': 'ngx-charts-sparkline'},{'name': 'TasksComponent', 'selector': 'app-tasks'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TasksComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                e2e/src/app.po.ts\n            \n            \n                class\n            \n            \n                AppPage\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            \n                component\n            \n            \n                AppComponent\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/core/models/deserializable.ts\n            \n            \n                interface\n            \n            \n                Deserializable\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/core/models/module.ts\n            \n            \n                class\n            \n            \n                ConfigsSchema\n            \n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/core/models/module.ts\n            \n            \n                class\n            \n            \n                Module\n            \n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/core/models/module.ts\n            \n            \n                class\n            \n            \n                StatusSchema\n            \n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/core/models/record.ts\n            \n            \n                class\n            \n            \n                Record\n            \n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/core/models/task.ts\n            \n            \n                class\n            \n            \n                Task\n            \n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/core/services/api-mock.service.ts\n            \n            \n                class\n            \n            \n                ApiMockService\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/core/services/module.service.ts\n            \n            \n                injectable\n            \n            \n                ModuleService\n            \n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/app/core/services/module.service.ts\n            \n            \n                variable\n            \n            \n                httpOptions\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/services/record.service.ts\n            \n            \n                injectable\n            \n            \n                RecordService\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/core/services/task.service.ts\n            \n            \n                injectable\n            \n            \n                TaskService\n            \n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/core/services/task.service.ts\n            \n            \n                variable\n            \n            \n                httpOptions\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/home/home.component.ts\n            \n            \n                component\n            \n            \n                HomeComponent\n            \n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/modules/components/add-task/add-task.component.ts\n            \n            \n                component\n            \n            \n                AddTaskComponent\n            \n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/modules/components/configuration/configuration.component.ts\n            \n            \n                component\n            \n            \n                ConfigurationComponent\n            \n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/modules/components/dashboard/dashboard.component.ts\n            \n            \n                component\n            \n            \n                DashboardComponent\n            \n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/modules/components/historicals/historicals.component.ts\n            \n            \n                component\n            \n            \n                HistoricalsComponent\n            \n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                \n                src/app/modules/components/historicals/sparkline.component.ts\n            \n            \n                component\n            \n            \n                SparklineComponent\n            \n            \n                0 %\n                (0/27)\n            \n        \n        \n            \n                \n                src/app/modules/components/tasks/tasks.component.ts\n            \n            \n                component\n            \n            \n                TasksComponent\n            \n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/modules/modules.component.ts\n            \n            \n                component\n            \n            \n                ModulesComponent\n            \n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            \n                variable\n            \n            \n                context\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            \n                variable\n            \n            \n                require\n            \n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^6.1.10\n        \n            @angular/cdk : ^6.4.7\n        \n            @angular/common : ^6.1.0\n        \n            @angular/compiler : ^6.1.0\n        \n            @angular/core : ^6.1.0\n        \n            @angular/flex-layout : ^7.0.0-beta.19\n        \n            @angular/forms : ^6.1.0\n        \n            @angular/http : ^6.1.0\n        \n            @angular/material : ^6.4.7\n        \n            @angular/platform-browser : ^6.1.0\n        \n            @angular/platform-browser-dynamic : ^6.1.0\n        \n            @angular/router : ^6.1.0\n        \n            @swimlane/ngx-charts : ^9.0.0\n        \n            angular-in-memory-web-api : ^0.6.1\n        \n            angular5-csv : ^0.2.10\n        \n            core-js : ^2.5.4\n        \n            d3-shape : ^1.2.2\n        \n            hammerjs : ^2.0.8\n        \n            rxjs : ^6.2.2\n        \n            zone.js : ~0.8.26\n    \n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nAHydro\nThis project was generated with Angular CLI version 6.2.3.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory. Use the --prod flag for a production build.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via Protractor.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI README.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MaterialModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ModulesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ModulesRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_ModulesModule\n\n\n\ncluster_ModulesModule_declarations\n\n\n\ncluster_ModulesModule_imports\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nAppModule -->\n\nHomeComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nModuleService\n\nModuleService\n\nAppModule -->\n\nModuleService->AppModule\n\n\n\n\n\nRecordService\n\nRecordService\n\nAppModule -->\n\nRecordService->AppModule\n\n\n\n\n\nTaskService\n\nTaskService\n\nAppModule -->\n\nTaskService->AppModule\n\n\n\n\n\nAddTaskComponent\n\nAddTaskComponent\n\n\n\nModulesModule\n\nModulesModule\n\nModulesModule -->\n\nAddTaskComponent->ModulesModule\n\n\n\n\n\nConfigurationComponent\n\nConfigurationComponent\n\nModulesModule -->\n\nConfigurationComponent->ModulesModule\n\n\n\n\n\nDashboardComponent\n\nDashboardComponent\n\nModulesModule -->\n\nDashboardComponent->ModulesModule\n\n\n\n\n\nHistoricalsComponent\n\nHistoricalsComponent\n\nModulesModule -->\n\nHistoricalsComponent->ModulesModule\n\n\n\n\n\nModulesComponent\n\nModulesComponent\n\nModulesModule -->\n\nModulesComponent->ModulesModule\n\n\n\n\n\nSparklineComponent\n\nSparklineComponent\n\nModulesModule -->\n\nSparklineComponent->ModulesModule\n\n\n\n\n\nTasksComponent\n\nTasksComponent\n\nModulesModule -->\n\nTasksComponent->ModulesModule\n\n\n\n\n\nMaterialModule\n\nMaterialModule\n\nModulesModule -->\n\nMaterialModule->ModulesModule\n\n\n\n\n\nModulesRoutingModule\n\nModulesRoutingModule\n\nModulesModule -->\n\nModulesRoutingModule->ModulesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        5 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    9 Components\n                \n            \n        \n        \n            \n                \n                    \n                    3 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    7 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Interface\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        15 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            context   (src/.../test.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            httpOptions   (src/.../module.service.ts)\n                        \n                        \n                            httpOptions   (src/.../task.service.ts)\n                        \n                        \n                            require   (src/.../test.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/test.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            context\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        context:     \n\n                    \n                \n                    \n                        \n                            Default value : require.context('./', true, /\\.spec\\.ts$/)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            require\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        require:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/core/services/module.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            httpOptions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        httpOptions:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  headers: new HttpHeaders({ \"Content-Type\": \"application/json\" })\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/core/services/task.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            httpOptions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        httpOptions:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  headers: new HttpHeaders({\n    \"Content-Type\": \"application/json\"\n  })\n}\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
